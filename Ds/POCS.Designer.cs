//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace POCS.Ds {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("POCS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class POCS : System.Data.DataSet {
        
        private DeliveryPointsDataTable tableDeliveryPoints;
        
        private tblCurrencyDataTable tabletblCurrency;
        
        private CompanyDataTable tableCompany;
        
        private DetailswithOrderNODataTable tableDetailswithOrderNO;
        
        private vInvoiceVendorValueDataTable tablevInvoiceVendorValue;
        
        private VendorDataTable tableVendor;
        
        private OrderNumbersDataTable tableOrderNumbers;
        
        private tblUOMDataTable tabletblUOM;
        
        private tblChargetypeDataTable tabletblChargetype;
        
        private tblOrderTypeDataTable tabletblOrderType;
        
        private tblJobChargeDataTable tabletblJobCharge;
        
        private tblBuyerDataTable tabletblBuyer;
        
        private PO_HeaderDataTable tablePO_Header;
        
        private tblusersDataTable tabletblusers;
        
        private tblMSRStatusDataTable tabletblMSRStatus;
        
        private tblMSRReceiptsDataTable tabletblMSRReceipts;
        
        private MSRStatusDescDataTable tableMSRStatusDesc;
        
        private vPOdetailsCalculationDataTable tablevPOdetailsCalculation;
        
        private vPODetSummaryDataTable tablevPODetSummary;
        
        private tblTransmittalLogDataTable tabletblTransmittalLog;
        
        private tblInvoicesDataTable tabletblInvoices;
        
        private vMSR_POIssuedDataTable tablevMSR_POIssued;
        
        private vPOSummaryDataTable tablevPOSummary;
        
        private tblExpenseCodeDataTable tabletblExpenseCode;
        
        private tblItemCostDistributionDataTable tabletblItemCostDistribution;
        
        private PO_detailsDataTable tablePO_details;
        
        private tblAssetGroupDataTable tabletblAssetGroup;
        
        private vEARFDataTable tablevEARF;
        
        private tblExpenseAssetDataTable tabletblExpenseAsset;
        
        private tblUserGroupsDataTable tabletblUserGroups;
        
        private vItemCostDistributionSpendingDataTable tablevItemCostDistributionSpending;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POCS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected POCS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["DeliveryPoints"] != null)) {
                    base.Tables.Add(new DeliveryPointsDataTable(ds.Tables["DeliveryPoints"]));
                }
                if ((ds.Tables["tblCurrency"] != null)) {
                    base.Tables.Add(new tblCurrencyDataTable(ds.Tables["tblCurrency"]));
                }
                if ((ds.Tables["Company"] != null)) {
                    base.Tables.Add(new CompanyDataTable(ds.Tables["Company"]));
                }
                if ((ds.Tables["DetailswithOrderNO"] != null)) {
                    base.Tables.Add(new DetailswithOrderNODataTable(ds.Tables["DetailswithOrderNO"]));
                }
                if ((ds.Tables["vInvoiceVendorValue"] != null)) {
                    base.Tables.Add(new vInvoiceVendorValueDataTable(ds.Tables["vInvoiceVendorValue"]));
                }
                if ((ds.Tables["Vendor"] != null)) {
                    base.Tables.Add(new VendorDataTable(ds.Tables["Vendor"]));
                }
                if ((ds.Tables["OrderNumbers"] != null)) {
                    base.Tables.Add(new OrderNumbersDataTable(ds.Tables["OrderNumbers"]));
                }
                if ((ds.Tables["tblUOM"] != null)) {
                    base.Tables.Add(new tblUOMDataTable(ds.Tables["tblUOM"]));
                }
                if ((ds.Tables["tblChargetype"] != null)) {
                    base.Tables.Add(new tblChargetypeDataTable(ds.Tables["tblChargetype"]));
                }
                if ((ds.Tables["tblOrderType"] != null)) {
                    base.Tables.Add(new tblOrderTypeDataTable(ds.Tables["tblOrderType"]));
                }
                if ((ds.Tables["tblJobCharge"] != null)) {
                    base.Tables.Add(new tblJobChargeDataTable(ds.Tables["tblJobCharge"]));
                }
                if ((ds.Tables["tblBuyer"] != null)) {
                    base.Tables.Add(new tblBuyerDataTable(ds.Tables["tblBuyer"]));
                }
                if ((ds.Tables["PO_Header"] != null)) {
                    base.Tables.Add(new PO_HeaderDataTable(ds.Tables["PO_Header"]));
                }
                if ((ds.Tables["tblusers"] != null)) {
                    base.Tables.Add(new tblusersDataTable(ds.Tables["tblusers"]));
                }
                if ((ds.Tables["tblMSRStatus"] != null)) {
                    base.Tables.Add(new tblMSRStatusDataTable(ds.Tables["tblMSRStatus"]));
                }
                if ((ds.Tables["tblMSRReceipts"] != null)) {
                    base.Tables.Add(new tblMSRReceiptsDataTable(ds.Tables["tblMSRReceipts"]));
                }
                if ((ds.Tables["MSRStatusDesc"] != null)) {
                    base.Tables.Add(new MSRStatusDescDataTable(ds.Tables["MSRStatusDesc"]));
                }
                if ((ds.Tables["vPOdetailsCalculation"] != null)) {
                    base.Tables.Add(new vPOdetailsCalculationDataTable(ds.Tables["vPOdetailsCalculation"]));
                }
                if ((ds.Tables["vPODetSummary"] != null)) {
                    base.Tables.Add(new vPODetSummaryDataTable(ds.Tables["vPODetSummary"]));
                }
                if ((ds.Tables["tblTransmittalLog"] != null)) {
                    base.Tables.Add(new tblTransmittalLogDataTable(ds.Tables["tblTransmittalLog"]));
                }
                if ((ds.Tables["tblInvoices"] != null)) {
                    base.Tables.Add(new tblInvoicesDataTable(ds.Tables["tblInvoices"]));
                }
                if ((ds.Tables["vMSR_POIssued"] != null)) {
                    base.Tables.Add(new vMSR_POIssuedDataTable(ds.Tables["vMSR_POIssued"]));
                }
                if ((ds.Tables["vPOSummary"] != null)) {
                    base.Tables.Add(new vPOSummaryDataTable(ds.Tables["vPOSummary"]));
                }
                if ((ds.Tables["tblExpenseCode"] != null)) {
                    base.Tables.Add(new tblExpenseCodeDataTable(ds.Tables["tblExpenseCode"]));
                }
                if ((ds.Tables["tblItemCostDistribution"] != null)) {
                    base.Tables.Add(new tblItemCostDistributionDataTable(ds.Tables["tblItemCostDistribution"]));
                }
                if ((ds.Tables["PO_details"] != null)) {
                    base.Tables.Add(new PO_detailsDataTable(ds.Tables["PO_details"]));
                }
                if ((ds.Tables["tblAssetGroup"] != null)) {
                    base.Tables.Add(new tblAssetGroupDataTable(ds.Tables["tblAssetGroup"]));
                }
                if ((ds.Tables["vEARF"] != null)) {
                    base.Tables.Add(new vEARFDataTable(ds.Tables["vEARF"]));
                }
                if ((ds.Tables["tblExpenseAsset"] != null)) {
                    base.Tables.Add(new tblExpenseAssetDataTable(ds.Tables["tblExpenseAsset"]));
                }
                if ((ds.Tables["tblUserGroups"] != null)) {
                    base.Tables.Add(new tblUserGroupsDataTable(ds.Tables["tblUserGroups"]));
                }
                if ((ds.Tables["vItemCostDistributionSpending"] != null)) {
                    base.Tables.Add(new vItemCostDistributionSpendingDataTable(ds.Tables["vItemCostDistributionSpending"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeliveryPointsDataTable DeliveryPoints {
            get {
                return this.tableDeliveryPoints;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblCurrencyDataTable tblCurrency {
            get {
                return this.tabletblCurrency;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyDataTable Company {
            get {
                return this.tableCompany;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DetailswithOrderNODataTable DetailswithOrderNO {
            get {
                return this.tableDetailswithOrderNO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vInvoiceVendorValueDataTable vInvoiceVendorValue {
            get {
                return this.tablevInvoiceVendorValue;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VendorDataTable Vendor {
            get {
                return this.tableVendor;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderNumbersDataTable OrderNumbers {
            get {
                return this.tableOrderNumbers;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblUOMDataTable tblUOM {
            get {
                return this.tabletblUOM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblChargetypeDataTable tblChargetype {
            get {
                return this.tabletblChargetype;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblOrderTypeDataTable tblOrderType {
            get {
                return this.tabletblOrderType;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblJobChargeDataTable tblJobCharge {
            get {
                return this.tabletblJobCharge;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblBuyerDataTable tblBuyer {
            get {
                return this.tabletblBuyer;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PO_HeaderDataTable PO_Header {
            get {
                return this.tablePO_Header;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblusersDataTable tblusers {
            get {
                return this.tabletblusers;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMSRStatusDataTable tblMSRStatus {
            get {
                return this.tabletblMSRStatus;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMSRReceiptsDataTable tblMSRReceipts {
            get {
                return this.tabletblMSRReceipts;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MSRStatusDescDataTable MSRStatusDesc {
            get {
                return this.tableMSRStatusDesc;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vPOdetailsCalculationDataTable vPOdetailsCalculation {
            get {
                return this.tablevPOdetailsCalculation;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vPODetSummaryDataTable vPODetSummary {
            get {
                return this.tablevPODetSummary;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblTransmittalLogDataTable tblTransmittalLog {
            get {
                return this.tabletblTransmittalLog;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblInvoicesDataTable tblInvoices {
            get {
                return this.tabletblInvoices;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vMSR_POIssuedDataTable vMSR_POIssued {
            get {
                return this.tablevMSR_POIssued;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vPOSummaryDataTable vPOSummary {
            get {
                return this.tablevPOSummary;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblExpenseCodeDataTable tblExpenseCode {
            get {
                return this.tabletblExpenseCode;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblItemCostDistributionDataTable tblItemCostDistribution {
            get {
                return this.tabletblItemCostDistribution;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PO_detailsDataTable PO_details {
            get {
                return this.tablePO_details;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblAssetGroupDataTable tblAssetGroup {
            get {
                return this.tabletblAssetGroup;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vEARFDataTable vEARF {
            get {
                return this.tablevEARF;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblExpenseAssetDataTable tblExpenseAsset {
            get {
                return this.tabletblExpenseAsset;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblUserGroupsDataTable tblUserGroups {
            get {
                return this.tabletblUserGroups;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vItemCostDistributionSpendingDataTable vItemCostDistributionSpending {
            get {
                return this.tablevItemCostDistributionSpending;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            POCS cln = ((POCS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DeliveryPoints"] != null)) {
                    base.Tables.Add(new DeliveryPointsDataTable(ds.Tables["DeliveryPoints"]));
                }
                if ((ds.Tables["tblCurrency"] != null)) {
                    base.Tables.Add(new tblCurrencyDataTable(ds.Tables["tblCurrency"]));
                }
                if ((ds.Tables["Company"] != null)) {
                    base.Tables.Add(new CompanyDataTable(ds.Tables["Company"]));
                }
                if ((ds.Tables["DetailswithOrderNO"] != null)) {
                    base.Tables.Add(new DetailswithOrderNODataTable(ds.Tables["DetailswithOrderNO"]));
                }
                if ((ds.Tables["vInvoiceVendorValue"] != null)) {
                    base.Tables.Add(new vInvoiceVendorValueDataTable(ds.Tables["vInvoiceVendorValue"]));
                }
                if ((ds.Tables["Vendor"] != null)) {
                    base.Tables.Add(new VendorDataTable(ds.Tables["Vendor"]));
                }
                if ((ds.Tables["OrderNumbers"] != null)) {
                    base.Tables.Add(new OrderNumbersDataTable(ds.Tables["OrderNumbers"]));
                }
                if ((ds.Tables["tblUOM"] != null)) {
                    base.Tables.Add(new tblUOMDataTable(ds.Tables["tblUOM"]));
                }
                if ((ds.Tables["tblChargetype"] != null)) {
                    base.Tables.Add(new tblChargetypeDataTable(ds.Tables["tblChargetype"]));
                }
                if ((ds.Tables["tblOrderType"] != null)) {
                    base.Tables.Add(new tblOrderTypeDataTable(ds.Tables["tblOrderType"]));
                }
                if ((ds.Tables["tblJobCharge"] != null)) {
                    base.Tables.Add(new tblJobChargeDataTable(ds.Tables["tblJobCharge"]));
                }
                if ((ds.Tables["tblBuyer"] != null)) {
                    base.Tables.Add(new tblBuyerDataTable(ds.Tables["tblBuyer"]));
                }
                if ((ds.Tables["PO_Header"] != null)) {
                    base.Tables.Add(new PO_HeaderDataTable(ds.Tables["PO_Header"]));
                }
                if ((ds.Tables["tblusers"] != null)) {
                    base.Tables.Add(new tblusersDataTable(ds.Tables["tblusers"]));
                }
                if ((ds.Tables["tblMSRStatus"] != null)) {
                    base.Tables.Add(new tblMSRStatusDataTable(ds.Tables["tblMSRStatus"]));
                }
                if ((ds.Tables["tblMSRReceipts"] != null)) {
                    base.Tables.Add(new tblMSRReceiptsDataTable(ds.Tables["tblMSRReceipts"]));
                }
                if ((ds.Tables["MSRStatusDesc"] != null)) {
                    base.Tables.Add(new MSRStatusDescDataTable(ds.Tables["MSRStatusDesc"]));
                }
                if ((ds.Tables["vPOdetailsCalculation"] != null)) {
                    base.Tables.Add(new vPOdetailsCalculationDataTable(ds.Tables["vPOdetailsCalculation"]));
                }
                if ((ds.Tables["vPODetSummary"] != null)) {
                    base.Tables.Add(new vPODetSummaryDataTable(ds.Tables["vPODetSummary"]));
                }
                if ((ds.Tables["tblTransmittalLog"] != null)) {
                    base.Tables.Add(new tblTransmittalLogDataTable(ds.Tables["tblTransmittalLog"]));
                }
                if ((ds.Tables["tblInvoices"] != null)) {
                    base.Tables.Add(new tblInvoicesDataTable(ds.Tables["tblInvoices"]));
                }
                if ((ds.Tables["vMSR_POIssued"] != null)) {
                    base.Tables.Add(new vMSR_POIssuedDataTable(ds.Tables["vMSR_POIssued"]));
                }
                if ((ds.Tables["vPOSummary"] != null)) {
                    base.Tables.Add(new vPOSummaryDataTable(ds.Tables["vPOSummary"]));
                }
                if ((ds.Tables["tblExpenseCode"] != null)) {
                    base.Tables.Add(new tblExpenseCodeDataTable(ds.Tables["tblExpenseCode"]));
                }
                if ((ds.Tables["tblItemCostDistribution"] != null)) {
                    base.Tables.Add(new tblItemCostDistributionDataTable(ds.Tables["tblItemCostDistribution"]));
                }
                if ((ds.Tables["PO_details"] != null)) {
                    base.Tables.Add(new PO_detailsDataTable(ds.Tables["PO_details"]));
                }
                if ((ds.Tables["tblAssetGroup"] != null)) {
                    base.Tables.Add(new tblAssetGroupDataTable(ds.Tables["tblAssetGroup"]));
                }
                if ((ds.Tables["vEARF"] != null)) {
                    base.Tables.Add(new vEARFDataTable(ds.Tables["vEARF"]));
                }
                if ((ds.Tables["tblExpenseAsset"] != null)) {
                    base.Tables.Add(new tblExpenseAssetDataTable(ds.Tables["tblExpenseAsset"]));
                }
                if ((ds.Tables["tblUserGroups"] != null)) {
                    base.Tables.Add(new tblUserGroupsDataTable(ds.Tables["tblUserGroups"]));
                }
                if ((ds.Tables["vItemCostDistributionSpending"] != null)) {
                    base.Tables.Add(new vItemCostDistributionSpendingDataTable(ds.Tables["vItemCostDistributionSpending"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDeliveryPoints = ((DeliveryPointsDataTable)(base.Tables["DeliveryPoints"]));
            if ((initTable == true)) {
                if ((this.tableDeliveryPoints != null)) {
                    this.tableDeliveryPoints.InitVars();
                }
            }
            this.tabletblCurrency = ((tblCurrencyDataTable)(base.Tables["tblCurrency"]));
            if ((initTable == true)) {
                if ((this.tabletblCurrency != null)) {
                    this.tabletblCurrency.InitVars();
                }
            }
            this.tableCompany = ((CompanyDataTable)(base.Tables["Company"]));
            if ((initTable == true)) {
                if ((this.tableCompany != null)) {
                    this.tableCompany.InitVars();
                }
            }
            this.tableDetailswithOrderNO = ((DetailswithOrderNODataTable)(base.Tables["DetailswithOrderNO"]));
            if ((initTable == true)) {
                if ((this.tableDetailswithOrderNO != null)) {
                    this.tableDetailswithOrderNO.InitVars();
                }
            }
            this.tablevInvoiceVendorValue = ((vInvoiceVendorValueDataTable)(base.Tables["vInvoiceVendorValue"]));
            if ((initTable == true)) {
                if ((this.tablevInvoiceVendorValue != null)) {
                    this.tablevInvoiceVendorValue.InitVars();
                }
            }
            this.tableVendor = ((VendorDataTable)(base.Tables["Vendor"]));
            if ((initTable == true)) {
                if ((this.tableVendor != null)) {
                    this.tableVendor.InitVars();
                }
            }
            this.tableOrderNumbers = ((OrderNumbersDataTable)(base.Tables["OrderNumbers"]));
            if ((initTable == true)) {
                if ((this.tableOrderNumbers != null)) {
                    this.tableOrderNumbers.InitVars();
                }
            }
            this.tabletblUOM = ((tblUOMDataTable)(base.Tables["tblUOM"]));
            if ((initTable == true)) {
                if ((this.tabletblUOM != null)) {
                    this.tabletblUOM.InitVars();
                }
            }
            this.tabletblChargetype = ((tblChargetypeDataTable)(base.Tables["tblChargetype"]));
            if ((initTable == true)) {
                if ((this.tabletblChargetype != null)) {
                    this.tabletblChargetype.InitVars();
                }
            }
            this.tabletblOrderType = ((tblOrderTypeDataTable)(base.Tables["tblOrderType"]));
            if ((initTable == true)) {
                if ((this.tabletblOrderType != null)) {
                    this.tabletblOrderType.InitVars();
                }
            }
            this.tabletblJobCharge = ((tblJobChargeDataTable)(base.Tables["tblJobCharge"]));
            if ((initTable == true)) {
                if ((this.tabletblJobCharge != null)) {
                    this.tabletblJobCharge.InitVars();
                }
            }
            this.tabletblBuyer = ((tblBuyerDataTable)(base.Tables["tblBuyer"]));
            if ((initTable == true)) {
                if ((this.tabletblBuyer != null)) {
                    this.tabletblBuyer.InitVars();
                }
            }
            this.tablePO_Header = ((PO_HeaderDataTable)(base.Tables["PO_Header"]));
            if ((initTable == true)) {
                if ((this.tablePO_Header != null)) {
                    this.tablePO_Header.InitVars();
                }
            }
            this.tabletblusers = ((tblusersDataTable)(base.Tables["tblusers"]));
            if ((initTable == true)) {
                if ((this.tabletblusers != null)) {
                    this.tabletblusers.InitVars();
                }
            }
            this.tabletblMSRStatus = ((tblMSRStatusDataTable)(base.Tables["tblMSRStatus"]));
            if ((initTable == true)) {
                if ((this.tabletblMSRStatus != null)) {
                    this.tabletblMSRStatus.InitVars();
                }
            }
            this.tabletblMSRReceipts = ((tblMSRReceiptsDataTable)(base.Tables["tblMSRReceipts"]));
            if ((initTable == true)) {
                if ((this.tabletblMSRReceipts != null)) {
                    this.tabletblMSRReceipts.InitVars();
                }
            }
            this.tableMSRStatusDesc = ((MSRStatusDescDataTable)(base.Tables["MSRStatusDesc"]));
            if ((initTable == true)) {
                if ((this.tableMSRStatusDesc != null)) {
                    this.tableMSRStatusDesc.InitVars();
                }
            }
            this.tablevPOdetailsCalculation = ((vPOdetailsCalculationDataTable)(base.Tables["vPOdetailsCalculation"]));
            if ((initTable == true)) {
                if ((this.tablevPOdetailsCalculation != null)) {
                    this.tablevPOdetailsCalculation.InitVars();
                }
            }
            this.tablevPODetSummary = ((vPODetSummaryDataTable)(base.Tables["vPODetSummary"]));
            if ((initTable == true)) {
                if ((this.tablevPODetSummary != null)) {
                    this.tablevPODetSummary.InitVars();
                }
            }
            this.tabletblTransmittalLog = ((tblTransmittalLogDataTable)(base.Tables["tblTransmittalLog"]));
            if ((initTable == true)) {
                if ((this.tabletblTransmittalLog != null)) {
                    this.tabletblTransmittalLog.InitVars();
                }
            }
            this.tabletblInvoices = ((tblInvoicesDataTable)(base.Tables["tblInvoices"]));
            if ((initTable == true)) {
                if ((this.tabletblInvoices != null)) {
                    this.tabletblInvoices.InitVars();
                }
            }
            this.tablevMSR_POIssued = ((vMSR_POIssuedDataTable)(base.Tables["vMSR_POIssued"]));
            if ((initTable == true)) {
                if ((this.tablevMSR_POIssued != null)) {
                    this.tablevMSR_POIssued.InitVars();
                }
            }
            this.tablevPOSummary = ((vPOSummaryDataTable)(base.Tables["vPOSummary"]));
            if ((initTable == true)) {
                if ((this.tablevPOSummary != null)) {
                    this.tablevPOSummary.InitVars();
                }
            }
            this.tabletblExpenseCode = ((tblExpenseCodeDataTable)(base.Tables["tblExpenseCode"]));
            if ((initTable == true)) {
                if ((this.tabletblExpenseCode != null)) {
                    this.tabletblExpenseCode.InitVars();
                }
            }
            this.tabletblItemCostDistribution = ((tblItemCostDistributionDataTable)(base.Tables["tblItemCostDistribution"]));
            if ((initTable == true)) {
                if ((this.tabletblItemCostDistribution != null)) {
                    this.tabletblItemCostDistribution.InitVars();
                }
            }
            this.tablePO_details = ((PO_detailsDataTable)(base.Tables["PO_details"]));
            if ((initTable == true)) {
                if ((this.tablePO_details != null)) {
                    this.tablePO_details.InitVars();
                }
            }
            this.tabletblAssetGroup = ((tblAssetGroupDataTable)(base.Tables["tblAssetGroup"]));
            if ((initTable == true)) {
                if ((this.tabletblAssetGroup != null)) {
                    this.tabletblAssetGroup.InitVars();
                }
            }
            this.tablevEARF = ((vEARFDataTable)(base.Tables["vEARF"]));
            if ((initTable == true)) {
                if ((this.tablevEARF != null)) {
                    this.tablevEARF.InitVars();
                }
            }
            this.tabletblExpenseAsset = ((tblExpenseAssetDataTable)(base.Tables["tblExpenseAsset"]));
            if ((initTable == true)) {
                if ((this.tabletblExpenseAsset != null)) {
                    this.tabletblExpenseAsset.InitVars();
                }
            }
            this.tabletblUserGroups = ((tblUserGroupsDataTable)(base.Tables["tblUserGroups"]));
            if ((initTable == true)) {
                if ((this.tabletblUserGroups != null)) {
                    this.tabletblUserGroups.InitVars();
                }
            }
            this.tablevItemCostDistributionSpending = ((vItemCostDistributionSpendingDataTable)(base.Tables["vItemCostDistributionSpending"]));
            if ((initTable == true)) {
                if ((this.tablevItemCostDistributionSpending != null)) {
                    this.tablevItemCostDistributionSpending.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "POCS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/POCS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDeliveryPoints = new DeliveryPointsDataTable();
            base.Tables.Add(this.tableDeliveryPoints);
            this.tabletblCurrency = new tblCurrencyDataTable();
            base.Tables.Add(this.tabletblCurrency);
            this.tableCompany = new CompanyDataTable();
            base.Tables.Add(this.tableCompany);
            this.tableDetailswithOrderNO = new DetailswithOrderNODataTable();
            base.Tables.Add(this.tableDetailswithOrderNO);
            this.tablevInvoiceVendorValue = new vInvoiceVendorValueDataTable();
            base.Tables.Add(this.tablevInvoiceVendorValue);
            this.tableVendor = new VendorDataTable();
            base.Tables.Add(this.tableVendor);
            this.tableOrderNumbers = new OrderNumbersDataTable();
            base.Tables.Add(this.tableOrderNumbers);
            this.tabletblUOM = new tblUOMDataTable();
            base.Tables.Add(this.tabletblUOM);
            this.tabletblChargetype = new tblChargetypeDataTable();
            base.Tables.Add(this.tabletblChargetype);
            this.tabletblOrderType = new tblOrderTypeDataTable();
            base.Tables.Add(this.tabletblOrderType);
            this.tabletblJobCharge = new tblJobChargeDataTable();
            base.Tables.Add(this.tabletblJobCharge);
            this.tabletblBuyer = new tblBuyerDataTable();
            base.Tables.Add(this.tabletblBuyer);
            this.tablePO_Header = new PO_HeaderDataTable();
            base.Tables.Add(this.tablePO_Header);
            this.tabletblusers = new tblusersDataTable();
            base.Tables.Add(this.tabletblusers);
            this.tabletblMSRStatus = new tblMSRStatusDataTable();
            base.Tables.Add(this.tabletblMSRStatus);
            this.tabletblMSRReceipts = new tblMSRReceiptsDataTable();
            base.Tables.Add(this.tabletblMSRReceipts);
            this.tableMSRStatusDesc = new MSRStatusDescDataTable();
            base.Tables.Add(this.tableMSRStatusDesc);
            this.tablevPOdetailsCalculation = new vPOdetailsCalculationDataTable();
            base.Tables.Add(this.tablevPOdetailsCalculation);
            this.tablevPODetSummary = new vPODetSummaryDataTable();
            base.Tables.Add(this.tablevPODetSummary);
            this.tabletblTransmittalLog = new tblTransmittalLogDataTable();
            base.Tables.Add(this.tabletblTransmittalLog);
            this.tabletblInvoices = new tblInvoicesDataTable();
            base.Tables.Add(this.tabletblInvoices);
            this.tablevMSR_POIssued = new vMSR_POIssuedDataTable();
            base.Tables.Add(this.tablevMSR_POIssued);
            this.tablevPOSummary = new vPOSummaryDataTable();
            base.Tables.Add(this.tablevPOSummary);
            this.tabletblExpenseCode = new tblExpenseCodeDataTable();
            base.Tables.Add(this.tabletblExpenseCode);
            this.tabletblItemCostDistribution = new tblItemCostDistributionDataTable();
            base.Tables.Add(this.tabletblItemCostDistribution);
            this.tablePO_details = new PO_detailsDataTable();
            base.Tables.Add(this.tablePO_details);
            this.tabletblAssetGroup = new tblAssetGroupDataTable();
            base.Tables.Add(this.tabletblAssetGroup);
            this.tablevEARF = new vEARFDataTable();
            base.Tables.Add(this.tablevEARF);
            this.tabletblExpenseAsset = new tblExpenseAssetDataTable();
            base.Tables.Add(this.tabletblExpenseAsset);
            this.tabletblUserGroups = new tblUserGroupsDataTable();
            base.Tables.Add(this.tabletblUserGroups);
            this.tablevItemCostDistributionSpending = new vItemCostDistributionSpendingDataTable();
            base.Tables.Add(this.tablevItemCostDistributionSpending);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeliveryPoints() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblCurrency() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompany() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDetailswithOrderNO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevInvoiceVendorValue() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVendor() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderNumbers() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblUOM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblChargetype() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblOrderType() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblJobCharge() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblBuyer() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePO_Header() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblusers() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblMSRStatus() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblMSRReceipts() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMSRStatusDesc() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevPOdetailsCalculation() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevPODetSummary() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblTransmittalLog() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblInvoices() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevMSR_POIssued() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevPOSummary() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblExpenseCode() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblItemCostDistribution() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePO_details() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblAssetGroup() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevEARF() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblExpenseAsset() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblUserGroups() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevItemCostDistributionSpending() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            POCS ds = new POCS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void DeliveryPointsRowChangeEventHandler(object sender, DeliveryPointsRowChangeEvent e);
        
        public delegate void tblCurrencyRowChangeEventHandler(object sender, tblCurrencyRowChangeEvent e);
        
        public delegate void CompanyRowChangeEventHandler(object sender, CompanyRowChangeEvent e);
        
        public delegate void DetailswithOrderNORowChangeEventHandler(object sender, DetailswithOrderNORowChangeEvent e);
        
        public delegate void vInvoiceVendorValueRowChangeEventHandler(object sender, vInvoiceVendorValueRowChangeEvent e);
        
        public delegate void VendorRowChangeEventHandler(object sender, VendorRowChangeEvent e);
        
        public delegate void OrderNumbersRowChangeEventHandler(object sender, OrderNumbersRowChangeEvent e);
        
        public delegate void tblUOMRowChangeEventHandler(object sender, tblUOMRowChangeEvent e);
        
        public delegate void tblChargetypeRowChangeEventHandler(object sender, tblChargetypeRowChangeEvent e);
        
        public delegate void tblOrderTypeRowChangeEventHandler(object sender, tblOrderTypeRowChangeEvent e);
        
        public delegate void tblJobChargeRowChangeEventHandler(object sender, tblJobChargeRowChangeEvent e);
        
        public delegate void tblBuyerRowChangeEventHandler(object sender, tblBuyerRowChangeEvent e);
        
        public delegate void PO_HeaderRowChangeEventHandler(object sender, PO_HeaderRowChangeEvent e);
        
        public delegate void tblusersRowChangeEventHandler(object sender, tblusersRowChangeEvent e);
        
        public delegate void tblMSRStatusRowChangeEventHandler(object sender, tblMSRStatusRowChangeEvent e);
        
        public delegate void tblMSRReceiptsRowChangeEventHandler(object sender, tblMSRReceiptsRowChangeEvent e);
        
        public delegate void MSRStatusDescRowChangeEventHandler(object sender, MSRStatusDescRowChangeEvent e);
        
        public delegate void vPOdetailsCalculationRowChangeEventHandler(object sender, vPOdetailsCalculationRowChangeEvent e);
        
        public delegate void vPODetSummaryRowChangeEventHandler(object sender, vPODetSummaryRowChangeEvent e);
        
        public delegate void tblTransmittalLogRowChangeEventHandler(object sender, tblTransmittalLogRowChangeEvent e);
        
        public delegate void tblInvoicesRowChangeEventHandler(object sender, tblInvoicesRowChangeEvent e);
        
        public delegate void vMSR_POIssuedRowChangeEventHandler(object sender, vMSR_POIssuedRowChangeEvent e);
        
        public delegate void vPOSummaryRowChangeEventHandler(object sender, vPOSummaryRowChangeEvent e);
        
        public delegate void tblExpenseCodeRowChangeEventHandler(object sender, tblExpenseCodeRowChangeEvent e);
        
        public delegate void tblItemCostDistributionRowChangeEventHandler(object sender, tblItemCostDistributionRowChangeEvent e);
        
        public delegate void PO_detailsRowChangeEventHandler(object sender, PO_detailsRowChangeEvent e);
        
        public delegate void tblAssetGroupRowChangeEventHandler(object sender, tblAssetGroupRowChangeEvent e);
        
        public delegate void vEARFRowChangeEventHandler(object sender, vEARFRowChangeEvent e);
        
        public delegate void tblExpenseAssetRowChangeEventHandler(object sender, tblExpenseAssetRowChangeEvent e);
        
        public delegate void tblUserGroupsRowChangeEventHandler(object sender, tblUserGroupsRowChangeEvent e);
        
        public delegate void vItemCostDistributionSpendingRowChangeEventHandler(object sender, vItemCostDistributionSpendingRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeliveryPointsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDeliveryPointID;
            
            private System.Data.DataColumn columnDeliveryPointName;
            
            private System.Data.DataColumn columnDeliveryPointAddress;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsDataTable() {
                this.TableName = "DeliveryPoints";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryPointsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeliveryPointsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryPointIDColumn {
                get {
                    return this.columnDeliveryPointID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryPointNameColumn {
                get {
                    return this.columnDeliveryPointName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryPointAddressColumn {
                get {
                    return this.columnDeliveryPointAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsRow this[int index] {
                get {
                    return ((DeliveryPointsRow)(this.Rows[index]));
                }
            }
            
            public event DeliveryPointsRowChangeEventHandler DeliveryPointsRowChanging;
            
            public event DeliveryPointsRowChangeEventHandler DeliveryPointsRowChanged;
            
            public event DeliveryPointsRowChangeEventHandler DeliveryPointsRowDeleting;
            
            public event DeliveryPointsRowChangeEventHandler DeliveryPointsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeliveryPointsRow(DeliveryPointsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsRow AddDeliveryPointsRow(string DeliveryPointName, string DeliveryPointAddress) {
                DeliveryPointsRow rowDeliveryPointsRow = ((DeliveryPointsRow)(this.NewRow()));
                rowDeliveryPointsRow.ItemArray = new object[] {
                        null,
                        DeliveryPointName,
                        DeliveryPointAddress};
                this.Rows.Add(rowDeliveryPointsRow);
                return rowDeliveryPointsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsRow FindByDeliveryPointID(decimal DeliveryPointID) {
                return ((DeliveryPointsRow)(this.Rows.Find(new object[] {
                            DeliveryPointID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DeliveryPointsDataTable cln = ((DeliveryPointsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DeliveryPointsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeliveryPointID = base.Columns["DeliveryPointID"];
                this.columnDeliveryPointName = base.Columns["DeliveryPointName"];
                this.columnDeliveryPointAddress = base.Columns["DeliveryPointAddress"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeliveryPointID = new System.Data.DataColumn("DeliveryPointID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPointID);
                this.columnDeliveryPointName = new System.Data.DataColumn("DeliveryPointName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPointName);
                this.columnDeliveryPointAddress = new System.Data.DataColumn("DeliveryPointAddress", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPointAddress);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDeliveryPointID}, true));
                this.columnDeliveryPointID.AutoIncrement = true;
                this.columnDeliveryPointID.AllowDBNull = false;
                this.columnDeliveryPointID.ReadOnly = true;
                this.columnDeliveryPointID.Unique = true;
                this.columnDeliveryPointName.AllowDBNull = false;
                this.columnDeliveryPointName.MaxLength = 50;
                this.columnDeliveryPointAddress.AllowDBNull = false;
                this.columnDeliveryPointAddress.MaxLength = 1000;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsRow NewDeliveryPointsRow() {
                return ((DeliveryPointsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DeliveryPointsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DeliveryPointsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeliveryPointsRowChanged != null)) {
                    this.DeliveryPointsRowChanged(this, new DeliveryPointsRowChangeEvent(((DeliveryPointsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeliveryPointsRowChanging != null)) {
                    this.DeliveryPointsRowChanging(this, new DeliveryPointsRowChangeEvent(((DeliveryPointsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeliveryPointsRowDeleted != null)) {
                    this.DeliveryPointsRowDeleted(this, new DeliveryPointsRowChangeEvent(((DeliveryPointsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeliveryPointsRowDeleting != null)) {
                    this.DeliveryPointsRowDeleting(this, new DeliveryPointsRowChangeEvent(((DeliveryPointsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeliveryPointsRow(DeliveryPointsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeliveryPointsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblCurrencyDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCurrencyID;
            
            private System.Data.DataColumn columnCurrency;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyDataTable() {
                this.TableName = "tblCurrency";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCurrencyDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblCurrencyDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyRow this[int index] {
                get {
                    return ((tblCurrencyRow)(this.Rows[index]));
                }
            }
            
            public event tblCurrencyRowChangeEventHandler tblCurrencyRowChanging;
            
            public event tblCurrencyRowChangeEventHandler tblCurrencyRowChanged;
            
            public event tblCurrencyRowChangeEventHandler tblCurrencyRowDeleting;
            
            public event tblCurrencyRowChangeEventHandler tblCurrencyRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblCurrencyRow(tblCurrencyRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyRow AddtblCurrencyRow(string Currency) {
                tblCurrencyRow rowtblCurrencyRow = ((tblCurrencyRow)(this.NewRow()));
                rowtblCurrencyRow.ItemArray = new object[] {
                        null,
                        Currency};
                this.Rows.Add(rowtblCurrencyRow);
                return rowtblCurrencyRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyRow FindByCurrencyID(decimal CurrencyID) {
                return ((tblCurrencyRow)(this.Rows.Find(new object[] {
                            CurrencyID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblCurrencyDataTable cln = ((tblCurrencyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblCurrencyDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnCurrency = base.Columns["Currency"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCurrencyID = new System.Data.DataColumn("CurrencyID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnCurrency = new System.Data.DataColumn("Currency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCurrencyID}, true));
                this.columnCurrencyID.AutoIncrement = true;
                this.columnCurrencyID.AllowDBNull = false;
                this.columnCurrencyID.ReadOnly = true;
                this.columnCurrencyID.Unique = true;
                this.columnCurrency.AllowDBNull = false;
                this.columnCurrency.MaxLength = 4;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyRow NewtblCurrencyRow() {
                return ((tblCurrencyRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblCurrencyRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblCurrencyRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblCurrencyRowChanged != null)) {
                    this.tblCurrencyRowChanged(this, new tblCurrencyRowChangeEvent(((tblCurrencyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblCurrencyRowChanging != null)) {
                    this.tblCurrencyRowChanging(this, new tblCurrencyRowChangeEvent(((tblCurrencyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblCurrencyRowDeleted != null)) {
                    this.tblCurrencyRowDeleted(this, new tblCurrencyRowChangeEvent(((tblCurrencyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblCurrencyRowDeleting != null)) {
                    this.tblCurrencyRowDeleting(this, new tblCurrencyRowChangeEvent(((tblCurrencyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblCurrencyRow(tblCurrencyRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblCurrencyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCompanyID;
            
            private System.Data.DataColumn columnCompanyName;
            
            private System.Data.DataColumn columnAddress;
            
            private System.Data.DataColumn columnregno;
            
            private System.Data.DataColumn columnPhone;
            
            private System.Data.DataColumn columnfax;
            
            private System.Data.DataColumn columnemail;
            
            private System.Data.DataColumn columnFlashMsg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyDataTable() {
                this.TableName = "Company";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn regnoColumn {
                get {
                    return this.columnregno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FlashMsgColumn {
                get {
                    return this.columnFlashMsg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow this[int index] {
                get {
                    return ((CompanyRow)(this.Rows[index]));
                }
            }
            
            public event CompanyRowChangeEventHandler CompanyRowChanging;
            
            public event CompanyRowChangeEventHandler CompanyRowChanged;
            
            public event CompanyRowChangeEventHandler CompanyRowDeleting;
            
            public event CompanyRowChangeEventHandler CompanyRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyRow(CompanyRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow AddCompanyRow(string CompanyName, string Address, string regno, string Phone, string fax, string email, string FlashMsg) {
                CompanyRow rowCompanyRow = ((CompanyRow)(this.NewRow()));
                rowCompanyRow.ItemArray = new object[] {
                        null,
                        CompanyName,
                        Address,
                        regno,
                        Phone,
                        fax,
                        email,
                        FlashMsg};
                this.Rows.Add(rowCompanyRow);
                return rowCompanyRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow FindByCompanyID(decimal CompanyID) {
                return ((CompanyRow)(this.Rows.Find(new object[] {
                            CompanyID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CompanyDataTable cln = ((CompanyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CompanyDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnAddress = base.Columns["Address"];
                this.columnregno = base.Columns["regno"];
                this.columnPhone = base.Columns["Phone"];
                this.columnfax = base.Columns["fax"];
                this.columnemail = base.Columns["email"];
                this.columnFlashMsg = base.Columns["FlashMsg"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompanyID = new System.Data.DataColumn("CompanyID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCompanyName = new System.Data.DataColumn("CompanyName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnAddress = new System.Data.DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnregno = new System.Data.DataColumn("regno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnregno);
                this.columnPhone = new System.Data.DataColumn("Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnfax = new System.Data.DataColumn("fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnemail = new System.Data.DataColumn("email", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnFlashMsg = new System.Data.DataColumn("FlashMsg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlashMsg);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCompanyID}, true));
                this.columnCompanyID.AutoIncrement = true;
                this.columnCompanyID.AllowDBNull = false;
                this.columnCompanyID.ReadOnly = true;
                this.columnCompanyID.Unique = true;
                this.columnCompanyName.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 255;
                this.columnAddress.AllowDBNull = false;
                this.columnAddress.MaxLength = 255;
                this.columnregno.AllowDBNull = false;
                this.columnregno.MaxLength = 10;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 16;
                this.columnfax.AllowDBNull = false;
                this.columnfax.MaxLength = 16;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 30;
                this.columnFlashMsg.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow NewCompanyRow() {
                return ((CompanyRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CompanyRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CompanyRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyRowChanged != null)) {
                    this.CompanyRowChanged(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyRowChanging != null)) {
                    this.CompanyRowChanging(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyRowDeleted != null)) {
                    this.CompanyRowDeleted(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyRowDeleting != null)) {
                    this.CompanyRowDeleting(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyRow(CompanyRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DetailswithOrderNODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnpo_orderNo;
            
            private System.Data.DataColumn columntype;
            
            private System.Data.DataColumn columnPO_DetailID;
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnUOM;
            
            private System.Data.DataColumn columnAccountCode;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnWithholding;
            
            private System.Data.DataColumn columnMSRNo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNODataTable() {
                this.TableName = "DetailswithOrderNO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailswithOrderNODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DetailswithOrderNODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn po_orderNoColumn {
                get {
                    return this.columnpo_orderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DetailIDColumn {
                get {
                    return this.columnPO_DetailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WithholdingColumn {
                get {
                    return this.columnWithholding;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNORow this[int index] {
                get {
                    return ((DetailswithOrderNORow)(this.Rows[index]));
                }
            }
            
            public event DetailswithOrderNORowChangeEventHandler DetailswithOrderNORowChanging;
            
            public event DetailswithOrderNORowChangeEventHandler DetailswithOrderNORowChanged;
            
            public event DetailswithOrderNORowChangeEventHandler DetailswithOrderNORowDeleting;
            
            public event DetailswithOrderNORowChangeEventHandler DetailswithOrderNORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDetailswithOrderNORow(DetailswithOrderNORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNORow AddDetailswithOrderNORow(decimal po_orderNo, string type, decimal POID, string ItemDescription, decimal Quantity, string UOM, string AccountCode, decimal UnitPrice, decimal Withholding, string MSRNo) {
                DetailswithOrderNORow rowDetailswithOrderNORow = ((DetailswithOrderNORow)(this.NewRow()));
                rowDetailswithOrderNORow.ItemArray = new object[] {
                        po_orderNo,
                        type,
                        null,
                        POID,
                        ItemDescription,
                        Quantity,
                        UOM,
                        AccountCode,
                        UnitPrice,
                        Withholding,
                        MSRNo};
                this.Rows.Add(rowDetailswithOrderNORow);
                return rowDetailswithOrderNORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNORow FindByPO_DetailID(decimal PO_DetailID) {
                return ((DetailswithOrderNORow)(this.Rows.Find(new object[] {
                            PO_DetailID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DetailswithOrderNODataTable cln = ((DetailswithOrderNODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DetailswithOrderNODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpo_orderNo = base.Columns["po_orderNo"];
                this.columntype = base.Columns["type"];
                this.columnPO_DetailID = base.Columns["PO_DetailID"];
                this.columnPOID = base.Columns["POID"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnWithholding = base.Columns["Withholding"];
                this.columnMSRNo = base.Columns["MSRNo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpo_orderNo = new System.Data.DataColumn("po_orderNo", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpo_orderNo);
                this.columntype = new System.Data.DataColumn("type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnPO_DetailID = new System.Data.DataColumn("PO_DetailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_DetailID);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new System.Data.DataColumn("UOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnAccountCode = new System.Data.DataColumn("AccountCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnWithholding = new System.Data.DataColumn("Withholding", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithholding);
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPO_DetailID}, true));
                this.columnpo_orderNo.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 2;
                this.columnPO_DetailID.AutoIncrement = true;
                this.columnPO_DetailID.AllowDBNull = false;
                this.columnPO_DetailID.ReadOnly = true;
                this.columnPO_DetailID.Unique = true;
                this.columnPOID.AllowDBNull = false;
                this.columnItemDescription.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 3000;
                this.columnQuantity.AllowDBNull = false;
                this.columnUOM.AllowDBNull = false;
                this.columnUOM.MaxLength = 10;
                this.columnAccountCode.AllowDBNull = false;
                this.columnAccountCode.MaxLength = 15;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnWithholding.AllowDBNull = false;
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 15;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNORow NewDetailswithOrderNORow() {
                return ((DetailswithOrderNORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DetailswithOrderNORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DetailswithOrderNORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetailswithOrderNORowChanged != null)) {
                    this.DetailswithOrderNORowChanged(this, new DetailswithOrderNORowChangeEvent(((DetailswithOrderNORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetailswithOrderNORowChanging != null)) {
                    this.DetailswithOrderNORowChanging(this, new DetailswithOrderNORowChangeEvent(((DetailswithOrderNORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetailswithOrderNORowDeleted != null)) {
                    this.DetailswithOrderNORowDeleted(this, new DetailswithOrderNORowChangeEvent(((DetailswithOrderNORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetailswithOrderNORowDeleting != null)) {
                    this.DetailswithOrderNORowDeleting(this, new DetailswithOrderNORowChangeEvent(((DetailswithOrderNORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDetailswithOrderNORow(DetailswithOrderNORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetailswithOrderNODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vInvoiceVendorValueDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnExprConcat;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vInvoiceVendorValueDataTable() {
                this.TableName = "vInvoiceVendorValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vInvoiceVendorValueDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vInvoiceVendorValueDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExprConcatColumn {
                get {
                    return this.columnExprConcat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vInvoiceVendorValueRow this[int index] {
                get {
                    return ((vInvoiceVendorValueRow)(this.Rows[index]));
                }
            }
            
            public event vInvoiceVendorValueRowChangeEventHandler vInvoiceVendorValueRowChanging;
            
            public event vInvoiceVendorValueRowChangeEventHandler vInvoiceVendorValueRowChanged;
            
            public event vInvoiceVendorValueRowChangeEventHandler vInvoiceVendorValueRowDeleting;
            
            public event vInvoiceVendorValueRowChangeEventHandler vInvoiceVendorValueRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvInvoiceVendorValueRow(vInvoiceVendorValueRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vInvoiceVendorValueRow AddvInvoiceVendorValueRow(string ExprConcat) {
                vInvoiceVendorValueRow rowvInvoiceVendorValueRow = ((vInvoiceVendorValueRow)(this.NewRow()));
                rowvInvoiceVendorValueRow.ItemArray = new object[] {
                        ExprConcat};
                this.Rows.Add(rowvInvoiceVendorValueRow);
                return rowvInvoiceVendorValueRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vInvoiceVendorValueDataTable cln = ((vInvoiceVendorValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vInvoiceVendorValueDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExprConcat = base.Columns["ExprConcat"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExprConcat = new System.Data.DataColumn("ExprConcat", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExprConcat);
                this.columnExprConcat.ReadOnly = true;
                this.columnExprConcat.MaxLength = 116;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vInvoiceVendorValueRow NewvInvoiceVendorValueRow() {
                return ((vInvoiceVendorValueRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vInvoiceVendorValueRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vInvoiceVendorValueRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vInvoiceVendorValueRowChanged != null)) {
                    this.vInvoiceVendorValueRowChanged(this, new vInvoiceVendorValueRowChangeEvent(((vInvoiceVendorValueRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vInvoiceVendorValueRowChanging != null)) {
                    this.vInvoiceVendorValueRowChanging(this, new vInvoiceVendorValueRowChangeEvent(((vInvoiceVendorValueRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vInvoiceVendorValueRowDeleted != null)) {
                    this.vInvoiceVendorValueRowDeleted(this, new vInvoiceVendorValueRowChangeEvent(((vInvoiceVendorValueRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vInvoiceVendorValueRowDeleting != null)) {
                    this.vInvoiceVendorValueRowDeleting(this, new vInvoiceVendorValueRowChangeEvent(((vInvoiceVendorValueRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevInvoiceVendorValueRow(vInvoiceVendorValueRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vInvoiceVendorValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VendorDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnvendor_id;
            
            private System.Data.DataColumn columnv_name;
            
            private System.Data.DataColumn columnv_contactperson;
            
            private System.Data.DataColumn columnv_address;
            
            private System.Data.DataColumn columnv_phone;
            
            private System.Data.DataColumn columnv_mobile;
            
            private System.Data.DataColumn columnv_zip;
            
            private System.Data.DataColumn columnv_fax;
            
            private System.Data.DataColumn columnv_email;
            
            private System.Data.DataColumn columnv_status;
            
            private System.Data.DataColumn columnv_city;
            
            private System.Data.DataColumn columnv_country;
            
            private System.Data.DataColumn columnv_regno;
            
            private System.Data.DataColumn columnrEGdATE;
            
            private System.Data.DataColumn columnVendorCode;
            
            private System.Data.DataColumn columnAVL;
            
            private System.Data.DataColumn columnv_state;
            
            private System.Data.DataColumn columnpaymentTerms;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorDataTable() {
                this.TableName = "Vendor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VendorDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VendorDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn vendor_idColumn {
                get {
                    return this.columnvendor_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_nameColumn {
                get {
                    return this.columnv_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_contactpersonColumn {
                get {
                    return this.columnv_contactperson;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_addressColumn {
                get {
                    return this.columnv_address;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_phoneColumn {
                get {
                    return this.columnv_phone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_mobileColumn {
                get {
                    return this.columnv_mobile;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_zipColumn {
                get {
                    return this.columnv_zip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_faxColumn {
                get {
                    return this.columnv_fax;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_emailColumn {
                get {
                    return this.columnv_email;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_statusColumn {
                get {
                    return this.columnv_status;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_cityColumn {
                get {
                    return this.columnv_city;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_countryColumn {
                get {
                    return this.columnv_country;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_regnoColumn {
                get {
                    return this.columnv_regno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rEGdATEColumn {
                get {
                    return this.columnrEGdATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AVLColumn {
                get {
                    return this.columnAVL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn v_stateColumn {
                get {
                    return this.columnv_state;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn paymentTermsColumn {
                get {
                    return this.columnpaymentTerms;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRow this[int index] {
                get {
                    return ((VendorRow)(this.Rows[index]));
                }
            }
            
            public event VendorRowChangeEventHandler VendorRowChanging;
            
            public event VendorRowChangeEventHandler VendorRowChanged;
            
            public event VendorRowChangeEventHandler VendorRowDeleting;
            
            public event VendorRowChangeEventHandler VendorRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVendorRow(VendorRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRow AddVendorRow(
                        string v_name, 
                        string v_contactperson, 
                        string v_address, 
                        string v_phone, 
                        string v_mobile, 
                        string v_zip, 
                        string v_fax, 
                        string v_email, 
                        string v_status, 
                        string v_city, 
                        string v_country, 
                        string v_regno, 
                        System.DateTime rEGdATE, 
                        string VendorCode, 
                        bool AVL, 
                        string v_state, 
                        int paymentTerms) {
                VendorRow rowVendorRow = ((VendorRow)(this.NewRow()));
                rowVendorRow.ItemArray = new object[] {
                        null,
                        v_name,
                        v_contactperson,
                        v_address,
                        v_phone,
                        v_mobile,
                        v_zip,
                        v_fax,
                        v_email,
                        v_status,
                        v_city,
                        v_country,
                        v_regno,
                        rEGdATE,
                        VendorCode,
                        AVL,
                        v_state,
                        paymentTerms};
                this.Rows.Add(rowVendorRow);
                return rowVendorRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRow FindByvendor_id(decimal vendor_id) {
                return ((VendorRow)(this.Rows.Find(new object[] {
                            vendor_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                VendorDataTable cln = ((VendorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new VendorDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnvendor_id = base.Columns["vendor_id"];
                this.columnv_name = base.Columns["v_name"];
                this.columnv_contactperson = base.Columns["v_contactperson"];
                this.columnv_address = base.Columns["v_address"];
                this.columnv_phone = base.Columns["v_phone"];
                this.columnv_mobile = base.Columns["v_mobile"];
                this.columnv_zip = base.Columns["v_zip"];
                this.columnv_fax = base.Columns["v_fax"];
                this.columnv_email = base.Columns["v_email"];
                this.columnv_status = base.Columns["v_status"];
                this.columnv_city = base.Columns["v_city"];
                this.columnv_country = base.Columns["v_country"];
                this.columnv_regno = base.Columns["v_regno"];
                this.columnrEGdATE = base.Columns["rEGdATE"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnAVL = base.Columns["AVL"];
                this.columnv_state = base.Columns["v_state"];
                this.columnpaymentTerms = base.Columns["paymentTerms"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnvendor_id = new System.Data.DataColumn("vendor_id", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvendor_id);
                this.columnv_name = new System.Data.DataColumn("v_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_name);
                this.columnv_contactperson = new System.Data.DataColumn("v_contactperson", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_contactperson);
                this.columnv_address = new System.Data.DataColumn("v_address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_address);
                this.columnv_phone = new System.Data.DataColumn("v_phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_phone);
                this.columnv_mobile = new System.Data.DataColumn("v_mobile", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_mobile);
                this.columnv_zip = new System.Data.DataColumn("v_zip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_zip);
                this.columnv_fax = new System.Data.DataColumn("v_fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_fax);
                this.columnv_email = new System.Data.DataColumn("v_email", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_email);
                this.columnv_status = new System.Data.DataColumn("v_status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_status);
                this.columnv_city = new System.Data.DataColumn("v_city", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_city);
                this.columnv_country = new System.Data.DataColumn("v_country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_country);
                this.columnv_regno = new System.Data.DataColumn("v_regno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_regno);
                this.columnrEGdATE = new System.Data.DataColumn("rEGdATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrEGdATE);
                this.columnVendorCode = new System.Data.DataColumn("VendorCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnAVL = new System.Data.DataColumn("AVL", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVL);
                this.columnv_state = new System.Data.DataColumn("v_state", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnv_state);
                this.columnpaymentTerms = new System.Data.DataColumn("paymentTerms", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentTerms);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnvendor_id}, true));
                this.columnvendor_id.AutoIncrement = true;
                this.columnvendor_id.AllowDBNull = false;
                this.columnvendor_id.ReadOnly = true;
                this.columnvendor_id.Unique = true;
                this.columnv_name.MaxLength = 75;
                this.columnv_contactperson.MaxLength = 75;
                this.columnv_address.MaxLength = 255;
                this.columnv_phone.MaxLength = 50;
                this.columnv_mobile.MaxLength = 50;
                this.columnv_zip.MaxLength = 50;
                this.columnv_fax.MaxLength = 50;
                this.columnv_email.MaxLength = 50;
                this.columnv_status.MaxLength = 50;
                this.columnv_city.MaxLength = 50;
                this.columnv_country.MaxLength = 50;
                this.columnv_regno.MaxLength = 50;
                this.columnVendorCode.MaxLength = 50;
                this.columnAVL.AllowDBNull = false;
                this.columnv_state.AllowDBNull = false;
                this.columnv_state.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRow NewVendorRow() {
                return ((VendorRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new VendorRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(VendorRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VendorRowChanged != null)) {
                    this.VendorRowChanged(this, new VendorRowChangeEvent(((VendorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VendorRowChanging != null)) {
                    this.VendorRowChanging(this, new VendorRowChangeEvent(((VendorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VendorRowDeleted != null)) {
                    this.VendorRowDeleted(this, new VendorRowChangeEvent(((VendorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VendorRowDeleting != null)) {
                    this.VendorRowDeleting(this, new VendorRowChangeEvent(((VendorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVendorRow(VendorRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VendorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderNumbersDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPO_OrderNo;
            
            private System.Data.DataColumn columnPOID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersDataTable() {
                this.TableName = "OrderNumbers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderNumbersDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderNumbersDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_OrderNoColumn {
                get {
                    return this.columnPO_OrderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersRow this[int index] {
                get {
                    return ((OrderNumbersRow)(this.Rows[index]));
                }
            }
            
            public event OrderNumbersRowChangeEventHandler OrderNumbersRowChanging;
            
            public event OrderNumbersRowChangeEventHandler OrderNumbersRowChanged;
            
            public event OrderNumbersRowChangeEventHandler OrderNumbersRowDeleting;
            
            public event OrderNumbersRowChangeEventHandler OrderNumbersRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderNumbersRow(OrderNumbersRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersRow AddOrderNumbersRow(decimal PO_OrderNo) {
                OrderNumbersRow rowOrderNumbersRow = ((OrderNumbersRow)(this.NewRow()));
                rowOrderNumbersRow.ItemArray = new object[] {
                        PO_OrderNo,
                        null};
                this.Rows.Add(rowOrderNumbersRow);
                return rowOrderNumbersRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersRow FindByPOID(decimal POID) {
                return ((OrderNumbersRow)(this.Rows.Find(new object[] {
                            POID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                OrderNumbersDataTable cln = ((OrderNumbersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new OrderNumbersDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPO_OrderNo = base.Columns["PO_OrderNo"];
                this.columnPOID = base.Columns["POID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPO_OrderNo = new System.Data.DataColumn("PO_OrderNo", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_OrderNo);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPOID}, true));
                this.columnPO_OrderNo.AllowDBNull = false;
                this.columnPOID.AutoIncrement = true;
                this.columnPOID.AllowDBNull = false;
                this.columnPOID.ReadOnly = true;
                this.columnPOID.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersRow NewOrderNumbersRow() {
                return ((OrderNumbersRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new OrderNumbersRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(OrderNumbersRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderNumbersRowChanged != null)) {
                    this.OrderNumbersRowChanged(this, new OrderNumbersRowChangeEvent(((OrderNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderNumbersRowChanging != null)) {
                    this.OrderNumbersRowChanging(this, new OrderNumbersRowChangeEvent(((OrderNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderNumbersRowDeleted != null)) {
                    this.OrderNumbersRowDeleted(this, new OrderNumbersRowChangeEvent(((OrderNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderNumbersRowDeleting != null)) {
                    this.OrderNumbersRowDeleting(this, new OrderNumbersRowChangeEvent(((OrderNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderNumbersRow(OrderNumbersRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderNumbersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblUOMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuom_id;
            
            private System.Data.DataColumn columnuom;
            
            private System.Data.DataColumn columnuom_desc;
            
            private System.Data.DataColumn columnt_date;
            
            private System.Data.DataColumn columnu_date;
            
            private System.Data.DataColumn columnt_user;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMDataTable() {
                this.TableName = "tblUOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblUOMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblUOMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uom_idColumn {
                get {
                    return this.columnuom_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uomColumn {
                get {
                    return this.columnuom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uom_descColumn {
                get {
                    return this.columnuom_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn u_dateColumn {
                get {
                    return this.columnu_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_userColumn {
                get {
                    return this.columnt_user;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMRow this[int index] {
                get {
                    return ((tblUOMRow)(this.Rows[index]));
                }
            }
            
            public event tblUOMRowChangeEventHandler tblUOMRowChanging;
            
            public event tblUOMRowChangeEventHandler tblUOMRowChanged;
            
            public event tblUOMRowChangeEventHandler tblUOMRowDeleting;
            
            public event tblUOMRowChangeEventHandler tblUOMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblUOMRow(tblUOMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMRow AddtblUOMRow(string uom, string uom_desc, System.DateTime t_date, System.DateTime u_date, string t_user) {
                tblUOMRow rowtblUOMRow = ((tblUOMRow)(this.NewRow()));
                rowtblUOMRow.ItemArray = new object[] {
                        null,
                        uom,
                        uom_desc,
                        t_date,
                        u_date,
                        t_user};
                this.Rows.Add(rowtblUOMRow);
                return rowtblUOMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMRow FindByuom(string uom) {
                return ((tblUOMRow)(this.Rows.Find(new object[] {
                            uom})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblUOMDataTable cln = ((tblUOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblUOMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuom_id = base.Columns["uom_id"];
                this.columnuom = base.Columns["uom"];
                this.columnuom_desc = base.Columns["uom_desc"];
                this.columnt_date = base.Columns["t_date"];
                this.columnu_date = base.Columns["u_date"];
                this.columnt_user = base.Columns["t_user"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuom_id = new System.Data.DataColumn("uom_id", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom_id);
                this.columnuom = new System.Data.DataColumn("uom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom);
                this.columnuom_desc = new System.Data.DataColumn("uom_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuom_desc);
                this.columnt_date = new System.Data.DataColumn("t_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.columnu_date = new System.Data.DataColumn("u_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnu_date);
                this.columnt_user = new System.Data.DataColumn("t_user", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_user);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuom}, true));
                this.columnuom_id.AutoIncrement = true;
                this.columnuom_id.AllowDBNull = false;
                this.columnuom_id.ReadOnly = true;
                this.columnuom.AllowDBNull = false;
                this.columnuom.Unique = true;
                this.columnuom.MaxLength = 50;
                this.columnuom_desc.MaxLength = 150;
                this.columnt_user.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMRow NewtblUOMRow() {
                return ((tblUOMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblUOMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblUOMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblUOMRowChanged != null)) {
                    this.tblUOMRowChanged(this, new tblUOMRowChangeEvent(((tblUOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblUOMRowChanging != null)) {
                    this.tblUOMRowChanging(this, new tblUOMRowChangeEvent(((tblUOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblUOMRowDeleted != null)) {
                    this.tblUOMRowDeleted(this, new tblUOMRowChangeEvent(((tblUOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblUOMRowDeleting != null)) {
                    this.tblUOMRowDeleting(this, new tblUOMRowChangeEvent(((tblUOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblUOMRow(tblUOMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblUOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblChargetypeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnChID;
            
            private System.Data.DataColumn columnChargeType;
            
            private System.Data.DataColumn columnChargeTypeDesc;
            
            private System.Data.DataColumn columnt_date;
            
            private System.Data.DataColumn columnu_date;
            
            private System.Data.DataColumn columnt_user;
            
            private System.Data.DataColumn columnnotes;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeDataTable() {
                this.TableName = "tblChargetype";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblChargetypeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblChargetypeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChIDColumn {
                get {
                    return this.columnChID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChargeTypeColumn {
                get {
                    return this.columnChargeType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChargeTypeDescColumn {
                get {
                    return this.columnChargeTypeDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn u_dateColumn {
                get {
                    return this.columnu_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_userColumn {
                get {
                    return this.columnt_user;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeRow this[int index] {
                get {
                    return ((tblChargetypeRow)(this.Rows[index]));
                }
            }
            
            public event tblChargetypeRowChangeEventHandler tblChargetypeRowChanging;
            
            public event tblChargetypeRowChangeEventHandler tblChargetypeRowChanged;
            
            public event tblChargetypeRowChangeEventHandler tblChargetypeRowDeleting;
            
            public event tblChargetypeRowChangeEventHandler tblChargetypeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblChargetypeRow(tblChargetypeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeRow AddtblChargetypeRow(string ChargeType, string ChargeTypeDesc, System.DateTime t_date, System.DateTime u_date, string t_user, string notes) {
                tblChargetypeRow rowtblChargetypeRow = ((tblChargetypeRow)(this.NewRow()));
                rowtblChargetypeRow.ItemArray = new object[] {
                        null,
                        ChargeType,
                        ChargeTypeDesc,
                        t_date,
                        u_date,
                        t_user,
                        notes};
                this.Rows.Add(rowtblChargetypeRow);
                return rowtblChargetypeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeRow FindByChID(decimal ChID) {
                return ((tblChargetypeRow)(this.Rows.Find(new object[] {
                            ChID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblChargetypeDataTable cln = ((tblChargetypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblChargetypeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChID = base.Columns["ChID"];
                this.columnChargeType = base.Columns["ChargeType"];
                this.columnChargeTypeDesc = base.Columns["ChargeTypeDesc"];
                this.columnt_date = base.Columns["t_date"];
                this.columnu_date = base.Columns["u_date"];
                this.columnt_user = base.Columns["t_user"];
                this.columnnotes = base.Columns["notes"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChID = new System.Data.DataColumn("ChID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChID);
                this.columnChargeType = new System.Data.DataColumn("ChargeType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargeType);
                this.columnChargeTypeDesc = new System.Data.DataColumn("ChargeTypeDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargeTypeDesc);
                this.columnt_date = new System.Data.DataColumn("t_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.columnu_date = new System.Data.DataColumn("u_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnu_date);
                this.columnt_user = new System.Data.DataColumn("t_user", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_user);
                this.columnnotes = new System.Data.DataColumn("notes", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnChID}, true));
                this.columnChID.AutoIncrement = true;
                this.columnChID.AllowDBNull = false;
                this.columnChID.ReadOnly = true;
                this.columnChID.Unique = true;
                this.columnChargeType.AllowDBNull = false;
                this.columnChargeType.MaxLength = 2;
                this.columnChargeTypeDesc.MaxLength = 50;
                this.columnt_user.MaxLength = 50;
                this.columnnotes.MaxLength = 250;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeRow NewtblChargetypeRow() {
                return ((tblChargetypeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblChargetypeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblChargetypeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblChargetypeRowChanged != null)) {
                    this.tblChargetypeRowChanged(this, new tblChargetypeRowChangeEvent(((tblChargetypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblChargetypeRowChanging != null)) {
                    this.tblChargetypeRowChanging(this, new tblChargetypeRowChangeEvent(((tblChargetypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblChargetypeRowDeleted != null)) {
                    this.tblChargetypeRowDeleted(this, new tblChargetypeRowChangeEvent(((tblChargetypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblChargetypeRowDeleting != null)) {
                    this.tblChargetypeRowDeleting(this, new tblChargetypeRowChangeEvent(((tblChargetypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblChargetypeRow(tblChargetypeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblChargetypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblOrderTypeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnOrderType_id;
            
            private System.Data.DataColumn columnOrderType;
            
            private System.Data.DataColumn columnOrderTypedesc;
            
            private System.Data.DataColumn columnt_date;
            
            private System.Data.DataColumn columnu_date;
            
            private System.Data.DataColumn columnt_user;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeDataTable() {
                this.TableName = "tblOrderType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblOrderTypeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblOrderTypeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderType_idColumn {
                get {
                    return this.columnOrderType_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderTypeColumn {
                get {
                    return this.columnOrderType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderTypedescColumn {
                get {
                    return this.columnOrderTypedesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn u_dateColumn {
                get {
                    return this.columnu_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_userColumn {
                get {
                    return this.columnt_user;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeRow this[int index] {
                get {
                    return ((tblOrderTypeRow)(this.Rows[index]));
                }
            }
            
            public event tblOrderTypeRowChangeEventHandler tblOrderTypeRowChanging;
            
            public event tblOrderTypeRowChangeEventHandler tblOrderTypeRowChanged;
            
            public event tblOrderTypeRowChangeEventHandler tblOrderTypeRowDeleting;
            
            public event tblOrderTypeRowChangeEventHandler tblOrderTypeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblOrderTypeRow(tblOrderTypeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeRow AddtblOrderTypeRow(string OrderType, string OrderTypedesc, System.DateTime t_date, System.DateTime u_date, string t_user) {
                tblOrderTypeRow rowtblOrderTypeRow = ((tblOrderTypeRow)(this.NewRow()));
                rowtblOrderTypeRow.ItemArray = new object[] {
                        null,
                        OrderType,
                        OrderTypedesc,
                        t_date,
                        u_date,
                        t_user};
                this.Rows.Add(rowtblOrderTypeRow);
                return rowtblOrderTypeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeRow FindByOrderType(string OrderType) {
                return ((tblOrderTypeRow)(this.Rows.Find(new object[] {
                            OrderType})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblOrderTypeDataTable cln = ((tblOrderTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblOrderTypeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderType_id = base.Columns["OrderType_id"];
                this.columnOrderType = base.Columns["OrderType"];
                this.columnOrderTypedesc = base.Columns["OrderTypedesc"];
                this.columnt_date = base.Columns["t_date"];
                this.columnu_date = base.Columns["u_date"];
                this.columnt_user = base.Columns["t_user"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderType_id = new System.Data.DataColumn("OrderType_id", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderType_id);
                this.columnOrderType = new System.Data.DataColumn("OrderType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderType);
                this.columnOrderTypedesc = new System.Data.DataColumn("OrderTypedesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderTypedesc);
                this.columnt_date = new System.Data.DataColumn("t_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.columnu_date = new System.Data.DataColumn("u_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnu_date);
                this.columnt_user = new System.Data.DataColumn("t_user", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_user);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnOrderType}, true));
                this.columnOrderType_id.AutoIncrement = true;
                this.columnOrderType_id.AllowDBNull = false;
                this.columnOrderType_id.ReadOnly = true;
                this.columnOrderType.AllowDBNull = false;
                this.columnOrderType.Unique = true;
                this.columnOrderType.MaxLength = 5;
                this.columnOrderTypedesc.MaxLength = 150;
                this.columnt_user.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeRow NewtblOrderTypeRow() {
                return ((tblOrderTypeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblOrderTypeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblOrderTypeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblOrderTypeRowChanged != null)) {
                    this.tblOrderTypeRowChanged(this, new tblOrderTypeRowChangeEvent(((tblOrderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblOrderTypeRowChanging != null)) {
                    this.tblOrderTypeRowChanging(this, new tblOrderTypeRowChangeEvent(((tblOrderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblOrderTypeRowDeleted != null)) {
                    this.tblOrderTypeRowDeleted(this, new tblOrderTypeRowChangeEvent(((tblOrderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblOrderTypeRowDeleting != null)) {
                    this.tblOrderTypeRowDeleting(this, new tblOrderTypeRowChangeEvent(((tblOrderTypeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblOrderTypeRow(tblOrderTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblOrderTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblJobChargeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnChID;
            
            private System.Data.DataColumn columnjob_code;
            
            private System.Data.DataColumn columnjobno;
            
            private System.Data.DataColumn columnsubjobno;
            
            private System.Data.DataColumn columnjobno_desc;
            
            private System.Data.DataColumn columnsubjobno_desc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblJobChargeDataTable() {
                this.TableName = "tblJobCharge";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblJobChargeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblJobChargeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChIDColumn {
                get {
                    return this.columnChID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn job_codeColumn {
                get {
                    return this.columnjob_code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jobnoColumn {
                get {
                    return this.columnjobno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn subjobnoColumn {
                get {
                    return this.columnsubjobno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jobno_descColumn {
                get {
                    return this.columnjobno_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn subjobno_descColumn {
                get {
                    return this.columnsubjobno_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblJobChargeRow this[int index] {
                get {
                    return ((tblJobChargeRow)(this.Rows[index]));
                }
            }
            
            public event tblJobChargeRowChangeEventHandler tblJobChargeRowChanging;
            
            public event tblJobChargeRowChangeEventHandler tblJobChargeRowChanged;
            
            public event tblJobChargeRowChangeEventHandler tblJobChargeRowDeleting;
            
            public event tblJobChargeRowChangeEventHandler tblJobChargeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblJobChargeRow(tblJobChargeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblJobChargeRow AddtblJobChargeRow(string job_code, string jobno, string subjobno, string jobno_desc, string subjobno_desc) {
                tblJobChargeRow rowtblJobChargeRow = ((tblJobChargeRow)(this.NewRow()));
                rowtblJobChargeRow.ItemArray = new object[] {
                        null,
                        job_code,
                        jobno,
                        subjobno,
                        jobno_desc,
                        subjobno_desc};
                this.Rows.Add(rowtblJobChargeRow);
                return rowtblJobChargeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblJobChargeDataTable cln = ((tblJobChargeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblJobChargeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChID = base.Columns["ChID"];
                this.columnjob_code = base.Columns["job_code"];
                this.columnjobno = base.Columns["jobno"];
                this.columnsubjobno = base.Columns["subjobno"];
                this.columnjobno_desc = base.Columns["jobno_desc"];
                this.columnsubjobno_desc = base.Columns["subjobno_desc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChID = new System.Data.DataColumn("ChID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChID);
                this.columnjob_code = new System.Data.DataColumn("job_code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjob_code);
                this.columnjobno = new System.Data.DataColumn("jobno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjobno);
                this.columnsubjobno = new System.Data.DataColumn("subjobno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubjobno);
                this.columnjobno_desc = new System.Data.DataColumn("jobno_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjobno_desc);
                this.columnsubjobno_desc = new System.Data.DataColumn("subjobno_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubjobno_desc);
                this.columnChID.AutoIncrement = true;
                this.columnChID.AllowDBNull = false;
                this.columnChID.ReadOnly = true;
                this.columnjob_code.AllowDBNull = false;
                this.columnjob_code.MaxLength = 50;
                this.columnjobno.MaxLength = 50;
                this.columnsubjobno.MaxLength = 50;
                this.columnjobno_desc.MaxLength = 200;
                this.columnsubjobno_desc.MaxLength = 250;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblJobChargeRow NewtblJobChargeRow() {
                return ((tblJobChargeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblJobChargeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblJobChargeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblJobChargeRowChanged != null)) {
                    this.tblJobChargeRowChanged(this, new tblJobChargeRowChangeEvent(((tblJobChargeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblJobChargeRowChanging != null)) {
                    this.tblJobChargeRowChanging(this, new tblJobChargeRowChangeEvent(((tblJobChargeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblJobChargeRowDeleted != null)) {
                    this.tblJobChargeRowDeleted(this, new tblJobChargeRowChangeEvent(((tblJobChargeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblJobChargeRowDeleting != null)) {
                    this.tblJobChargeRowDeleting(this, new tblJobChargeRowChangeEvent(((tblJobChargeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblJobChargeRow(tblJobChargeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblJobChargeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblBuyerDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnBuyerID;
            
            private System.Data.DataColumn columnBuyerIntial;
            
            private System.Data.DataColumn columnBuyerName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerDataTable() {
                this.TableName = "tblBuyer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblBuyerDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblBuyerDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerIDColumn {
                get {
                    return this.columnBuyerID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerIntialColumn {
                get {
                    return this.columnBuyerIntial;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerNameColumn {
                get {
                    return this.columnBuyerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerRow this[int index] {
                get {
                    return ((tblBuyerRow)(this.Rows[index]));
                }
            }
            
            public event tblBuyerRowChangeEventHandler tblBuyerRowChanging;
            
            public event tblBuyerRowChangeEventHandler tblBuyerRowChanged;
            
            public event tblBuyerRowChangeEventHandler tblBuyerRowDeleting;
            
            public event tblBuyerRowChangeEventHandler tblBuyerRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblBuyerRow(tblBuyerRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerRow AddtblBuyerRow(string BuyerIntial, string BuyerName) {
                tblBuyerRow rowtblBuyerRow = ((tblBuyerRow)(this.NewRow()));
                rowtblBuyerRow.ItemArray = new object[] {
                        null,
                        BuyerIntial,
                        BuyerName};
                this.Rows.Add(rowtblBuyerRow);
                return rowtblBuyerRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerRow FindByBuyerID(decimal BuyerID) {
                return ((tblBuyerRow)(this.Rows.Find(new object[] {
                            BuyerID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblBuyerDataTable cln = ((tblBuyerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblBuyerDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBuyerID = base.Columns["BuyerID"];
                this.columnBuyerIntial = base.Columns["BuyerIntial"];
                this.columnBuyerName = base.Columns["BuyerName"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBuyerID = new System.Data.DataColumn("BuyerID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerID);
                this.columnBuyerIntial = new System.Data.DataColumn("BuyerIntial", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerIntial);
                this.columnBuyerName = new System.Data.DataColumn("BuyerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerName);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnBuyerID}, true));
                this.columnBuyerID.AutoIncrement = true;
                this.columnBuyerID.AllowDBNull = false;
                this.columnBuyerID.ReadOnly = true;
                this.columnBuyerID.Unique = true;
                this.columnBuyerIntial.AllowDBNull = false;
                this.columnBuyerIntial.MaxLength = 4;
                this.columnBuyerName.AllowDBNull = false;
                this.columnBuyerName.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerRow NewtblBuyerRow() {
                return ((tblBuyerRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblBuyerRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblBuyerRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblBuyerRowChanged != null)) {
                    this.tblBuyerRowChanged(this, new tblBuyerRowChangeEvent(((tblBuyerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblBuyerRowChanging != null)) {
                    this.tblBuyerRowChanging(this, new tblBuyerRowChangeEvent(((tblBuyerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblBuyerRowDeleted != null)) {
                    this.tblBuyerRowDeleted(this, new tblBuyerRowChangeEvent(((tblBuyerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblBuyerRowDeleting != null)) {
                    this.tblBuyerRowDeleting(this, new tblBuyerRowChangeEvent(((tblBuyerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblBuyerRow(tblBuyerRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblBuyerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PO_HeaderDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnVendorName;
            
            private System.Data.DataColumn columnVendorAddress;
            
            private System.Data.DataColumn columnPO_OrderNo;
            
            private System.Data.DataColumn columnPO_Date;
            
            private System.Data.DataColumn columnRequisition_OrderNo;
            
            private System.Data.DataColumn columnCostCenter;
            
            private System.Data.DataColumn columnOrderedby;
            
            private System.Data.DataColumn columnApprovedby;
            
            private System.Data.DataColumn columnRemarks;
            
            private System.Data.DataColumn columnDeliveryTerms;
            
            private System.Data.DataColumn columnCurrency;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnChargeType;
            
            private System.Data.DataColumn columnCnctPerson;
            
            private System.Data.DataColumn columnVendorRef;
            
            private System.Data.DataColumn columnProject;
            
            private System.Data.DataColumn columnVesselName;
            
            private System.Data.DataColumn columnEndUser;
            
            private System.Data.DataColumn columnBuyer;
            
            private System.Data.DataColumn columnType;
            
            private System.Data.DataColumn columnPO_Description;
            
            private System.Data.DataColumn columnDeliveryDate;
            
            private System.Data.DataColumn columnImpInstructions;
            
            private System.Data.DataColumn columnDeliveryPoint;
            
            private System.Data.DataColumn columnCnctTelephone;
            
            private System.Data.DataColumn columnPaymentTerms;
            
            private System.Data.DataColumn columnDeliveryPointAttn;
            
            private System.Data.DataColumn columnt_date;
            
            private System.Data.DataColumn columnt_user;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderDataTable() {
                this.TableName = "PO_Header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PO_HeaderDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PO_HeaderDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorAddressColumn {
                get {
                    return this.columnVendorAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_OrderNoColumn {
                get {
                    return this.columnPO_OrderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DateColumn {
                get {
                    return this.columnPO_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Requisition_OrderNoColumn {
                get {
                    return this.columnRequisition_OrderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CostCenterColumn {
                get {
                    return this.columnCostCenter;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderedbyColumn {
                get {
                    return this.columnOrderedby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedbyColumn {
                get {
                    return this.columnApprovedby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryTermsColumn {
                get {
                    return this.columnDeliveryTerms;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChargeTypeColumn {
                get {
                    return this.columnChargeType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CnctPersonColumn {
                get {
                    return this.columnCnctPerson;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorRefColumn {
                get {
                    return this.columnVendorRef;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectColumn {
                get {
                    return this.columnProject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VesselNameColumn {
                get {
                    return this.columnVesselName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndUserColumn {
                get {
                    return this.columnEndUser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerColumn {
                get {
                    return this.columnBuyer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DescriptionColumn {
                get {
                    return this.columnPO_Description;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ImpInstructionsColumn {
                get {
                    return this.columnImpInstructions;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryPointColumn {
                get {
                    return this.columnDeliveryPoint;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CnctTelephoneColumn {
                get {
                    return this.columnCnctTelephone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PaymentTermsColumn {
                get {
                    return this.columnPaymentTerms;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeliveryPointAttnColumn {
                get {
                    return this.columnDeliveryPointAttn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn t_userColumn {
                get {
                    return this.columnt_user;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderRow this[int index] {
                get {
                    return ((PO_HeaderRow)(this.Rows[index]));
                }
            }
            
            public event PO_HeaderRowChangeEventHandler PO_HeaderRowChanging;
            
            public event PO_HeaderRowChangeEventHandler PO_HeaderRowChanged;
            
            public event PO_HeaderRowChangeEventHandler PO_HeaderRowDeleting;
            
            public event PO_HeaderRowChangeEventHandler PO_HeaderRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPO_HeaderRow(PO_HeaderRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderRow AddPO_HeaderRow(
                        string VendorName, 
                        string VendorAddress, 
                        decimal PO_OrderNo, 
                        System.DateTime PO_Date, 
                        string Requisition_OrderNo, 
                        string CostCenter, 
                        string Orderedby, 
                        string Approvedby, 
                        string Remarks, 
                        string DeliveryTerms, 
                        string Currency, 
                        int Status, 
                        string ChargeType, 
                        string CnctPerson, 
                        string VendorRef, 
                        string Project, 
                        string VesselName, 
                        string EndUser, 
                        string Buyer, 
                        string Type, 
                        string PO_Description, 
                        string DeliveryDate, 
                        string ImpInstructions, 
                        string DeliveryPoint, 
                        string CnctTelephone, 
                        string PaymentTerms, 
                        string DeliveryPointAttn, 
                        System.DateTime t_date, 
                        string t_user) {
                PO_HeaderRow rowPO_HeaderRow = ((PO_HeaderRow)(this.NewRow()));
                rowPO_HeaderRow.ItemArray = new object[] {
                        null,
                        VendorName,
                        VendorAddress,
                        PO_OrderNo,
                        PO_Date,
                        Requisition_OrderNo,
                        CostCenter,
                        Orderedby,
                        Approvedby,
                        Remarks,
                        DeliveryTerms,
                        Currency,
                        Status,
                        ChargeType,
                        CnctPerson,
                        VendorRef,
                        Project,
                        VesselName,
                        EndUser,
                        Buyer,
                        Type,
                        PO_Description,
                        DeliveryDate,
                        ImpInstructions,
                        DeliveryPoint,
                        CnctTelephone,
                        PaymentTerms,
                        DeliveryPointAttn,
                        t_date,
                        t_user};
                this.Rows.Add(rowPO_HeaderRow);
                return rowPO_HeaderRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderRow FindByPOID(decimal POID) {
                return ((PO_HeaderRow)(this.Rows.Find(new object[] {
                            POID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PO_HeaderDataTable cln = ((PO_HeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PO_HeaderDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOID = base.Columns["POID"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnVendorAddress = base.Columns["VendorAddress"];
                this.columnPO_OrderNo = base.Columns["PO_OrderNo"];
                this.columnPO_Date = base.Columns["PO_Date"];
                this.columnRequisition_OrderNo = base.Columns["Requisition_OrderNo"];
                this.columnCostCenter = base.Columns["CostCenter"];
                this.columnOrderedby = base.Columns["Orderedby"];
                this.columnApprovedby = base.Columns["Approvedby"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnDeliveryTerms = base.Columns["DeliveryTerms"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnStatus = base.Columns["Status"];
                this.columnChargeType = base.Columns["ChargeType"];
                this.columnCnctPerson = base.Columns["CnctPerson"];
                this.columnVendorRef = base.Columns["VendorRef"];
                this.columnProject = base.Columns["Project"];
                this.columnVesselName = base.Columns["VesselName"];
                this.columnEndUser = base.Columns["EndUser"];
                this.columnBuyer = base.Columns["Buyer"];
                this.columnType = base.Columns["Type"];
                this.columnPO_Description = base.Columns["PO_Description"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnImpInstructions = base.Columns["ImpInstructions"];
                this.columnDeliveryPoint = base.Columns["DeliveryPoint"];
                this.columnCnctTelephone = base.Columns["CnctTelephone"];
                this.columnPaymentTerms = base.Columns["PaymentTerms"];
                this.columnDeliveryPointAttn = base.Columns["DeliveryPointAttn"];
                this.columnt_date = base.Columns["t_date"];
                this.columnt_user = base.Columns["t_user"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnVendorName = new System.Data.DataColumn("VendorName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnVendorAddress = new System.Data.DataColumn("VendorAddress", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAddress);
                this.columnPO_OrderNo = new System.Data.DataColumn("PO_OrderNo", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_OrderNo);
                this.columnPO_Date = new System.Data.DataColumn("PO_Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_Date);
                this.columnRequisition_OrderNo = new System.Data.DataColumn("Requisition_OrderNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequisition_OrderNo);
                this.columnCostCenter = new System.Data.DataColumn("CostCenter", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostCenter);
                this.columnOrderedby = new System.Data.DataColumn("Orderedby", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderedby);
                this.columnApprovedby = new System.Data.DataColumn("Approvedby", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedby);
                this.columnRemarks = new System.Data.DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnDeliveryTerms = new System.Data.DataColumn("DeliveryTerms", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryTerms);
                this.columnCurrency = new System.Data.DataColumn("Currency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnChargeType = new System.Data.DataColumn("ChargeType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargeType);
                this.columnCnctPerson = new System.Data.DataColumn("CnctPerson", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCnctPerson);
                this.columnVendorRef = new System.Data.DataColumn("VendorRef", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorRef);
                this.columnProject = new System.Data.DataColumn("Project", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject);
                this.columnVesselName = new System.Data.DataColumn("VesselName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVesselName);
                this.columnEndUser = new System.Data.DataColumn("EndUser", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndUser);
                this.columnBuyer = new System.Data.DataColumn("Buyer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyer);
                this.columnType = new System.Data.DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPO_Description = new System.Data.DataColumn("PO_Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_Description);
                this.columnDeliveryDate = new System.Data.DataColumn("DeliveryDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnImpInstructions = new System.Data.DataColumn("ImpInstructions", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpInstructions);
                this.columnDeliveryPoint = new System.Data.DataColumn("DeliveryPoint", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPoint);
                this.columnCnctTelephone = new System.Data.DataColumn("CnctTelephone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCnctTelephone);
                this.columnPaymentTerms = new System.Data.DataColumn("PaymentTerms", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTerms);
                this.columnDeliveryPointAttn = new System.Data.DataColumn("DeliveryPointAttn", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryPointAttn);
                this.columnt_date = new System.Data.DataColumn("t_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.columnt_user = new System.Data.DataColumn("t_user", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_user);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPOID}, true));
                this.columnPOID.AutoIncrement = true;
                this.columnPOID.AllowDBNull = false;
                this.columnPOID.ReadOnly = true;
                this.columnPOID.Unique = true;
                this.columnVendorName.AllowDBNull = false;
                this.columnVendorName.MaxLength = 50;
                this.columnVendorAddress.AllowDBNull = false;
                this.columnVendorAddress.MaxLength = 300;
                this.columnPO_OrderNo.AllowDBNull = false;
                this.columnPO_Date.AllowDBNull = false;
                this.columnRequisition_OrderNo.AllowDBNull = false;
                this.columnRequisition_OrderNo.MaxLength = 50;
                this.columnCostCenter.AllowDBNull = false;
                this.columnCostCenter.MaxLength = 50;
                this.columnOrderedby.AllowDBNull = false;
                this.columnOrderedby.MaxLength = 50;
                this.columnApprovedby.AllowDBNull = false;
                this.columnApprovedby.MaxLength = 50;
                this.columnRemarks.AllowDBNull = false;
                this.columnRemarks.MaxLength = 50;
                this.columnDeliveryTerms.AllowDBNull = false;
                this.columnDeliveryTerms.MaxLength = 1000;
                this.columnCurrency.AllowDBNull = false;
                this.columnCurrency.MaxLength = 50;
                this.columnStatus.AllowDBNull = false;
                this.columnChargeType.AllowDBNull = false;
                this.columnChargeType.MaxLength = 50;
                this.columnCnctPerson.AllowDBNull = false;
                this.columnCnctPerson.MaxLength = 50;
                this.columnVendorRef.AllowDBNull = false;
                this.columnVendorRef.MaxLength = 50;
                this.columnProject.AllowDBNull = false;
                this.columnProject.MaxLength = 75;
                this.columnVesselName.AllowDBNull = false;
                this.columnVesselName.MaxLength = 50;
                this.columnEndUser.AllowDBNull = false;
                this.columnEndUser.MaxLength = 50;
                this.columnBuyer.AllowDBNull = false;
                this.columnBuyer.MaxLength = 50;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 2;
                this.columnPO_Description.AllowDBNull = false;
                this.columnPO_Description.MaxLength = 500;
                this.columnDeliveryDate.AllowDBNull = false;
                this.columnDeliveryDate.MaxLength = 25;
                this.columnImpInstructions.AllowDBNull = false;
                this.columnImpInstructions.MaxLength = 500;
                this.columnDeliveryPoint.AllowDBNull = false;
                this.columnDeliveryPoint.MaxLength = 150;
                this.columnCnctTelephone.AllowDBNull = false;
                this.columnCnctTelephone.MaxLength = 16;
                this.columnPaymentTerms.AllowDBNull = false;
                this.columnPaymentTerms.MaxLength = 3;
                this.columnDeliveryPointAttn.AllowDBNull = false;
                this.columnDeliveryPointAttn.MaxLength = 50;
                this.columnt_user.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderRow NewPO_HeaderRow() {
                return ((PO_HeaderRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PO_HeaderRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PO_HeaderRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PO_HeaderRowChanged != null)) {
                    this.PO_HeaderRowChanged(this, new PO_HeaderRowChangeEvent(((PO_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PO_HeaderRowChanging != null)) {
                    this.PO_HeaderRowChanging(this, new PO_HeaderRowChangeEvent(((PO_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PO_HeaderRowDeleted != null)) {
                    this.PO_HeaderRowDeleted(this, new PO_HeaderRowChangeEvent(((PO_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PO_HeaderRowDeleting != null)) {
                    this.PO_HeaderRowDeleting(this, new PO_HeaderRowChangeEvent(((PO_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePO_HeaderRow(PO_HeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PO_HeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblusersDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnUsrId;
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnUserName;
            
            private System.Data.DataColumn columnDepartment;
            
            private System.Data.DataColumn columnUserPassword;
            
            private System.Data.DataColumn columnUserType;
            
            private System.Data.DataColumn columnAccessrights;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersDataTable() {
                this.TableName = "tblusers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblusersDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblusersDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UsrIdColumn {
                get {
                    return this.columnUsrId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserPasswordColumn {
                get {
                    return this.columnUserPassword;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserTypeColumn {
                get {
                    return this.columnUserType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccessrightsColumn {
                get {
                    return this.columnAccessrights;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersRow this[int index] {
                get {
                    return ((tblusersRow)(this.Rows[index]));
                }
            }
            
            public event tblusersRowChangeEventHandler tblusersRowChanging;
            
            public event tblusersRowChangeEventHandler tblusersRowChanged;
            
            public event tblusersRowChangeEventHandler tblusersRowDeleting;
            
            public event tblusersRowChangeEventHandler tblusersRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblusersRow(tblusersRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersRow AddtblusersRow(string UserID, string UserName, string Department, string UserPassword, string UserType, string Accessrights) {
                tblusersRow rowtblusersRow = ((tblusersRow)(this.NewRow()));
                rowtblusersRow.ItemArray = new object[] {
                        null,
                        UserID,
                        UserName,
                        Department,
                        UserPassword,
                        UserType,
                        Accessrights};
                this.Rows.Add(rowtblusersRow);
                return rowtblusersRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersRow FindByUsrId(decimal UsrId) {
                return ((tblusersRow)(this.Rows.Find(new object[] {
                            UsrId})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblusersDataTable cln = ((tblusersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblusersDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUsrId = base.Columns["UsrId"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserName = base.Columns["UserName"];
                this.columnDepartment = base.Columns["Department"];
                this.columnUserPassword = base.Columns["UserPassword"];
                this.columnUserType = base.Columns["UserType"];
                this.columnAccessrights = base.Columns["Accessrights"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUsrId = new System.Data.DataColumn("UsrId", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrId);
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserName = new System.Data.DataColumn("UserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnDepartment = new System.Data.DataColumn("Department", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnUserPassword = new System.Data.DataColumn("UserPassword", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserPassword);
                this.columnUserType = new System.Data.DataColumn("UserType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserType);
                this.columnAccessrights = new System.Data.DataColumn("Accessrights", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessrights);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnUsrId}, true));
                this.columnUsrId.AutoIncrement = true;
                this.columnUsrId.AllowDBNull = false;
                this.columnUsrId.ReadOnly = true;
                this.columnUsrId.Unique = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 50;
                this.columnUserName.AllowDBNull = false;
                this.columnUserName.MaxLength = 100;
                this.columnDepartment.AllowDBNull = false;
                this.columnDepartment.MaxLength = 50;
                this.columnUserPassword.AllowDBNull = false;
                this.columnUserPassword.MaxLength = 50;
                this.columnUserType.AllowDBNull = false;
                this.columnUserType.MaxLength = 50;
                this.columnAccessrights.AllowDBNull = false;
                this.columnAccessrights.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersRow NewtblusersRow() {
                return ((tblusersRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblusersRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblusersRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblusersRowChanged != null)) {
                    this.tblusersRowChanged(this, new tblusersRowChangeEvent(((tblusersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblusersRowChanging != null)) {
                    this.tblusersRowChanging(this, new tblusersRowChangeEvent(((tblusersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblusersRowDeleted != null)) {
                    this.tblusersRowDeleted(this, new tblusersRowChangeEvent(((tblusersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblusersRowDeleting != null)) {
                    this.tblusersRowDeleting(this, new tblusersRowChangeEvent(((tblusersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblusersRow(tblusersRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblusersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMSRStatusDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMSRStatusID;
            
            private System.Data.DataColumn columnMSRStatus;
            
            private System.Data.DataColumn columnStatusDesc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusDataTable() {
                this.TableName = "tblMSRStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMSRStatusDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblMSRStatusDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRStatusIDColumn {
                get {
                    return this.columnMSRStatusID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRStatusColumn {
                get {
                    return this.columnMSRStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusDescColumn {
                get {
                    return this.columnStatusDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusRow this[int index] {
                get {
                    return ((tblMSRStatusRow)(this.Rows[index]));
                }
            }
            
            public event tblMSRStatusRowChangeEventHandler tblMSRStatusRowChanging;
            
            public event tblMSRStatusRowChangeEventHandler tblMSRStatusRowChanged;
            
            public event tblMSRStatusRowChangeEventHandler tblMSRStatusRowDeleting;
            
            public event tblMSRStatusRowChangeEventHandler tblMSRStatusRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblMSRStatusRow(tblMSRStatusRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusRow AddtblMSRStatusRow(int MSRStatus, string StatusDesc) {
                tblMSRStatusRow rowtblMSRStatusRow = ((tblMSRStatusRow)(this.NewRow()));
                rowtblMSRStatusRow.ItemArray = new object[] {
                        null,
                        MSRStatus,
                        StatusDesc};
                this.Rows.Add(rowtblMSRStatusRow);
                return rowtblMSRStatusRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusRow FindByMSRStatusID(int MSRStatusID) {
                return ((tblMSRStatusRow)(this.Rows.Find(new object[] {
                            MSRStatusID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblMSRStatusDataTable cln = ((tblMSRStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblMSRStatusDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMSRStatusID = base.Columns["MSRStatusID"];
                this.columnMSRStatus = base.Columns["MSRStatus"];
                this.columnStatusDesc = base.Columns["StatusDesc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMSRStatusID = new System.Data.DataColumn("MSRStatusID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRStatusID);
                this.columnMSRStatus = new System.Data.DataColumn("MSRStatus", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRStatus);
                this.columnStatusDesc = new System.Data.DataColumn("StatusDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusDesc);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMSRStatusID}, true));
                this.columnMSRStatusID.AutoIncrement = true;
                this.columnMSRStatusID.AllowDBNull = false;
                this.columnMSRStatusID.ReadOnly = true;
                this.columnMSRStatusID.Unique = true;
                this.columnMSRStatus.AllowDBNull = false;
                this.columnStatusDesc.AllowDBNull = false;
                this.columnStatusDesc.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusRow NewtblMSRStatusRow() {
                return ((tblMSRStatusRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblMSRStatusRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblMSRStatusRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMSRStatusRowChanged != null)) {
                    this.tblMSRStatusRowChanged(this, new tblMSRStatusRowChangeEvent(((tblMSRStatusRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMSRStatusRowChanging != null)) {
                    this.tblMSRStatusRowChanging(this, new tblMSRStatusRowChangeEvent(((tblMSRStatusRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMSRStatusRowDeleted != null)) {
                    this.tblMSRStatusRowDeleted(this, new tblMSRStatusRowChangeEvent(((tblMSRStatusRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMSRStatusRowDeleting != null)) {
                    this.tblMSRStatusRowDeleting(this, new tblMSRStatusRowChangeEvent(((tblMSRStatusRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblMSRStatusRow(tblMSRStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMSRStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMSRReceiptsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMSRID;
            
            private System.Data.DataColumn columnMSRNo;
            
            private System.Data.DataColumn columnMSRDate;
            
            private System.Data.DataColumn columnRecvdDate;
            
            private System.Data.DataColumn columnRequiredDate;
            
            private System.Data.DataColumn columnNosItems;
            
            private System.Data.DataColumn columnRequestor;
            
            private System.Data.DataColumn columnDepartment;
            
            private System.Data.DataColumn columnApprovedby;
            
            private System.Data.DataColumn columnProject;
            
            private System.Data.DataColumn columnBuyer;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnMSRClosedDt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsDataTable() {
                this.TableName = "tblMSRReceipts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMSRReceiptsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblMSRReceiptsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRIDColumn {
                get {
                    return this.columnMSRID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRDateColumn {
                get {
                    return this.columnMSRDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RecvdDateColumn {
                get {
                    return this.columnRecvdDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RequiredDateColumn {
                get {
                    return this.columnRequiredDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NosItemsColumn {
                get {
                    return this.columnNosItems;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RequestorColumn {
                get {
                    return this.columnRequestor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedbyColumn {
                get {
                    return this.columnApprovedby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectColumn {
                get {
                    return this.columnProject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerColumn {
                get {
                    return this.columnBuyer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRClosedDtColumn {
                get {
                    return this.columnMSRClosedDt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsRow this[int index] {
                get {
                    return ((tblMSRReceiptsRow)(this.Rows[index]));
                }
            }
            
            public event tblMSRReceiptsRowChangeEventHandler tblMSRReceiptsRowChanging;
            
            public event tblMSRReceiptsRowChangeEventHandler tblMSRReceiptsRowChanged;
            
            public event tblMSRReceiptsRowChangeEventHandler tblMSRReceiptsRowDeleting;
            
            public event tblMSRReceiptsRowChangeEventHandler tblMSRReceiptsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblMSRReceiptsRow(tblMSRReceiptsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsRow AddtblMSRReceiptsRow(string MSRNo, System.DateTime MSRDate, System.DateTime RecvdDate, System.DateTime RequiredDate, int NosItems, string Requestor, string Department, string Approvedby, string Project, string Buyer, string Description, int Status, System.DateTime MSRClosedDt) {
                tblMSRReceiptsRow rowtblMSRReceiptsRow = ((tblMSRReceiptsRow)(this.NewRow()));
                rowtblMSRReceiptsRow.ItemArray = new object[] {
                        null,
                        MSRNo,
                        MSRDate,
                        RecvdDate,
                        RequiredDate,
                        NosItems,
                        Requestor,
                        Department,
                        Approvedby,
                        Project,
                        Buyer,
                        Description,
                        Status,
                        MSRClosedDt};
                this.Rows.Add(rowtblMSRReceiptsRow);
                return rowtblMSRReceiptsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsRow FindByMSRID(decimal MSRID) {
                return ((tblMSRReceiptsRow)(this.Rows.Find(new object[] {
                            MSRID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblMSRReceiptsDataTable cln = ((tblMSRReceiptsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblMSRReceiptsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMSRID = base.Columns["MSRID"];
                this.columnMSRNo = base.Columns["MSRNo"];
                this.columnMSRDate = base.Columns["MSRDate"];
                this.columnRecvdDate = base.Columns["RecvdDate"];
                this.columnRequiredDate = base.Columns["RequiredDate"];
                this.columnNosItems = base.Columns["NosItems"];
                this.columnRequestor = base.Columns["Requestor"];
                this.columnDepartment = base.Columns["Department"];
                this.columnApprovedby = base.Columns["Approvedby"];
                this.columnProject = base.Columns["Project"];
                this.columnBuyer = base.Columns["Buyer"];
                this.columnDescription = base.Columns["Description"];
                this.columnStatus = base.Columns["Status"];
                this.columnMSRClosedDt = base.Columns["MSRClosedDt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMSRID = new System.Data.DataColumn("MSRID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRID);
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.columnMSRDate = new System.Data.DataColumn("MSRDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRDate);
                this.columnRecvdDate = new System.Data.DataColumn("RecvdDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecvdDate);
                this.columnRequiredDate = new System.Data.DataColumn("RequiredDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredDate);
                this.columnNosItems = new System.Data.DataColumn("NosItems", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNosItems);
                this.columnRequestor = new System.Data.DataColumn("Requestor", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestor);
                this.columnDepartment = new System.Data.DataColumn("Department", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnApprovedby = new System.Data.DataColumn("Approvedby", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedby);
                this.columnProject = new System.Data.DataColumn("Project", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject);
                this.columnBuyer = new System.Data.DataColumn("Buyer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyer);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnMSRClosedDt = new System.Data.DataColumn("MSRClosedDt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRClosedDt);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMSRID}, true));
                this.columnMSRID.AutoIncrement = true;
                this.columnMSRID.AllowDBNull = false;
                this.columnMSRID.ReadOnly = true;
                this.columnMSRID.Unique = true;
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 9;
                this.columnMSRDate.AllowDBNull = false;
                this.columnRecvdDate.AllowDBNull = false;
                this.columnRequiredDate.AllowDBNull = false;
                this.columnNosItems.AllowDBNull = false;
                this.columnRequestor.AllowDBNull = false;
                this.columnRequestor.MaxLength = 50;
                this.columnDepartment.MaxLength = 50;
                this.columnApprovedby.MaxLength = 50;
                this.columnProject.AllowDBNull = false;
                this.columnProject.MaxLength = 50;
                this.columnBuyer.AllowDBNull = false;
                this.columnBuyer.MaxLength = 50;
                this.columnDescription.MaxLength = 250;
                this.columnStatus.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsRow NewtblMSRReceiptsRow() {
                return ((tblMSRReceiptsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblMSRReceiptsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblMSRReceiptsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMSRReceiptsRowChanged != null)) {
                    this.tblMSRReceiptsRowChanged(this, new tblMSRReceiptsRowChangeEvent(((tblMSRReceiptsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMSRReceiptsRowChanging != null)) {
                    this.tblMSRReceiptsRowChanging(this, new tblMSRReceiptsRowChangeEvent(((tblMSRReceiptsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMSRReceiptsRowDeleted != null)) {
                    this.tblMSRReceiptsRowDeleted(this, new tblMSRReceiptsRowChangeEvent(((tblMSRReceiptsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMSRReceiptsRowDeleting != null)) {
                    this.tblMSRReceiptsRowDeleting(this, new tblMSRReceiptsRowChangeEvent(((tblMSRReceiptsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblMSRReceiptsRow(tblMSRReceiptsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMSRReceiptsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MSRStatusDescDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMSRNo;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnStatusDesc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MSRStatusDescDataTable() {
                this.TableName = "MSRStatusDesc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MSRStatusDescDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MSRStatusDescDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusDescColumn {
                get {
                    return this.columnStatusDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MSRStatusDescRow this[int index] {
                get {
                    return ((MSRStatusDescRow)(this.Rows[index]));
                }
            }
            
            public event MSRStatusDescRowChangeEventHandler MSRStatusDescRowChanging;
            
            public event MSRStatusDescRowChangeEventHandler MSRStatusDescRowChanged;
            
            public event MSRStatusDescRowChangeEventHandler MSRStatusDescRowDeleting;
            
            public event MSRStatusDescRowChangeEventHandler MSRStatusDescRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMSRStatusDescRow(MSRStatusDescRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MSRStatusDescRow AddMSRStatusDescRow(string MSRNo, int Status, string StatusDesc) {
                MSRStatusDescRow rowMSRStatusDescRow = ((MSRStatusDescRow)(this.NewRow()));
                rowMSRStatusDescRow.ItemArray = new object[] {
                        MSRNo,
                        Status,
                        StatusDesc};
                this.Rows.Add(rowMSRStatusDescRow);
                return rowMSRStatusDescRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MSRStatusDescDataTable cln = ((MSRStatusDescDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MSRStatusDescDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMSRNo = base.Columns["MSRNo"];
                this.columnStatus = base.Columns["Status"];
                this.columnStatusDesc = base.Columns["StatusDesc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnStatusDesc = new System.Data.DataColumn("StatusDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusDesc);
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 9;
                this.columnStatus.AllowDBNull = false;
                this.columnStatusDesc.AllowDBNull = false;
                this.columnStatusDesc.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MSRStatusDescRow NewMSRStatusDescRow() {
                return ((MSRStatusDescRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MSRStatusDescRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MSRStatusDescRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MSRStatusDescRowChanged != null)) {
                    this.MSRStatusDescRowChanged(this, new MSRStatusDescRowChangeEvent(((MSRStatusDescRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MSRStatusDescRowChanging != null)) {
                    this.MSRStatusDescRowChanging(this, new MSRStatusDescRowChangeEvent(((MSRStatusDescRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MSRStatusDescRowDeleted != null)) {
                    this.MSRStatusDescRowDeleted(this, new MSRStatusDescRowChangeEvent(((MSRStatusDescRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MSRStatusDescRowDeleting != null)) {
                    this.MSRStatusDescRowDeleting(this, new MSRStatusDescRowChangeEvent(((MSRStatusDescRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMSRStatusDescRow(MSRStatusDescRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MSRStatusDescDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vPOdetailsCalculationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPO_DetailID;
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnUOM;
            
            private System.Data.DataColumn columnAccountCode;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnWithholding;
            
            private System.Data.DataColumn columnMSRNo;
            
            private System.Data.DataColumn columnPeriod;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columndiscountValue;
            
            private System.Data.DataColumn columnDiscountedPrice;
            
            private System.Data.DataColumn columnWHValue;
            
            private System.Data.DataColumn columnNETVALUE;
            
            private System.Data.DataColumn columnItemValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationDataTable() {
                this.TableName = "vPOdetailsCalculation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vPOdetailsCalculationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vPOdetailsCalculationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DetailIDColumn {
                get {
                    return this.columnPO_DetailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WithholdingColumn {
                get {
                    return this.columnWithholding;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn discountValueColumn {
                get {
                    return this.columndiscountValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountedPriceColumn {
                get {
                    return this.columnDiscountedPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WHValueColumn {
                get {
                    return this.columnWHValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NETVALUEColumn {
                get {
                    return this.columnNETVALUE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemValueColumn {
                get {
                    return this.columnItemValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationRow this[int index] {
                get {
                    return ((vPOdetailsCalculationRow)(this.Rows[index]));
                }
            }
            
            public event vPOdetailsCalculationRowChangeEventHandler vPOdetailsCalculationRowChanging;
            
            public event vPOdetailsCalculationRowChangeEventHandler vPOdetailsCalculationRowChanged;
            
            public event vPOdetailsCalculationRowChangeEventHandler vPOdetailsCalculationRowDeleting;
            
            public event vPOdetailsCalculationRowChangeEventHandler vPOdetailsCalculationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvPOdetailsCalculationRow(vPOdetailsCalculationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationRow AddvPOdetailsCalculationRow(decimal POID, string ItemDescription, decimal Quantity, string UOM, string AccountCode, decimal UnitPrice, decimal Withholding, string MSRNo, decimal Period, decimal Discount, decimal discountValue, decimal DiscountedPrice, decimal WHValue, decimal NETVALUE, decimal ItemValue) {
                vPOdetailsCalculationRow rowvPOdetailsCalculationRow = ((vPOdetailsCalculationRow)(this.NewRow()));
                rowvPOdetailsCalculationRow.ItemArray = new object[] {
                        null,
                        POID,
                        ItemDescription,
                        Quantity,
                        UOM,
                        AccountCode,
                        UnitPrice,
                        Withholding,
                        MSRNo,
                        Period,
                        Discount,
                        discountValue,
                        DiscountedPrice,
                        WHValue,
                        NETVALUE,
                        ItemValue};
                this.Rows.Add(rowvPOdetailsCalculationRow);
                return rowvPOdetailsCalculationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationRow FindByPO_DetailID(decimal PO_DetailID) {
                return ((vPOdetailsCalculationRow)(this.Rows.Find(new object[] {
                            PO_DetailID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vPOdetailsCalculationDataTable cln = ((vPOdetailsCalculationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vPOdetailsCalculationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPO_DetailID = base.Columns["PO_DetailID"];
                this.columnPOID = base.Columns["POID"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnWithholding = base.Columns["Withholding"];
                this.columnMSRNo = base.Columns["MSRNo"];
                this.columnPeriod = base.Columns["Period"];
                this.columnDiscount = base.Columns["Discount"];
                this.columndiscountValue = base.Columns["discountValue"];
                this.columnDiscountedPrice = base.Columns["DiscountedPrice"];
                this.columnWHValue = base.Columns["WHValue"];
                this.columnNETVALUE = base.Columns["NETVALUE"];
                this.columnItemValue = base.Columns["ItemValue"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPO_DetailID = new System.Data.DataColumn("PO_DetailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_DetailID);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new System.Data.DataColumn("UOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnAccountCode = new System.Data.DataColumn("AccountCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnWithholding = new System.Data.DataColumn("Withholding", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithholding);
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.columnPeriod = new System.Data.DataColumn("Period", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columndiscountValue = new System.Data.DataColumn("discountValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscountValue);
                this.columnDiscountedPrice = new System.Data.DataColumn("DiscountedPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountedPrice);
                this.columnWHValue = new System.Data.DataColumn("WHValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHValue);
                this.columnNETVALUE = new System.Data.DataColumn("NETVALUE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETVALUE);
                this.columnItemValue = new System.Data.DataColumn("ItemValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemValue);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPO_DetailID}, true));
                this.columnPO_DetailID.AutoIncrement = true;
                this.columnPO_DetailID.AllowDBNull = false;
                this.columnPO_DetailID.ReadOnly = true;
                this.columnPO_DetailID.Unique = true;
                this.columnPOID.AllowDBNull = false;
                this.columnItemDescription.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 3000;
                this.columnQuantity.AllowDBNull = false;
                this.columnUOM.AllowDBNull = false;
                this.columnUOM.MaxLength = 10;
                this.columnAccountCode.AllowDBNull = false;
                this.columnAccountCode.MaxLength = 20;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnWithholding.AllowDBNull = false;
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 15;
                this.columnPeriod.AllowDBNull = false;
                this.columnDiscount.AllowDBNull = false;
                this.columndiscountValue.AllowDBNull = false;
                this.columnDiscountedPrice.ReadOnly = true;
                this.columnWHValue.ReadOnly = true;
                this.columnNETVALUE.ReadOnly = true;
                this.columnItemValue.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationRow NewvPOdetailsCalculationRow() {
                return ((vPOdetailsCalculationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vPOdetailsCalculationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vPOdetailsCalculationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vPOdetailsCalculationRowChanged != null)) {
                    this.vPOdetailsCalculationRowChanged(this, new vPOdetailsCalculationRowChangeEvent(((vPOdetailsCalculationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vPOdetailsCalculationRowChanging != null)) {
                    this.vPOdetailsCalculationRowChanging(this, new vPOdetailsCalculationRowChangeEvent(((vPOdetailsCalculationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vPOdetailsCalculationRowDeleted != null)) {
                    this.vPOdetailsCalculationRowDeleted(this, new vPOdetailsCalculationRowChangeEvent(((vPOdetailsCalculationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vPOdetailsCalculationRowDeleting != null)) {
                    this.vPOdetailsCalculationRowDeleting(this, new vPOdetailsCalculationRowChangeEvent(((vPOdetailsCalculationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevPOdetailsCalculationRow(vPOdetailsCalculationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vPOdetailsCalculationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vPODetSummaryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPo_OrderNo;
            
            private System.Data.DataColumn columnPO_Date;
            
            private System.Data.DataColumn columnType;
            
            private System.Data.DataColumn columnPO_DetailID;
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnUOM;
            
            private System.Data.DataColumn columnAccountCode;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnWithholding;
            
            private System.Data.DataColumn columnMSRNo;
            
            private System.Data.DataColumn columnPeriod;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columndiscountValue;
            
            private System.Data.DataColumn columnDiscountedPrice;
            
            private System.Data.DataColumn columnWHValue;
            
            private System.Data.DataColumn columnNETVALUE;
            
            private System.Data.DataColumn columnItemValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryDataTable() {
                this.TableName = "vPODetSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vPODetSummaryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vPODetSummaryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Po_OrderNoColumn {
                get {
                    return this.columnPo_OrderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DateColumn {
                get {
                    return this.columnPO_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DetailIDColumn {
                get {
                    return this.columnPO_DetailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WithholdingColumn {
                get {
                    return this.columnWithholding;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn discountValueColumn {
                get {
                    return this.columndiscountValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountedPriceColumn {
                get {
                    return this.columnDiscountedPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WHValueColumn {
                get {
                    return this.columnWHValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NETVALUEColumn {
                get {
                    return this.columnNETVALUE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemValueColumn {
                get {
                    return this.columnItemValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryRow this[int index] {
                get {
                    return ((vPODetSummaryRow)(this.Rows[index]));
                }
            }
            
            public event vPODetSummaryRowChangeEventHandler vPODetSummaryRowChanging;
            
            public event vPODetSummaryRowChangeEventHandler vPODetSummaryRowChanged;
            
            public event vPODetSummaryRowChangeEventHandler vPODetSummaryRowDeleting;
            
            public event vPODetSummaryRowChangeEventHandler vPODetSummaryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvPODetSummaryRow(vPODetSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryRow AddvPODetSummaryRow(
                        decimal Po_OrderNo, 
                        System.DateTime PO_Date, 
                        string Type, 
                        decimal POID, 
                        string ItemDescription, 
                        decimal Quantity, 
                        string UOM, 
                        string AccountCode, 
                        decimal UnitPrice, 
                        decimal Withholding, 
                        string MSRNo, 
                        decimal Period, 
                        decimal Discount, 
                        decimal discountValue, 
                        decimal DiscountedPrice, 
                        decimal WHValue, 
                        decimal NETVALUE, 
                        decimal ItemValue) {
                vPODetSummaryRow rowvPODetSummaryRow = ((vPODetSummaryRow)(this.NewRow()));
                rowvPODetSummaryRow.ItemArray = new object[] {
                        Po_OrderNo,
                        PO_Date,
                        Type,
                        null,
                        POID,
                        ItemDescription,
                        Quantity,
                        UOM,
                        AccountCode,
                        UnitPrice,
                        Withholding,
                        MSRNo,
                        Period,
                        Discount,
                        discountValue,
                        DiscountedPrice,
                        WHValue,
                        NETVALUE,
                        ItemValue};
                this.Rows.Add(rowvPODetSummaryRow);
                return rowvPODetSummaryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryRow FindByPO_DetailID(decimal PO_DetailID) {
                return ((vPODetSummaryRow)(this.Rows.Find(new object[] {
                            PO_DetailID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vPODetSummaryDataTable cln = ((vPODetSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vPODetSummaryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPo_OrderNo = base.Columns["Po_OrderNo"];
                this.columnPO_Date = base.Columns["PO_Date"];
                this.columnType = base.Columns["Type"];
                this.columnPO_DetailID = base.Columns["PO_DetailID"];
                this.columnPOID = base.Columns["POID"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnWithholding = base.Columns["Withholding"];
                this.columnMSRNo = base.Columns["MSRNo"];
                this.columnPeriod = base.Columns["Period"];
                this.columnDiscount = base.Columns["Discount"];
                this.columndiscountValue = base.Columns["discountValue"];
                this.columnDiscountedPrice = base.Columns["DiscountedPrice"];
                this.columnWHValue = base.Columns["WHValue"];
                this.columnNETVALUE = base.Columns["NETVALUE"];
                this.columnItemValue = base.Columns["ItemValue"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPo_OrderNo = new System.Data.DataColumn("Po_OrderNo", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPo_OrderNo);
                this.columnPO_Date = new System.Data.DataColumn("PO_Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_Date);
                this.columnType = new System.Data.DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPO_DetailID = new System.Data.DataColumn("PO_DetailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_DetailID);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new System.Data.DataColumn("UOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnAccountCode = new System.Data.DataColumn("AccountCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnWithholding = new System.Data.DataColumn("Withholding", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithholding);
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.columnPeriod = new System.Data.DataColumn("Period", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columndiscountValue = new System.Data.DataColumn("discountValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscountValue);
                this.columnDiscountedPrice = new System.Data.DataColumn("DiscountedPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountedPrice);
                this.columnWHValue = new System.Data.DataColumn("WHValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHValue);
                this.columnNETVALUE = new System.Data.DataColumn("NETVALUE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETVALUE);
                this.columnItemValue = new System.Data.DataColumn("ItemValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemValue);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPO_DetailID}, true));
                this.columnPo_OrderNo.AllowDBNull = false;
                this.columnPO_Date.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 2;
                this.columnPO_DetailID.AutoIncrement = true;
                this.columnPO_DetailID.AllowDBNull = false;
                this.columnPO_DetailID.ReadOnly = true;
                this.columnPO_DetailID.Unique = true;
                this.columnPOID.AllowDBNull = false;
                this.columnItemDescription.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 3000;
                this.columnQuantity.AllowDBNull = false;
                this.columnUOM.AllowDBNull = false;
                this.columnUOM.MaxLength = 10;
                this.columnAccountCode.AllowDBNull = false;
                this.columnAccountCode.MaxLength = 20;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnWithholding.AllowDBNull = false;
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 15;
                this.columnPeriod.AllowDBNull = false;
                this.columnDiscount.AllowDBNull = false;
                this.columndiscountValue.AllowDBNull = false;
                this.columnDiscountedPrice.ReadOnly = true;
                this.columnWHValue.ReadOnly = true;
                this.columnNETVALUE.ReadOnly = true;
                this.columnItemValue.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryRow NewvPODetSummaryRow() {
                return ((vPODetSummaryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vPODetSummaryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vPODetSummaryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vPODetSummaryRowChanged != null)) {
                    this.vPODetSummaryRowChanged(this, new vPODetSummaryRowChangeEvent(((vPODetSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vPODetSummaryRowChanging != null)) {
                    this.vPODetSummaryRowChanging(this, new vPODetSummaryRowChangeEvent(((vPODetSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vPODetSummaryRowDeleted != null)) {
                    this.vPODetSummaryRowDeleted(this, new vPODetSummaryRowChangeEvent(((vPODetSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vPODetSummaryRowDeleting != null)) {
                    this.vPODetSummaryRowDeleting(this, new vPODetSummaryRowChangeEvent(((vPODetSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevPODetSummaryRow(vPODetSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vPODetSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblTransmittalLogDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTransmittalID;
            
            private System.Data.DataColumn columnTransmittalSender;
            
            private System.Data.DataColumn columnSenderDept;
            
            private System.Data.DataColumn columnTransmittalReceiver;
            
            private System.Data.DataColumn columnReceiverDept;
            
            private System.Data.DataColumn columnTranmittalDate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogDataTable() {
                this.TableName = "tblTransmittalLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTransmittalLogDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblTransmittalLogDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TransmittalIDColumn {
                get {
                    return this.columnTransmittalID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TransmittalSenderColumn {
                get {
                    return this.columnTransmittalSender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SenderDeptColumn {
                get {
                    return this.columnSenderDept;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TransmittalReceiverColumn {
                get {
                    return this.columnTransmittalReceiver;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReceiverDeptColumn {
                get {
                    return this.columnReceiverDept;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TranmittalDateColumn {
                get {
                    return this.columnTranmittalDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogRow this[int index] {
                get {
                    return ((tblTransmittalLogRow)(this.Rows[index]));
                }
            }
            
            public event tblTransmittalLogRowChangeEventHandler tblTransmittalLogRowChanging;
            
            public event tblTransmittalLogRowChangeEventHandler tblTransmittalLogRowChanged;
            
            public event tblTransmittalLogRowChangeEventHandler tblTransmittalLogRowDeleting;
            
            public event tblTransmittalLogRowChangeEventHandler tblTransmittalLogRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblTransmittalLogRow(tblTransmittalLogRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogRow AddtblTransmittalLogRow(string TransmittalSender, string SenderDept, string TransmittalReceiver, string ReceiverDept, System.DateTime TranmittalDate) {
                tblTransmittalLogRow rowtblTransmittalLogRow = ((tblTransmittalLogRow)(this.NewRow()));
                rowtblTransmittalLogRow.ItemArray = new object[] {
                        null,
                        TransmittalSender,
                        SenderDept,
                        TransmittalReceiver,
                        ReceiverDept,
                        TranmittalDate};
                this.Rows.Add(rowtblTransmittalLogRow);
                return rowtblTransmittalLogRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogRow FindByTransmittalID(decimal TransmittalID) {
                return ((tblTransmittalLogRow)(this.Rows.Find(new object[] {
                            TransmittalID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblTransmittalLogDataTable cln = ((tblTransmittalLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblTransmittalLogDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTransmittalID = base.Columns["TransmittalID"];
                this.columnTransmittalSender = base.Columns["TransmittalSender"];
                this.columnSenderDept = base.Columns["SenderDept"];
                this.columnTransmittalReceiver = base.Columns["TransmittalReceiver"];
                this.columnReceiverDept = base.Columns["ReceiverDept"];
                this.columnTranmittalDate = base.Columns["TranmittalDate"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTransmittalID = new System.Data.DataColumn("TransmittalID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransmittalID);
                this.columnTransmittalSender = new System.Data.DataColumn("TransmittalSender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransmittalSender);
                this.columnSenderDept = new System.Data.DataColumn("SenderDept", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenderDept);
                this.columnTransmittalReceiver = new System.Data.DataColumn("TransmittalReceiver", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransmittalReceiver);
                this.columnReceiverDept = new System.Data.DataColumn("ReceiverDept", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverDept);
                this.columnTranmittalDate = new System.Data.DataColumn("TranmittalDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranmittalDate);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTransmittalID}, true));
                this.columnTransmittalID.AutoIncrement = true;
                this.columnTransmittalID.AllowDBNull = false;
                this.columnTransmittalID.ReadOnly = true;
                this.columnTransmittalID.Unique = true;
                this.columnTransmittalSender.AllowDBNull = false;
                this.columnTransmittalSender.MaxLength = 50;
                this.columnSenderDept.MaxLength = 50;
                this.columnTransmittalReceiver.AllowDBNull = false;
                this.columnTransmittalReceiver.MaxLength = 50;
                this.columnReceiverDept.MaxLength = 50;
                this.columnTranmittalDate.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogRow NewtblTransmittalLogRow() {
                return ((tblTransmittalLogRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblTransmittalLogRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblTransmittalLogRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblTransmittalLogRowChanged != null)) {
                    this.tblTransmittalLogRowChanged(this, new tblTransmittalLogRowChangeEvent(((tblTransmittalLogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblTransmittalLogRowChanging != null)) {
                    this.tblTransmittalLogRowChanging(this, new tblTransmittalLogRowChangeEvent(((tblTransmittalLogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblTransmittalLogRowDeleted != null)) {
                    this.tblTransmittalLogRowDeleted(this, new tblTransmittalLogRowChangeEvent(((tblTransmittalLogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblTransmittalLogRowDeleting != null)) {
                    this.tblTransmittalLogRowDeleting(this, new tblTransmittalLogRowChangeEvent(((tblTransmittalLogRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblTransmittalLogRow(tblTransmittalLogRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblTransmittalLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblInvoicesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnInvoiceID;
            
            private System.Data.DataColumn columnInvoiceNumber;
            
            private System.Data.DataColumn columnPO_Number;
            
            private System.Data.DataColumn columnTransmittalNumber;
            
            private System.Data.DataColumn columnInvoiceDate;
            
            private System.Data.DataColumn columnReceiptDate;
            
            private System.Data.DataColumn columnPO_detailID;
            
            private System.Data.DataColumn columnSupplyDate;
            
            private System.Data.DataColumn columnSupplyQuantity;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesDataTable() {
                this.TableName = "tblInvoices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInvoicesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblInvoicesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_NumberColumn {
                get {
                    return this.columnPO_Number;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TransmittalNumberColumn {
                get {
                    return this.columnTransmittalNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_detailIDColumn {
                get {
                    return this.columnPO_detailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SupplyDateColumn {
                get {
                    return this.columnSupplyDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SupplyQuantityColumn {
                get {
                    return this.columnSupplyQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesRow this[int index] {
                get {
                    return ((tblInvoicesRow)(this.Rows[index]));
                }
            }
            
            public event tblInvoicesRowChangeEventHandler tblInvoicesRowChanging;
            
            public event tblInvoicesRowChangeEventHandler tblInvoicesRowChanged;
            
            public event tblInvoicesRowChangeEventHandler tblInvoicesRowDeleting;
            
            public event tblInvoicesRowChangeEventHandler tblInvoicesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblInvoicesRow(tblInvoicesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesRow AddtblInvoicesRow(string InvoiceNumber, decimal PO_Number, decimal TransmittalNumber, System.DateTime InvoiceDate, System.DateTime ReceiptDate, decimal PO_detailID, System.DateTime SupplyDate, decimal SupplyQuantity) {
                tblInvoicesRow rowtblInvoicesRow = ((tblInvoicesRow)(this.NewRow()));
                rowtblInvoicesRow.ItemArray = new object[] {
                        null,
                        InvoiceNumber,
                        PO_Number,
                        TransmittalNumber,
                        InvoiceDate,
                        ReceiptDate,
                        PO_detailID,
                        SupplyDate,
                        SupplyQuantity};
                this.Rows.Add(rowtblInvoicesRow);
                return rowtblInvoicesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesRow FindByInvoiceID(decimal InvoiceID) {
                return ((tblInvoicesRow)(this.Rows.Find(new object[] {
                            InvoiceID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblInvoicesDataTable cln = ((tblInvoicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblInvoicesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnPO_Number = base.Columns["PO_Number"];
                this.columnTransmittalNumber = base.Columns["TransmittalNumber"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnPO_detailID = base.Columns["PO_detailID"];
                this.columnSupplyDate = base.Columns["SupplyDate"];
                this.columnSupplyQuantity = base.Columns["SupplyQuantity"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvoiceID = new System.Data.DataColumn("InvoiceID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnInvoiceNumber = new System.Data.DataColumn("InvoiceNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnPO_Number = new System.Data.DataColumn("PO_Number", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_Number);
                this.columnTransmittalNumber = new System.Data.DataColumn("TransmittalNumber", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransmittalNumber);
                this.columnInvoiceDate = new System.Data.DataColumn("InvoiceDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnReceiptDate = new System.Data.DataColumn("ReceiptDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnPO_detailID = new System.Data.DataColumn("PO_detailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_detailID);
                this.columnSupplyDate = new System.Data.DataColumn("SupplyDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplyDate);
                this.columnSupplyQuantity = new System.Data.DataColumn("SupplyQuantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplyQuantity);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnInvoiceID}, true));
                this.columnInvoiceID.AutoIncrement = true;
                this.columnInvoiceID.AllowDBNull = false;
                this.columnInvoiceID.ReadOnly = true;
                this.columnInvoiceID.Unique = true;
                this.columnInvoiceNumber.AllowDBNull = false;
                this.columnInvoiceNumber.MaxLength = 50;
                this.columnPO_Number.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesRow NewtblInvoicesRow() {
                return ((tblInvoicesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblInvoicesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblInvoicesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblInvoicesRowChanged != null)) {
                    this.tblInvoicesRowChanged(this, new tblInvoicesRowChangeEvent(((tblInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblInvoicesRowChanging != null)) {
                    this.tblInvoicesRowChanging(this, new tblInvoicesRowChangeEvent(((tblInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblInvoicesRowDeleted != null)) {
                    this.tblInvoicesRowDeleted(this, new tblInvoicesRowChangeEvent(((tblInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblInvoicesRowDeleting != null)) {
                    this.tblInvoicesRowDeleting(this, new tblInvoicesRowChangeEvent(((tblInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblInvoicesRow(tblInvoicesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblInvoicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vMSR_POIssuedDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMSRID;
            
            private System.Data.DataColumn columnMSRNo;
            
            private System.Data.DataColumn columnMSRDate;
            
            private System.Data.DataColumn columnRecvdDate;
            
            private System.Data.DataColumn columnRequiredDate;
            
            private System.Data.DataColumn columnNosItems;
            
            private System.Data.DataColumn columnRequestor;
            
            private System.Data.DataColumn columnDepartment;
            
            private System.Data.DataColumn columnApprovedby;
            
            private System.Data.DataColumn columnProject;
            
            private System.Data.DataColumn columnBuyer;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnMSRClosedDt;
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnNetValue;
            
            private System.Data.DataColumn columnPo_OrderNo;
            
            private System.Data.DataColumn columnPO_Date;
            
            private System.Data.DataColumn columnVendorName;
            
            private System.Data.DataColumn columnStatusDesc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedDataTable() {
                this.TableName = "vMSR_POIssued";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vMSR_POIssuedDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vMSR_POIssuedDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRIDColumn {
                get {
                    return this.columnMSRID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRDateColumn {
                get {
                    return this.columnMSRDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RecvdDateColumn {
                get {
                    return this.columnRecvdDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RequiredDateColumn {
                get {
                    return this.columnRequiredDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NosItemsColumn {
                get {
                    return this.columnNosItems;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RequestorColumn {
                get {
                    return this.columnRequestor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApprovedbyColumn {
                get {
                    return this.columnApprovedby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectColumn {
                get {
                    return this.columnProject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerColumn {
                get {
                    return this.columnBuyer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRClosedDtColumn {
                get {
                    return this.columnMSRClosedDt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NetValueColumn {
                get {
                    return this.columnNetValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Po_OrderNoColumn {
                get {
                    return this.columnPo_OrderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DateColumn {
                get {
                    return this.columnPO_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatusDescColumn {
                get {
                    return this.columnStatusDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedRow this[int index] {
                get {
                    return ((vMSR_POIssuedRow)(this.Rows[index]));
                }
            }
            
            public event vMSR_POIssuedRowChangeEventHandler vMSR_POIssuedRowChanging;
            
            public event vMSR_POIssuedRowChangeEventHandler vMSR_POIssuedRowChanged;
            
            public event vMSR_POIssuedRowChangeEventHandler vMSR_POIssuedRowDeleting;
            
            public event vMSR_POIssuedRowChangeEventHandler vMSR_POIssuedRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvMSR_POIssuedRow(vMSR_POIssuedRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedRow AddvMSR_POIssuedRow(
                        string MSRNo, 
                        System.DateTime MSRDate, 
                        System.DateTime RecvdDate, 
                        System.DateTime RequiredDate, 
                        int NosItems, 
                        string Requestor, 
                        string Department, 
                        string Approvedby, 
                        string Project, 
                        string Buyer, 
                        string Description, 
                        int Status, 
                        System.DateTime MSRClosedDt, 
                        decimal POID, 
                        string ItemDescription, 
                        decimal UnitPrice, 
                        decimal Quantity, 
                        decimal NetValue, 
                        decimal Po_OrderNo, 
                        System.DateTime PO_Date, 
                        string VendorName, 
                        string StatusDesc) {
                vMSR_POIssuedRow rowvMSR_POIssuedRow = ((vMSR_POIssuedRow)(this.NewRow()));
                rowvMSR_POIssuedRow.ItemArray = new object[] {
                        null,
                        MSRNo,
                        MSRDate,
                        RecvdDate,
                        RequiredDate,
                        NosItems,
                        Requestor,
                        Department,
                        Approvedby,
                        Project,
                        Buyer,
                        Description,
                        Status,
                        MSRClosedDt,
                        POID,
                        ItemDescription,
                        UnitPrice,
                        Quantity,
                        NetValue,
                        Po_OrderNo,
                        PO_Date,
                        VendorName,
                        StatusDesc};
                this.Rows.Add(rowvMSR_POIssuedRow);
                return rowvMSR_POIssuedRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedRow FindByMSRID(decimal MSRID) {
                return ((vMSR_POIssuedRow)(this.Rows.Find(new object[] {
                            MSRID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vMSR_POIssuedDataTable cln = ((vMSR_POIssuedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vMSR_POIssuedDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMSRID = base.Columns["MSRID"];
                this.columnMSRNo = base.Columns["MSRNo"];
                this.columnMSRDate = base.Columns["MSRDate"];
                this.columnRecvdDate = base.Columns["RecvdDate"];
                this.columnRequiredDate = base.Columns["RequiredDate"];
                this.columnNosItems = base.Columns["NosItems"];
                this.columnRequestor = base.Columns["Requestor"];
                this.columnDepartment = base.Columns["Department"];
                this.columnApprovedby = base.Columns["Approvedby"];
                this.columnProject = base.Columns["Project"];
                this.columnBuyer = base.Columns["Buyer"];
                this.columnDescription = base.Columns["Description"];
                this.columnStatus = base.Columns["Status"];
                this.columnMSRClosedDt = base.Columns["MSRClosedDt"];
                this.columnPOID = base.Columns["POID"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnNetValue = base.Columns["NetValue"];
                this.columnPo_OrderNo = base.Columns["Po_OrderNo"];
                this.columnPO_Date = base.Columns["PO_Date"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnStatusDesc = base.Columns["StatusDesc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMSRID = new System.Data.DataColumn("MSRID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRID);
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.columnMSRDate = new System.Data.DataColumn("MSRDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRDate);
                this.columnRecvdDate = new System.Data.DataColumn("RecvdDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecvdDate);
                this.columnRequiredDate = new System.Data.DataColumn("RequiredDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredDate);
                this.columnNosItems = new System.Data.DataColumn("NosItems", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNosItems);
                this.columnRequestor = new System.Data.DataColumn("Requestor", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestor);
                this.columnDepartment = new System.Data.DataColumn("Department", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnApprovedby = new System.Data.DataColumn("Approvedby", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedby);
                this.columnProject = new System.Data.DataColumn("Project", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject);
                this.columnBuyer = new System.Data.DataColumn("Buyer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyer);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnMSRClosedDt = new System.Data.DataColumn("MSRClosedDt", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRClosedDt);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnNetValue = new System.Data.DataColumn("NetValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetValue);
                this.columnPo_OrderNo = new System.Data.DataColumn("Po_OrderNo", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPo_OrderNo);
                this.columnPO_Date = new System.Data.DataColumn("PO_Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_Date);
                this.columnVendorName = new System.Data.DataColumn("VendorName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnStatusDesc = new System.Data.DataColumn("StatusDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusDesc);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMSRID}, true));
                this.columnMSRID.AutoIncrement = true;
                this.columnMSRID.AllowDBNull = false;
                this.columnMSRID.ReadOnly = true;
                this.columnMSRID.Unique = true;
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 9;
                this.columnMSRDate.AllowDBNull = false;
                this.columnRecvdDate.AllowDBNull = false;
                this.columnRequiredDate.AllowDBNull = false;
                this.columnNosItems.AllowDBNull = false;
                this.columnRequestor.AllowDBNull = false;
                this.columnRequestor.MaxLength = 50;
                this.columnDepartment.MaxLength = 50;
                this.columnApprovedby.MaxLength = 50;
                this.columnProject.AllowDBNull = false;
                this.columnProject.MaxLength = 50;
                this.columnBuyer.AllowDBNull = false;
                this.columnBuyer.MaxLength = 50;
                this.columnDescription.MaxLength = 250;
                this.columnStatus.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 3000;
                this.columnNetValue.ReadOnly = true;
                this.columnVendorName.MaxLength = 50;
                this.columnStatusDesc.AllowDBNull = false;
                this.columnStatusDesc.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedRow NewvMSR_POIssuedRow() {
                return ((vMSR_POIssuedRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vMSR_POIssuedRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vMSR_POIssuedRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vMSR_POIssuedRowChanged != null)) {
                    this.vMSR_POIssuedRowChanged(this, new vMSR_POIssuedRowChangeEvent(((vMSR_POIssuedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vMSR_POIssuedRowChanging != null)) {
                    this.vMSR_POIssuedRowChanging(this, new vMSR_POIssuedRowChangeEvent(((vMSR_POIssuedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vMSR_POIssuedRowDeleted != null)) {
                    this.vMSR_POIssuedRowDeleted(this, new vMSR_POIssuedRowChangeEvent(((vMSR_POIssuedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vMSR_POIssuedRowDeleting != null)) {
                    this.vMSR_POIssuedRowDeleting(this, new vMSR_POIssuedRowChangeEvent(((vMSR_POIssuedRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevMSR_POIssuedRow(vMSR_POIssuedRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vMSR_POIssuedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vPOSummaryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPo_OrderNo;
            
            private System.Data.DataColumn columnPO_Date;
            
            private System.Data.DataColumn columnVendorName;
            
            private System.Data.DataColumn columnPO_description;
            
            private System.Data.DataColumn columnBuyer;
            
            private System.Data.DataColumn columnCurrency;
            
            private System.Data.DataColumn columnEndUser;
            
            private System.Data.DataColumn columnProject;
            
            private System.Data.DataColumn columnType;
            
            private System.Data.DataColumn columnOrderValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOSummaryDataTable() {
                this.TableName = "vPOSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vPOSummaryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vPOSummaryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Po_OrderNoColumn {
                get {
                    return this.columnPo_OrderNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DateColumn {
                get {
                    return this.columnPO_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_descriptionColumn {
                get {
                    return this.columnPO_description;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BuyerColumn {
                get {
                    return this.columnBuyer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndUserColumn {
                get {
                    return this.columnEndUser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectColumn {
                get {
                    return this.columnProject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderValueColumn {
                get {
                    return this.columnOrderValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOSummaryRow this[int index] {
                get {
                    return ((vPOSummaryRow)(this.Rows[index]));
                }
            }
            
            public event vPOSummaryRowChangeEventHandler vPOSummaryRowChanging;
            
            public event vPOSummaryRowChangeEventHandler vPOSummaryRowChanged;
            
            public event vPOSummaryRowChangeEventHandler vPOSummaryRowDeleting;
            
            public event vPOSummaryRowChangeEventHandler vPOSummaryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvPOSummaryRow(vPOSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOSummaryRow AddvPOSummaryRow(decimal Po_OrderNo, System.DateTime PO_Date, string VendorName, string PO_description, string Buyer, string Currency, string EndUser, string Project, string Type, decimal OrderValue) {
                vPOSummaryRow rowvPOSummaryRow = ((vPOSummaryRow)(this.NewRow()));
                rowvPOSummaryRow.ItemArray = new object[] {
                        Po_OrderNo,
                        PO_Date,
                        VendorName,
                        PO_description,
                        Buyer,
                        Currency,
                        EndUser,
                        Project,
                        Type,
                        OrderValue};
                this.Rows.Add(rowvPOSummaryRow);
                return rowvPOSummaryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vPOSummaryDataTable cln = ((vPOSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vPOSummaryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPo_OrderNo = base.Columns["Po_OrderNo"];
                this.columnPO_Date = base.Columns["PO_Date"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnPO_description = base.Columns["PO_description"];
                this.columnBuyer = base.Columns["Buyer"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnEndUser = base.Columns["EndUser"];
                this.columnProject = base.Columns["Project"];
                this.columnType = base.Columns["Type"];
                this.columnOrderValue = base.Columns["OrderValue"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPo_OrderNo = new System.Data.DataColumn("Po_OrderNo", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPo_OrderNo);
                this.columnPO_Date = new System.Data.DataColumn("PO_Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_Date);
                this.columnVendorName = new System.Data.DataColumn("VendorName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnPO_description = new System.Data.DataColumn("PO_description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_description);
                this.columnBuyer = new System.Data.DataColumn("Buyer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyer);
                this.columnCurrency = new System.Data.DataColumn("Currency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnEndUser = new System.Data.DataColumn("EndUser", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndUser);
                this.columnProject = new System.Data.DataColumn("Project", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject);
                this.columnType = new System.Data.DataColumn("Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnOrderValue = new System.Data.DataColumn("OrderValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderValue);
                this.columnPo_OrderNo.AllowDBNull = false;
                this.columnPO_Date.AllowDBNull = false;
                this.columnVendorName.AllowDBNull = false;
                this.columnVendorName.MaxLength = 50;
                this.columnPO_description.AllowDBNull = false;
                this.columnPO_description.MaxLength = 500;
                this.columnBuyer.AllowDBNull = false;
                this.columnBuyer.MaxLength = 50;
                this.columnCurrency.AllowDBNull = false;
                this.columnCurrency.MaxLength = 50;
                this.columnEndUser.AllowDBNull = false;
                this.columnEndUser.MaxLength = 50;
                this.columnProject.AllowDBNull = false;
                this.columnProject.MaxLength = 75;
                this.columnType.AllowDBNull = false;
                this.columnType.MaxLength = 2;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOSummaryRow NewvPOSummaryRow() {
                return ((vPOSummaryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vPOSummaryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vPOSummaryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vPOSummaryRowChanged != null)) {
                    this.vPOSummaryRowChanged(this, new vPOSummaryRowChangeEvent(((vPOSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vPOSummaryRowChanging != null)) {
                    this.vPOSummaryRowChanging(this, new vPOSummaryRowChangeEvent(((vPOSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vPOSummaryRowDeleted != null)) {
                    this.vPOSummaryRowDeleted(this, new vPOSummaryRowChangeEvent(((vPOSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vPOSummaryRowDeleting != null)) {
                    this.vPOSummaryRowDeleting(this, new vPOSummaryRowChangeEvent(((vPOSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevPOSummaryRow(vPOSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vPOSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblExpenseCodeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnExCodeID;
            
            private System.Data.DataColumn columnExpenseCode;
            
            private System.Data.DataColumn columnExDescription;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseCodeDataTable() {
                this.TableName = "tblExpenseCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblExpenseCodeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblExpenseCodeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExCodeIDColumn {
                get {
                    return this.columnExCodeID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExpenseCodeColumn {
                get {
                    return this.columnExpenseCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ExDescriptionColumn {
                get {
                    return this.columnExDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseCodeRow this[int index] {
                get {
                    return ((tblExpenseCodeRow)(this.Rows[index]));
                }
            }
            
            public event tblExpenseCodeRowChangeEventHandler tblExpenseCodeRowChanging;
            
            public event tblExpenseCodeRowChangeEventHandler tblExpenseCodeRowChanged;
            
            public event tblExpenseCodeRowChangeEventHandler tblExpenseCodeRowDeleting;
            
            public event tblExpenseCodeRowChangeEventHandler tblExpenseCodeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblExpenseCodeRow(tblExpenseCodeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseCodeRow AddtblExpenseCodeRow(string ExpenseCode, string ExDescription) {
                tblExpenseCodeRow rowtblExpenseCodeRow = ((tblExpenseCodeRow)(this.NewRow()));
                rowtblExpenseCodeRow.ItemArray = new object[] {
                        null,
                        ExpenseCode,
                        ExDescription};
                this.Rows.Add(rowtblExpenseCodeRow);
                return rowtblExpenseCodeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblExpenseCodeDataTable cln = ((tblExpenseCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblExpenseCodeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExCodeID = base.Columns["ExCodeID"];
                this.columnExpenseCode = base.Columns["ExpenseCode"];
                this.columnExDescription = base.Columns["ExDescription"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExCodeID = new System.Data.DataColumn("ExCodeID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExCodeID);
                this.columnExpenseCode = new System.Data.DataColumn("ExpenseCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseCode);
                this.columnExDescription = new System.Data.DataColumn("ExDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExDescription);
                this.columnExCodeID.AutoIncrement = true;
                this.columnExCodeID.AllowDBNull = false;
                this.columnExCodeID.ReadOnly = true;
                this.columnExpenseCode.AllowDBNull = false;
                this.columnExpenseCode.MaxLength = 5;
                this.columnExDescription.MaxLength = 1000;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseCodeRow NewtblExpenseCodeRow() {
                return ((tblExpenseCodeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblExpenseCodeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblExpenseCodeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblExpenseCodeRowChanged != null)) {
                    this.tblExpenseCodeRowChanged(this, new tblExpenseCodeRowChangeEvent(((tblExpenseCodeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblExpenseCodeRowChanging != null)) {
                    this.tblExpenseCodeRowChanging(this, new tblExpenseCodeRowChangeEvent(((tblExpenseCodeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblExpenseCodeRowDeleted != null)) {
                    this.tblExpenseCodeRowDeleted(this, new tblExpenseCodeRowChangeEvent(((tblExpenseCodeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblExpenseCodeRowDeleting != null)) {
                    this.tblExpenseCodeRowDeleting(this, new tblExpenseCodeRowChangeEvent(((tblExpenseCodeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblExpenseCodeRow(tblExpenseCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblExpenseCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblItemCostDistributionDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDistID;
            
            private System.Data.DataColumn columnPO_detailID;
            
            private System.Data.DataColumn columnChargeCode;
            
            private System.Data.DataColumn columnDistPercentage;
            
            private System.Data.DataColumn columnDistValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionDataTable() {
                this.TableName = "tblItemCostDistribution";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblItemCostDistributionDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblItemCostDistributionDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistIDColumn {
                get {
                    return this.columnDistID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_detailIDColumn {
                get {
                    return this.columnPO_detailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChargeCodeColumn {
                get {
                    return this.columnChargeCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistPercentageColumn {
                get {
                    return this.columnDistPercentage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistValueColumn {
                get {
                    return this.columnDistValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionRow this[int index] {
                get {
                    return ((tblItemCostDistributionRow)(this.Rows[index]));
                }
            }
            
            public event tblItemCostDistributionRowChangeEventHandler tblItemCostDistributionRowChanging;
            
            public event tblItemCostDistributionRowChangeEventHandler tblItemCostDistributionRowChanged;
            
            public event tblItemCostDistributionRowChangeEventHandler tblItemCostDistributionRowDeleting;
            
            public event tblItemCostDistributionRowChangeEventHandler tblItemCostDistributionRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblItemCostDistributionRow(tblItemCostDistributionRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionRow AddtblItemCostDistributionRow(decimal PO_detailID, string ChargeCode, decimal DistPercentage, decimal DistValue) {
                tblItemCostDistributionRow rowtblItemCostDistributionRow = ((tblItemCostDistributionRow)(this.NewRow()));
                rowtblItemCostDistributionRow.ItemArray = new object[] {
                        null,
                        PO_detailID,
                        ChargeCode,
                        DistPercentage,
                        DistValue};
                this.Rows.Add(rowtblItemCostDistributionRow);
                return rowtblItemCostDistributionRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionRow FindByDistID(decimal DistID) {
                return ((tblItemCostDistributionRow)(this.Rows.Find(new object[] {
                            DistID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblItemCostDistributionDataTable cln = ((tblItemCostDistributionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblItemCostDistributionDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDistID = base.Columns["DistID"];
                this.columnPO_detailID = base.Columns["PO_detailID"];
                this.columnChargeCode = base.Columns["ChargeCode"];
                this.columnDistPercentage = base.Columns["DistPercentage"];
                this.columnDistValue = base.Columns["DistValue"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDistID = new System.Data.DataColumn("DistID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistID);
                this.columnPO_detailID = new System.Data.DataColumn("PO_detailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_detailID);
                this.columnChargeCode = new System.Data.DataColumn("ChargeCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargeCode);
                this.columnDistPercentage = new System.Data.DataColumn("DistPercentage", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistPercentage);
                this.columnDistValue = new System.Data.DataColumn("DistValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistValue);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDistID}, true));
                this.columnDistID.AutoIncrement = true;
                this.columnDistID.AllowDBNull = false;
                this.columnDistID.ReadOnly = true;
                this.columnDistID.Unique = true;
                this.columnPO_detailID.AllowDBNull = false;
                this.columnChargeCode.AllowDBNull = false;
                this.columnChargeCode.MaxLength = 20;
                this.columnDistValue.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionRow NewtblItemCostDistributionRow() {
                return ((tblItemCostDistributionRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblItemCostDistributionRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblItemCostDistributionRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblItemCostDistributionRowChanged != null)) {
                    this.tblItemCostDistributionRowChanged(this, new tblItemCostDistributionRowChangeEvent(((tblItemCostDistributionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblItemCostDistributionRowChanging != null)) {
                    this.tblItemCostDistributionRowChanging(this, new tblItemCostDistributionRowChangeEvent(((tblItemCostDistributionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblItemCostDistributionRowDeleted != null)) {
                    this.tblItemCostDistributionRowDeleted(this, new tblItemCostDistributionRowChangeEvent(((tblItemCostDistributionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblItemCostDistributionRowDeleting != null)) {
                    this.tblItemCostDistributionRowDeleting(this, new tblItemCostDistributionRowChangeEvent(((tblItemCostDistributionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblItemCostDistributionRow(tblItemCostDistributionRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblItemCostDistributionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PO_detailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPO_DetailID;
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnUOM;
            
            private System.Data.DataColumn columnAccountCode;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnWithholding;
            
            private System.Data.DataColumn columnMSRNo;
            
            private System.Data.DataColumn columnPeriod;
            
            private System.Data.DataColumn columnDiscount;
            
            private System.Data.DataColumn columndiscountValue;
            
            private System.Data.DataColumn columnGroupNote;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsDataTable() {
                this.TableName = "PO_details";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PO_detailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PO_detailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DetailIDColumn {
                get {
                    return this.columnPO_DetailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WithholdingColumn {
                get {
                    return this.columnWithholding;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNoColumn {
                get {
                    return this.columnMSRNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn discountValueColumn {
                get {
                    return this.columndiscountValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GroupNoteColumn {
                get {
                    return this.columnGroupNote;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsRow this[int index] {
                get {
                    return ((PO_detailsRow)(this.Rows[index]));
                }
            }
            
            public event PO_detailsRowChangeEventHandler PO_detailsRowChanging;
            
            public event PO_detailsRowChangeEventHandler PO_detailsRowChanged;
            
            public event PO_detailsRowChangeEventHandler PO_detailsRowDeleting;
            
            public event PO_detailsRowChangeEventHandler PO_detailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPO_detailsRow(PO_detailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsRow AddPO_detailsRow(decimal POID, string ItemDescription, decimal Quantity, string UOM, string AccountCode, decimal UnitPrice, decimal Withholding, string MSRNo, decimal Period, decimal Discount, decimal discountValue, string GroupNote) {
                PO_detailsRow rowPO_detailsRow = ((PO_detailsRow)(this.NewRow()));
                rowPO_detailsRow.ItemArray = new object[] {
                        null,
                        POID,
                        ItemDescription,
                        Quantity,
                        UOM,
                        AccountCode,
                        UnitPrice,
                        Withholding,
                        MSRNo,
                        Period,
                        Discount,
                        discountValue,
                        GroupNote};
                this.Rows.Add(rowPO_detailsRow);
                return rowPO_detailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsRow FindByPO_DetailID(decimal PO_DetailID) {
                return ((PO_detailsRow)(this.Rows.Find(new object[] {
                            PO_DetailID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PO_detailsDataTable cln = ((PO_detailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PO_detailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPO_DetailID = base.Columns["PO_DetailID"];
                this.columnPOID = base.Columns["POID"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnWithholding = base.Columns["Withholding"];
                this.columnMSRNo = base.Columns["MSRNo"];
                this.columnPeriod = base.Columns["Period"];
                this.columnDiscount = base.Columns["Discount"];
                this.columndiscountValue = base.Columns["discountValue"];
                this.columnGroupNote = base.Columns["GroupNote"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPO_DetailID = new System.Data.DataColumn("PO_DetailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_DetailID);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new System.Data.DataColumn("UOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnAccountCode = new System.Data.DataColumn("AccountCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnWithholding = new System.Data.DataColumn("Withholding", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithholding);
                this.columnMSRNo = new System.Data.DataColumn("MSRNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNo);
                this.columnPeriod = new System.Data.DataColumn("Period", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnDiscount = new System.Data.DataColumn("Discount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columndiscountValue = new System.Data.DataColumn("discountValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscountValue);
                this.columnGroupNote = new System.Data.DataColumn("GroupNote", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupNote);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPO_DetailID}, true));
                this.columnPO_DetailID.AutoIncrement = true;
                this.columnPO_DetailID.AllowDBNull = false;
                this.columnPO_DetailID.ReadOnly = true;
                this.columnPO_DetailID.Unique = true;
                this.columnPOID.AllowDBNull = false;
                this.columnItemDescription.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 3000;
                this.columnQuantity.AllowDBNull = false;
                this.columnUOM.AllowDBNull = false;
                this.columnUOM.MaxLength = 10;
                this.columnAccountCode.AllowDBNull = false;
                this.columnAccountCode.MaxLength = 20;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnWithholding.AllowDBNull = false;
                this.columnMSRNo.AllowDBNull = false;
                this.columnMSRNo.MaxLength = 15;
                this.columnPeriod.AllowDBNull = false;
                this.columnDiscount.AllowDBNull = false;
                this.columndiscountValue.AllowDBNull = false;
                this.columnGroupNote.MaxLength = 1000;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsRow NewPO_detailsRow() {
                return ((PO_detailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PO_detailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PO_detailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PO_detailsRowChanged != null)) {
                    this.PO_detailsRowChanged(this, new PO_detailsRowChangeEvent(((PO_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PO_detailsRowChanging != null)) {
                    this.PO_detailsRowChanging(this, new PO_detailsRowChangeEvent(((PO_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PO_detailsRowDeleted != null)) {
                    this.PO_detailsRowDeleted(this, new PO_detailsRowChangeEvent(((PO_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PO_detailsRowDeleting != null)) {
                    this.PO_detailsRowDeleting(this, new PO_detailsRowChangeEvent(((PO_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePO_detailsRow(PO_detailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PO_detailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblAssetGroupDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnAssetGroupID;
            
            private System.Data.DataColumn columnAssetGroup;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupDataTable() {
                this.TableName = "tblAssetGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAssetGroupDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblAssetGroupDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AssetGroupIDColumn {
                get {
                    return this.columnAssetGroupID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AssetGroupColumn {
                get {
                    return this.columnAssetGroup;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupRow this[int index] {
                get {
                    return ((tblAssetGroupRow)(this.Rows[index]));
                }
            }
            
            public event tblAssetGroupRowChangeEventHandler tblAssetGroupRowChanging;
            
            public event tblAssetGroupRowChangeEventHandler tblAssetGroupRowChanged;
            
            public event tblAssetGroupRowChangeEventHandler tblAssetGroupRowDeleting;
            
            public event tblAssetGroupRowChangeEventHandler tblAssetGroupRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblAssetGroupRow(tblAssetGroupRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupRow AddtblAssetGroupRow(string AssetGroup) {
                tblAssetGroupRow rowtblAssetGroupRow = ((tblAssetGroupRow)(this.NewRow()));
                rowtblAssetGroupRow.ItemArray = new object[] {
                        null,
                        AssetGroup};
                this.Rows.Add(rowtblAssetGroupRow);
                return rowtblAssetGroupRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupRow FindByAssetGroupID(decimal AssetGroupID) {
                return ((tblAssetGroupRow)(this.Rows.Find(new object[] {
                            AssetGroupID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblAssetGroupDataTable cln = ((tblAssetGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblAssetGroupDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAssetGroupID = base.Columns["AssetGroupID"];
                this.columnAssetGroup = base.Columns["AssetGroup"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAssetGroupID = new System.Data.DataColumn("AssetGroupID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetGroupID);
                this.columnAssetGroup = new System.Data.DataColumn("AssetGroup", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetGroup);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnAssetGroupID}, true));
                this.columnAssetGroupID.AutoIncrement = true;
                this.columnAssetGroupID.AllowDBNull = false;
                this.columnAssetGroupID.ReadOnly = true;
                this.columnAssetGroupID.Unique = true;
                this.columnAssetGroup.AllowDBNull = false;
                this.columnAssetGroup.MaxLength = 25;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupRow NewtblAssetGroupRow() {
                return ((tblAssetGroupRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblAssetGroupRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblAssetGroupRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblAssetGroupRowChanged != null)) {
                    this.tblAssetGroupRowChanged(this, new tblAssetGroupRowChangeEvent(((tblAssetGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblAssetGroupRowChanging != null)) {
                    this.tblAssetGroupRowChanging(this, new tblAssetGroupRowChangeEvent(((tblAssetGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblAssetGroupRowDeleted != null)) {
                    this.tblAssetGroupRowDeleted(this, new tblAssetGroupRowChangeEvent(((tblAssetGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblAssetGroupRowDeleting != null)) {
                    this.tblAssetGroupRowDeleting(this, new tblAssetGroupRowChangeEvent(((tblAssetGroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblAssetGroupRow(tblAssetGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblAssetGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vEARFDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnpo_date;
            
            private System.Data.DataColumn columnpo_orderNO;
            
            private System.Data.DataColumn columnCurrency;
            
            private System.Data.DataColumn columnProject;
            
            private System.Data.DataColumn columnEndUser;
            
            private System.Data.DataColumn columnPOID;
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnMSRNO;
            
            private System.Data.DataColumn columnAssetGroup;
            
            private System.Data.DataColumn columnEarfNo;
            
            private System.Data.DataColumn columnJustification;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnUOM;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnNetValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vEARFDataTable() {
                this.TableName = "vEARF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vEARFDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vEARFDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn po_dateColumn {
                get {
                    return this.columnpo_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn po_orderNOColumn {
                get {
                    return this.columnpo_orderNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProjectColumn {
                get {
                    return this.columnProject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndUserColumn {
                get {
                    return this.columnEndUser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn POIDColumn {
                get {
                    return this.columnPOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MSRNOColumn {
                get {
                    return this.columnMSRNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AssetGroupColumn {
                get {
                    return this.columnAssetGroup;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EarfNoColumn {
                get {
                    return this.columnEarfNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JustificationColumn {
                get {
                    return this.columnJustification;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NetValueColumn {
                get {
                    return this.columnNetValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vEARFRow this[int index] {
                get {
                    return ((vEARFRow)(this.Rows[index]));
                }
            }
            
            public event vEARFRowChangeEventHandler vEARFRowChanging;
            
            public event vEARFRowChangeEventHandler vEARFRowChanged;
            
            public event vEARFRowChangeEventHandler vEARFRowDeleting;
            
            public event vEARFRowChangeEventHandler vEARFRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvEARFRow(vEARFRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vEARFRow AddvEARFRow(System.DateTime po_date, decimal po_orderNO, string Currency, string Project, string EndUser, decimal POID, string ItemDescription, string MSRNO, string AssetGroup, long EarfNo, string Justification, decimal Quantity, string UOM, decimal UnitPrice, decimal NetValue) {
                vEARFRow rowvEARFRow = ((vEARFRow)(this.NewRow()));
                rowvEARFRow.ItemArray = new object[] {
                        po_date,
                        po_orderNO,
                        Currency,
                        Project,
                        EndUser,
                        POID,
                        ItemDescription,
                        MSRNO,
                        AssetGroup,
                        EarfNo,
                        Justification,
                        Quantity,
                        UOM,
                        UnitPrice,
                        NetValue};
                this.Rows.Add(rowvEARFRow);
                return rowvEARFRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vEARFDataTable cln = ((vEARFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vEARFDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpo_date = base.Columns["po_date"];
                this.columnpo_orderNO = base.Columns["po_orderNO"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnProject = base.Columns["Project"];
                this.columnEndUser = base.Columns["EndUser"];
                this.columnPOID = base.Columns["POID"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnMSRNO = base.Columns["MSRNO"];
                this.columnAssetGroup = base.Columns["AssetGroup"];
                this.columnEarfNo = base.Columns["EarfNo"];
                this.columnJustification = base.Columns["Justification"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnNetValue = base.Columns["NetValue"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpo_date = new System.Data.DataColumn("po_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpo_date);
                this.columnpo_orderNO = new System.Data.DataColumn("po_orderNO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpo_orderNO);
                this.columnCurrency = new System.Data.DataColumn("Currency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnProject = new System.Data.DataColumn("Project", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject);
                this.columnEndUser = new System.Data.DataColumn("EndUser", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndUser);
                this.columnPOID = new System.Data.DataColumn("POID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOID);
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnMSRNO = new System.Data.DataColumn("MSRNO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSRNO);
                this.columnAssetGroup = new System.Data.DataColumn("AssetGroup", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetGroup);
                this.columnEarfNo = new System.Data.DataColumn("EarfNo", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarfNo);
                this.columnJustification = new System.Data.DataColumn("Justification", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJustification);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new System.Data.DataColumn("UOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnNetValue = new System.Data.DataColumn("NetValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetValue);
                this.columnpo_date.AllowDBNull = false;
                this.columnpo_orderNO.AllowDBNull = false;
                this.columnCurrency.AllowDBNull = false;
                this.columnCurrency.MaxLength = 50;
                this.columnProject.AllowDBNull = false;
                this.columnProject.MaxLength = 75;
                this.columnEndUser.AllowDBNull = false;
                this.columnEndUser.MaxLength = 50;
                this.columnItemDescription.MaxLength = 3000;
                this.columnMSRNO.MaxLength = 15;
                this.columnAssetGroup.MaxLength = 25;
                this.columnJustification.MaxLength = 255;
                this.columnUOM.MaxLength = 10;
                this.columnNetValue.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vEARFRow NewvEARFRow() {
                return ((vEARFRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vEARFRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vEARFRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vEARFRowChanged != null)) {
                    this.vEARFRowChanged(this, new vEARFRowChangeEvent(((vEARFRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vEARFRowChanging != null)) {
                    this.vEARFRowChanging(this, new vEARFRowChangeEvent(((vEARFRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vEARFRowDeleted != null)) {
                    this.vEARFRowDeleted(this, new vEARFRowChangeEvent(((vEARFRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vEARFRowDeleting != null)) {
                    this.vEARFRowDeleting(this, new vEARFRowChangeEvent(((vEARFRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevEARFRow(vEARFRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vEARFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblExpenseAssetDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnEARID;
            
            private System.Data.DataColumn columnEARFNO;
            
            private System.Data.DataColumn columnPO_detailID;
            
            private System.Data.DataColumn columnAssetGroup;
            
            private System.Data.DataColumn columnJustification;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseAssetDataTable() {
                this.TableName = "tblExpenseAsset";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblExpenseAssetDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblExpenseAssetDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EARIDColumn {
                get {
                    return this.columnEARID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EARFNOColumn {
                get {
                    return this.columnEARFNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_detailIDColumn {
                get {
                    return this.columnPO_detailID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AssetGroupColumn {
                get {
                    return this.columnAssetGroup;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JustificationColumn {
                get {
                    return this.columnJustification;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseAssetRow this[int index] {
                get {
                    return ((tblExpenseAssetRow)(this.Rows[index]));
                }
            }
            
            public event tblExpenseAssetRowChangeEventHandler tblExpenseAssetRowChanging;
            
            public event tblExpenseAssetRowChangeEventHandler tblExpenseAssetRowChanged;
            
            public event tblExpenseAssetRowChangeEventHandler tblExpenseAssetRowDeleting;
            
            public event tblExpenseAssetRowChangeEventHandler tblExpenseAssetRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblExpenseAssetRow(tblExpenseAssetRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseAssetRow AddtblExpenseAssetRow(long EARFNO, decimal PO_detailID, string AssetGroup, string Justification) {
                tblExpenseAssetRow rowtblExpenseAssetRow = ((tblExpenseAssetRow)(this.NewRow()));
                rowtblExpenseAssetRow.ItemArray = new object[] {
                        null,
                        EARFNO,
                        PO_detailID,
                        AssetGroup,
                        Justification};
                this.Rows.Add(rowtblExpenseAssetRow);
                return rowtblExpenseAssetRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblExpenseAssetDataTable cln = ((tblExpenseAssetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblExpenseAssetDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEARID = base.Columns["EARID"];
                this.columnEARFNO = base.Columns["EARFNO"];
                this.columnPO_detailID = base.Columns["PO_detailID"];
                this.columnAssetGroup = base.Columns["AssetGroup"];
                this.columnJustification = base.Columns["Justification"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEARID = new System.Data.DataColumn("EARID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEARID);
                this.columnEARFNO = new System.Data.DataColumn("EARFNO", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEARFNO);
                this.columnPO_detailID = new System.Data.DataColumn("PO_detailID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_detailID);
                this.columnAssetGroup = new System.Data.DataColumn("AssetGroup", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetGroup);
                this.columnJustification = new System.Data.DataColumn("Justification", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJustification);
                this.columnEARID.AutoIncrement = true;
                this.columnEARID.AllowDBNull = false;
                this.columnEARID.ReadOnly = true;
                this.columnEARFNO.AllowDBNull = false;
                this.columnPO_detailID.AllowDBNull = false;
                this.columnAssetGroup.AllowDBNull = false;
                this.columnAssetGroup.MaxLength = 25;
                this.columnJustification.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseAssetRow NewtblExpenseAssetRow() {
                return ((tblExpenseAssetRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblExpenseAssetRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblExpenseAssetRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblExpenseAssetRowChanged != null)) {
                    this.tblExpenseAssetRowChanged(this, new tblExpenseAssetRowChangeEvent(((tblExpenseAssetRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblExpenseAssetRowChanging != null)) {
                    this.tblExpenseAssetRowChanging(this, new tblExpenseAssetRowChangeEvent(((tblExpenseAssetRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblExpenseAssetRowDeleted != null)) {
                    this.tblExpenseAssetRowDeleted(this, new tblExpenseAssetRowChangeEvent(((tblExpenseAssetRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblExpenseAssetRowDeleting != null)) {
                    this.tblExpenseAssetRowDeleting(this, new tblExpenseAssetRowChangeEvent(((tblExpenseAssetRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblExpenseAssetRow(tblExpenseAssetRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblExpenseAssetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblUserGroupsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnGroupID;
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnUserGroup;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsDataTable() {
                this.TableName = "tblUserGroups";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblUserGroupsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblUserGroupsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserGroupColumn {
                get {
                    return this.columnUserGroup;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsRow this[int index] {
                get {
                    return ((tblUserGroupsRow)(this.Rows[index]));
                }
            }
            
            public event tblUserGroupsRowChangeEventHandler tblUserGroupsRowChanging;
            
            public event tblUserGroupsRowChangeEventHandler tblUserGroupsRowChanged;
            
            public event tblUserGroupsRowChangeEventHandler tblUserGroupsRowDeleting;
            
            public event tblUserGroupsRowChangeEventHandler tblUserGroupsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblUserGroupsRow(tblUserGroupsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsRow AddtblUserGroupsRow(string UserID, string UserGroup) {
                tblUserGroupsRow rowtblUserGroupsRow = ((tblUserGroupsRow)(this.NewRow()));
                rowtblUserGroupsRow.ItemArray = new object[] {
                        null,
                        UserID,
                        UserGroup};
                this.Rows.Add(rowtblUserGroupsRow);
                return rowtblUserGroupsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsRow FindByGroupID(int GroupID) {
                return ((tblUserGroupsRow)(this.Rows.Find(new object[] {
                            GroupID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tblUserGroupsDataTable cln = ((tblUserGroupsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tblUserGroupsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGroupID = base.Columns["GroupID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnUserGroup = base.Columns["UserGroup"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGroupID = new System.Data.DataColumn("GroupID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserGroup = new System.Data.DataColumn("UserGroup", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserGroup);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnGroupID}, true));
                this.columnGroupID.AutoIncrement = true;
                this.columnGroupID.AllowDBNull = false;
                this.columnGroupID.ReadOnly = true;
                this.columnGroupID.Unique = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 50;
                this.columnUserGroup.AllowDBNull = false;
                this.columnUserGroup.MaxLength = 1000;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsRow NewtblUserGroupsRow() {
                return ((tblUserGroupsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tblUserGroupsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tblUserGroupsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblUserGroupsRowChanged != null)) {
                    this.tblUserGroupsRowChanged(this, new tblUserGroupsRowChangeEvent(((tblUserGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblUserGroupsRowChanging != null)) {
                    this.tblUserGroupsRowChanging(this, new tblUserGroupsRowChangeEvent(((tblUserGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblUserGroupsRowDeleted != null)) {
                    this.tblUserGroupsRowDeleted(this, new tblUserGroupsRowChangeEvent(((tblUserGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblUserGroupsRowDeleting != null)) {
                    this.tblUserGroupsRowDeleting(this, new tblUserGroupsRowChangeEvent(((tblUserGroupsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblUserGroupsRow(tblUserGroupsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblUserGroupsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vItemCostDistributionSpendingDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnItemDescription;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnUnitPrice;
            
            private System.Data.DataColumn columnUOM;
            
            private System.Data.DataColumn columnDiscountValue;
            
            private System.Data.DataColumn columnWithHolding;
            
            private System.Data.DataColumn columnNETVALUE;
            
            private System.Data.DataColumn columnDistributionValue;
            
            private System.Data.DataColumn columnChargeCode;
            
            private System.Data.DataColumn columnDistPercentage;
            
            private System.Data.DataColumn columnjob_code;
            
            private System.Data.DataColumn columnjobno;
            
            private System.Data.DataColumn columnsubjobno;
            
            private System.Data.DataColumn columnjobno_desc;
            
            private System.Data.DataColumn columnsubjobno_desc;
            
            private System.Data.DataColumn columnPo_OrderNO;
            
            private System.Data.DataColumn columnpo_Date;
            
            private System.Data.DataColumn columnVendorName;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vItemCostDistributionSpendingDataTable() {
                this.TableName = "vItemCostDistributionSpending";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vItemCostDistributionSpendingDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vItemCostDistributionSpendingDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiscountValueColumn {
                get {
                    return this.columnDiscountValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WithHoldingColumn {
                get {
                    return this.columnWithHolding;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NETVALUEColumn {
                get {
                    return this.columnNETVALUE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistributionValueColumn {
                get {
                    return this.columnDistributionValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ChargeCodeColumn {
                get {
                    return this.columnChargeCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DistPercentageColumn {
                get {
                    return this.columnDistPercentage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn job_codeColumn {
                get {
                    return this.columnjob_code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jobnoColumn {
                get {
                    return this.columnjobno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn subjobnoColumn {
                get {
                    return this.columnsubjobno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jobno_descColumn {
                get {
                    return this.columnjobno_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn subjobno_descColumn {
                get {
                    return this.columnsubjobno_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Po_OrderNOColumn {
                get {
                    return this.columnPo_OrderNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn po_DateColumn {
                get {
                    return this.columnpo_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vItemCostDistributionSpendingRow this[int index] {
                get {
                    return ((vItemCostDistributionSpendingRow)(this.Rows[index]));
                }
            }
            
            public event vItemCostDistributionSpendingRowChangeEventHandler vItemCostDistributionSpendingRowChanging;
            
            public event vItemCostDistributionSpendingRowChangeEventHandler vItemCostDistributionSpendingRowChanged;
            
            public event vItemCostDistributionSpendingRowChangeEventHandler vItemCostDistributionSpendingRowDeleting;
            
            public event vItemCostDistributionSpendingRowChangeEventHandler vItemCostDistributionSpendingRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvItemCostDistributionSpendingRow(vItemCostDistributionSpendingRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vItemCostDistributionSpendingRow AddvItemCostDistributionSpendingRow(
                        string ItemDescription, 
                        decimal Quantity, 
                        decimal UnitPrice, 
                        string UOM, 
                        decimal DiscountValue, 
                        decimal WithHolding, 
                        decimal NETVALUE, 
                        decimal DistributionValue, 
                        string ChargeCode, 
                        decimal DistPercentage, 
                        string job_code, 
                        string jobno, 
                        string subjobno, 
                        string jobno_desc, 
                        string subjobno_desc, 
                        decimal Po_OrderNO, 
                        System.DateTime po_Date, 
                        string VendorName) {
                vItemCostDistributionSpendingRow rowvItemCostDistributionSpendingRow = ((vItemCostDistributionSpendingRow)(this.NewRow()));
                rowvItemCostDistributionSpendingRow.ItemArray = new object[] {
                        ItemDescription,
                        Quantity,
                        UnitPrice,
                        UOM,
                        DiscountValue,
                        WithHolding,
                        NETVALUE,
                        DistributionValue,
                        ChargeCode,
                        DistPercentage,
                        job_code,
                        jobno,
                        subjobno,
                        jobno_desc,
                        subjobno_desc,
                        Po_OrderNO,
                        po_Date,
                        VendorName};
                this.Rows.Add(rowvItemCostDistributionSpendingRow);
                return rowvItemCostDistributionSpendingRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vItemCostDistributionSpendingDataTable cln = ((vItemCostDistributionSpendingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vItemCostDistributionSpendingDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnUOM = base.Columns["UOM"];
                this.columnDiscountValue = base.Columns["DiscountValue"];
                this.columnWithHolding = base.Columns["WithHolding"];
                this.columnNETVALUE = base.Columns["NETVALUE"];
                this.columnDistributionValue = base.Columns["DistributionValue"];
                this.columnChargeCode = base.Columns["ChargeCode"];
                this.columnDistPercentage = base.Columns["DistPercentage"];
                this.columnjob_code = base.Columns["job_code"];
                this.columnjobno = base.Columns["jobno"];
                this.columnsubjobno = base.Columns["subjobno"];
                this.columnjobno_desc = base.Columns["jobno_desc"];
                this.columnsubjobno_desc = base.Columns["subjobno_desc"];
                this.columnPo_OrderNO = base.Columns["Po_OrderNO"];
                this.columnpo_Date = base.Columns["po_Date"];
                this.columnVendorName = base.Columns["VendorName"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemDescription = new System.Data.DataColumn("ItemDescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitPrice = new System.Data.DataColumn("UnitPrice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnUOM = new System.Data.DataColumn("UOM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnDiscountValue = new System.Data.DataColumn("DiscountValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountValue);
                this.columnWithHolding = new System.Data.DataColumn("WithHolding", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithHolding);
                this.columnNETVALUE = new System.Data.DataColumn("NETVALUE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETVALUE);
                this.columnDistributionValue = new System.Data.DataColumn("DistributionValue", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributionValue);
                this.columnChargeCode = new System.Data.DataColumn("ChargeCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargeCode);
                this.columnDistPercentage = new System.Data.DataColumn("DistPercentage", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistPercentage);
                this.columnjob_code = new System.Data.DataColumn("job_code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjob_code);
                this.columnjobno = new System.Data.DataColumn("jobno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjobno);
                this.columnsubjobno = new System.Data.DataColumn("subjobno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubjobno);
                this.columnjobno_desc = new System.Data.DataColumn("jobno_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjobno_desc);
                this.columnsubjobno_desc = new System.Data.DataColumn("subjobno_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubjobno_desc);
                this.columnPo_OrderNO = new System.Data.DataColumn("Po_OrderNO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPo_OrderNO);
                this.columnpo_Date = new System.Data.DataColumn("po_Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpo_Date);
                this.columnVendorName = new System.Data.DataColumn("VendorName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnItemDescription.AllowDBNull = false;
                this.columnItemDescription.MaxLength = 3000;
                this.columnQuantity.AllowDBNull = false;
                this.columnUnitPrice.AllowDBNull = false;
                this.columnUOM.AllowDBNull = false;
                this.columnUOM.MaxLength = 10;
                this.columnDiscountValue.AllowDBNull = false;
                this.columnWithHolding.AllowDBNull = false;
                this.columnNETVALUE.ReadOnly = true;
                this.columnDistributionValue.ReadOnly = true;
                this.columnChargeCode.AllowDBNull = false;
                this.columnChargeCode.MaxLength = 20;
                this.columnjob_code.AllowDBNull = false;
                this.columnjob_code.MaxLength = 50;
                this.columnjobno.MaxLength = 50;
                this.columnsubjobno.MaxLength = 50;
                this.columnjobno_desc.MaxLength = 200;
                this.columnsubjobno_desc.MaxLength = 250;
                this.columnPo_OrderNO.AllowDBNull = false;
                this.columnpo_Date.AllowDBNull = false;
                this.columnVendorName.AllowDBNull = false;
                this.columnVendorName.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vItemCostDistributionSpendingRow NewvItemCostDistributionSpendingRow() {
                return ((vItemCostDistributionSpendingRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vItemCostDistributionSpendingRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vItemCostDistributionSpendingRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vItemCostDistributionSpendingRowChanged != null)) {
                    this.vItemCostDistributionSpendingRowChanged(this, new vItemCostDistributionSpendingRowChangeEvent(((vItemCostDistributionSpendingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vItemCostDistributionSpendingRowChanging != null)) {
                    this.vItemCostDistributionSpendingRowChanging(this, new vItemCostDistributionSpendingRowChangeEvent(((vItemCostDistributionSpendingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vItemCostDistributionSpendingRowDeleted != null)) {
                    this.vItemCostDistributionSpendingRowDeleted(this, new vItemCostDistributionSpendingRowChangeEvent(((vItemCostDistributionSpendingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vItemCostDistributionSpendingRowDeleting != null)) {
                    this.vItemCostDistributionSpendingRowDeleting(this, new vItemCostDistributionSpendingRowChangeEvent(((vItemCostDistributionSpendingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevItemCostDistributionSpendingRow(vItemCostDistributionSpendingRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                POCS ds = new POCS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vItemCostDistributionSpendingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeliveryPointsRow : System.Data.DataRow {
            
            private DeliveryPointsDataTable tableDeliveryPoints;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryPointsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeliveryPoints = ((DeliveryPointsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DeliveryPointID {
                get {
                    return ((decimal)(this[this.tableDeliveryPoints.DeliveryPointIDColumn]));
                }
                set {
                    this[this.tableDeliveryPoints.DeliveryPointIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryPointName {
                get {
                    return ((string)(this[this.tableDeliveryPoints.DeliveryPointNameColumn]));
                }
                set {
                    this[this.tableDeliveryPoints.DeliveryPointNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryPointAddress {
                get {
                    return ((string)(this[this.tableDeliveryPoints.DeliveryPointAddressColumn]));
                }
                set {
                    this[this.tableDeliveryPoints.DeliveryPointAddressColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblCurrencyRow : System.Data.DataRow {
            
            private tblCurrencyDataTable tabletblCurrency;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblCurrencyRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblCurrency = ((tblCurrencyDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurrencyID {
                get {
                    return ((decimal)(this[this.tabletblCurrency.CurrencyIDColumn]));
                }
                set {
                    this[this.tabletblCurrency.CurrencyIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    return ((string)(this[this.tabletblCurrency.CurrencyColumn]));
                }
                set {
                    this[this.tabletblCurrency.CurrencyColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyRow : System.Data.DataRow {
            
            private CompanyDataTable tableCompany;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompany = ((CompanyDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CompanyID {
                get {
                    return ((decimal)(this[this.tableCompany.CompanyIDColumn]));
                }
                set {
                    this[this.tableCompany.CompanyIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    return ((string)(this[this.tableCompany.CompanyNameColumn]));
                }
                set {
                    this[this.tableCompany.CompanyNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    return ((string)(this[this.tableCompany.AddressColumn]));
                }
                set {
                    this[this.tableCompany.AddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string regno {
                get {
                    return ((string)(this[this.tableCompany.regnoColumn]));
                }
                set {
                    this[this.tableCompany.regnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tableCompany.PhoneColumn]));
                }
                set {
                    this[this.tableCompany.PhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    return ((string)(this[this.tableCompany.faxColumn]));
                }
                set {
                    this[this.tableCompany.faxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    return ((string)(this[this.tableCompany.emailColumn]));
                }
                set {
                    this[this.tableCompany.emailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FlashMsg {
                get {
                    try {
                        return ((string)(this[this.tableCompany.FlashMsgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FlashMsg\' in table \'Company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompany.FlashMsgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlashMsgNull() {
                return this.IsNull(this.tableCompany.FlashMsgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlashMsgNull() {
                this[this.tableCompany.FlashMsgColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DetailswithOrderNORow : System.Data.DataRow {
            
            private DetailswithOrderNODataTable tableDetailswithOrderNO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailswithOrderNORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetailswithOrderNO = ((DetailswithOrderNODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal po_orderNo {
                get {
                    return ((decimal)(this[this.tableDetailswithOrderNO.po_orderNoColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.po_orderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    return ((string)(this[this.tableDetailswithOrderNO.typeColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_DetailID {
                get {
                    return ((decimal)(this[this.tableDetailswithOrderNO.PO_DetailIDColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.PO_DetailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    return ((decimal)(this[this.tableDetailswithOrderNO.POIDColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    return ((string)(this[this.tableDetailswithOrderNO.ItemDescriptionColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    return ((decimal)(this[this.tableDetailswithOrderNO.QuantityColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    return ((string)(this[this.tableDetailswithOrderNO.UOMColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.UOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    return ((string)(this[this.tableDetailswithOrderNO.AccountCodeColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.AccountCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tableDetailswithOrderNO.UnitPriceColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Withholding {
                get {
                    return ((decimal)(this[this.tableDetailswithOrderNO.WithholdingColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.WithholdingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tableDetailswithOrderNO.MSRNoColumn]));
                }
                set {
                    this[this.tableDetailswithOrderNO.MSRNoColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vInvoiceVendorValueRow : System.Data.DataRow {
            
            private vInvoiceVendorValueDataTable tablevInvoiceVendorValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vInvoiceVendorValueRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevInvoiceVendorValue = ((vInvoiceVendorValueDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExprConcat {
                get {
                    try {
                        return ((string)(this[this.tablevInvoiceVendorValue.ExprConcatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ExprConcat\' in table \'vInvoiceVendorValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevInvoiceVendorValue.ExprConcatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExprConcatNull() {
                return this.IsNull(this.tablevInvoiceVendorValue.ExprConcatColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExprConcatNull() {
                this[this.tablevInvoiceVendorValue.ExprConcatColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VendorRow : System.Data.DataRow {
            
            private VendorDataTable tableVendor;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VendorRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVendor = ((VendorDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal vendor_id {
                get {
                    return ((decimal)(this[this.tableVendor.vendor_idColumn]));
                }
                set {
                    this[this.tableVendor.vendor_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_name {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_name\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_contactperson {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_contactpersonColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_contactperson\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_contactpersonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_address {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_addressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_address\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_addressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_phone {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_phoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_phone\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_phoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_mobile {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_mobileColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_mobile\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_mobileColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_zip {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_zipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_zip\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_zipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_fax {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_faxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_fax\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_faxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_email {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_emailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_email\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_emailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_status {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_status\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_city {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_cityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_city\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_cityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_country {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_countryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_country\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_countryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_regno {
                get {
                    try {
                        return ((string)(this[this.tableVendor.v_regnoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'v_regno\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.v_regnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime rEGdATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableVendor.rEGdATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rEGdATE\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.rEGdATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tableVendor.VendorCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.VendorCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AVL {
                get {
                    return ((bool)(this[this.tableVendor.AVLColumn]));
                }
                set {
                    this[this.tableVendor.AVLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string v_state {
                get {
                    return ((string)(this[this.tableVendor.v_stateColumn]));
                }
                set {
                    this[this.tableVendor.v_stateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int paymentTerms {
                get {
                    try {
                        return ((int)(this[this.tableVendor.paymentTermsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'paymentTerms\' in table \'Vendor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendor.paymentTermsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_nameNull() {
                return this.IsNull(this.tableVendor.v_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_nameNull() {
                this[this.tableVendor.v_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_contactpersonNull() {
                return this.IsNull(this.tableVendor.v_contactpersonColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_contactpersonNull() {
                this[this.tableVendor.v_contactpersonColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_addressNull() {
                return this.IsNull(this.tableVendor.v_addressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_addressNull() {
                this[this.tableVendor.v_addressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_phoneNull() {
                return this.IsNull(this.tableVendor.v_phoneColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_phoneNull() {
                this[this.tableVendor.v_phoneColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_mobileNull() {
                return this.IsNull(this.tableVendor.v_mobileColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_mobileNull() {
                this[this.tableVendor.v_mobileColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_zipNull() {
                return this.IsNull(this.tableVendor.v_zipColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_zipNull() {
                this[this.tableVendor.v_zipColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_faxNull() {
                return this.IsNull(this.tableVendor.v_faxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_faxNull() {
                this[this.tableVendor.v_faxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_emailNull() {
                return this.IsNull(this.tableVendor.v_emailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_emailNull() {
                this[this.tableVendor.v_emailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_statusNull() {
                return this.IsNull(this.tableVendor.v_statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_statusNull() {
                this[this.tableVendor.v_statusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_cityNull() {
                return this.IsNull(this.tableVendor.v_cityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_cityNull() {
                this[this.tableVendor.v_cityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_countryNull() {
                return this.IsNull(this.tableVendor.v_countryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_countryNull() {
                this[this.tableVendor.v_countryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isv_regnoNull() {
                return this.IsNull(this.tableVendor.v_regnoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setv_regnoNull() {
                this[this.tableVendor.v_regnoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrEGdATENull() {
                return this.IsNull(this.tableVendor.rEGdATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrEGdATENull() {
                this[this.tableVendor.rEGdATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tableVendor.VendorCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tableVendor.VendorCodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentTermsNull() {
                return this.IsNull(this.tableVendor.paymentTermsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentTermsNull() {
                this[this.tableVendor.paymentTermsColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderNumbersRow : System.Data.DataRow {
            
            private OrderNumbersDataTable tableOrderNumbers;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderNumbersRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderNumbers = ((OrderNumbersDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_OrderNo {
                get {
                    return ((decimal)(this[this.tableOrderNumbers.PO_OrderNoColumn]));
                }
                set {
                    this[this.tableOrderNumbers.PO_OrderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    return ((decimal)(this[this.tableOrderNumbers.POIDColumn]));
                }
                set {
                    this[this.tableOrderNumbers.POIDColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblUOMRow : System.Data.DataRow {
            
            private tblUOMDataTable tabletblUOM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblUOMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblUOM = ((tblUOMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal uom_id {
                get {
                    return ((decimal)(this[this.tabletblUOM.uom_idColumn]));
                }
                set {
                    this[this.tabletblUOM.uom_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom {
                get {
                    return ((string)(this[this.tabletblUOM.uomColumn]));
                }
                set {
                    this[this.tabletblUOM.uomColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uom_desc {
                get {
                    try {
                        return ((string)(this[this.tabletblUOM.uom_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uom_desc\' in table \'tblUOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblUOM.uom_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime t_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblUOM.t_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_date\' in table \'tblUOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblUOM.t_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime u_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblUOM.u_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'u_date\' in table \'tblUOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblUOM.u_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string t_user {
                get {
                    try {
                        return ((string)(this[this.tabletblUOM.t_userColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_user\' in table \'tblUOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblUOM.t_userColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuom_descNull() {
                return this.IsNull(this.tabletblUOM.uom_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuom_descNull() {
                this[this.tabletblUOM.uom_descColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_dateNull() {
                return this.IsNull(this.tabletblUOM.t_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_dateNull() {
                this[this.tabletblUOM.t_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isu_dateNull() {
                return this.IsNull(this.tabletblUOM.u_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setu_dateNull() {
                this[this.tabletblUOM.u_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_userNull() {
                return this.IsNull(this.tabletblUOM.t_userColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_userNull() {
                this[this.tabletblUOM.t_userColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblChargetypeRow : System.Data.DataRow {
            
            private tblChargetypeDataTable tabletblChargetype;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblChargetypeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblChargetype = ((tblChargetypeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChID {
                get {
                    return ((decimal)(this[this.tabletblChargetype.ChIDColumn]));
                }
                set {
                    this[this.tabletblChargetype.ChIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChargeType {
                get {
                    return ((string)(this[this.tabletblChargetype.ChargeTypeColumn]));
                }
                set {
                    this[this.tabletblChargetype.ChargeTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChargeTypeDesc {
                get {
                    try {
                        return ((string)(this[this.tabletblChargetype.ChargeTypeDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ChargeTypeDesc\' in table \'tblChargetype\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChargetype.ChargeTypeDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime t_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblChargetype.t_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_date\' in table \'tblChargetype\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChargetype.t_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime u_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblChargetype.u_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'u_date\' in table \'tblChargetype\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChargetype.u_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string t_user {
                get {
                    try {
                        return ((string)(this[this.tabletblChargetype.t_userColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_user\' in table \'tblChargetype\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChargetype.t_userColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tabletblChargetype.notesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'notes\' in table \'tblChargetype\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblChargetype.notesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargeTypeDescNull() {
                return this.IsNull(this.tabletblChargetype.ChargeTypeDescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargeTypeDescNull() {
                this[this.tabletblChargetype.ChargeTypeDescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_dateNull() {
                return this.IsNull(this.tabletblChargetype.t_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_dateNull() {
                this[this.tabletblChargetype.t_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isu_dateNull() {
                return this.IsNull(this.tabletblChargetype.u_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setu_dateNull() {
                this[this.tabletblChargetype.u_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_userNull() {
                return this.IsNull(this.tabletblChargetype.t_userColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_userNull() {
                this[this.tabletblChargetype.t_userColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tabletblChargetype.notesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tabletblChargetype.notesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblOrderTypeRow : System.Data.DataRow {
            
            private tblOrderTypeDataTable tabletblOrderType;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblOrderTypeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblOrderType = ((tblOrderTypeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OrderType_id {
                get {
                    return ((decimal)(this[this.tabletblOrderType.OrderType_idColumn]));
                }
                set {
                    this[this.tabletblOrderType.OrderType_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderType {
                get {
                    return ((string)(this[this.tabletblOrderType.OrderTypeColumn]));
                }
                set {
                    this[this.tabletblOrderType.OrderTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderTypedesc {
                get {
                    try {
                        return ((string)(this[this.tabletblOrderType.OrderTypedescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OrderTypedesc\' in table \'tblOrderType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderType.OrderTypedescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime t_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblOrderType.t_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_date\' in table \'tblOrderType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderType.t_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime u_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblOrderType.u_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'u_date\' in table \'tblOrderType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderType.u_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string t_user {
                get {
                    try {
                        return ((string)(this[this.tabletblOrderType.t_userColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_user\' in table \'tblOrderType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblOrderType.t_userColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderTypedescNull() {
                return this.IsNull(this.tabletblOrderType.OrderTypedescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderTypedescNull() {
                this[this.tabletblOrderType.OrderTypedescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_dateNull() {
                return this.IsNull(this.tabletblOrderType.t_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_dateNull() {
                this[this.tabletblOrderType.t_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isu_dateNull() {
                return this.IsNull(this.tabletblOrderType.u_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setu_dateNull() {
                this[this.tabletblOrderType.u_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_userNull() {
                return this.IsNull(this.tabletblOrderType.t_userColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_userNull() {
                this[this.tabletblOrderType.t_userColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblJobChargeRow : System.Data.DataRow {
            
            private tblJobChargeDataTable tabletblJobCharge;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblJobChargeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblJobCharge = ((tblJobChargeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChID {
                get {
                    return ((decimal)(this[this.tabletblJobCharge.ChIDColumn]));
                }
                set {
                    this[this.tabletblJobCharge.ChIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string job_code {
                get {
                    return ((string)(this[this.tabletblJobCharge.job_codeColumn]));
                }
                set {
                    this[this.tabletblJobCharge.job_codeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jobno {
                get {
                    try {
                        return ((string)(this[this.tabletblJobCharge.jobnoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'jobno\' in table \'tblJobCharge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblJobCharge.jobnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subjobno {
                get {
                    try {
                        return ((string)(this[this.tabletblJobCharge.subjobnoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'subjobno\' in table \'tblJobCharge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblJobCharge.subjobnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jobno_desc {
                get {
                    try {
                        return ((string)(this[this.tabletblJobCharge.jobno_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'jobno_desc\' in table \'tblJobCharge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblJobCharge.jobno_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subjobno_desc {
                get {
                    try {
                        return ((string)(this[this.tabletblJobCharge.subjobno_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'subjobno_desc\' in table \'tblJobCharge\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblJobCharge.subjobno_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjobnoNull() {
                return this.IsNull(this.tabletblJobCharge.jobnoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjobnoNull() {
                this[this.tabletblJobCharge.jobnoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubjobnoNull() {
                return this.IsNull(this.tabletblJobCharge.subjobnoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubjobnoNull() {
                this[this.tabletblJobCharge.subjobnoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjobno_descNull() {
                return this.IsNull(this.tabletblJobCharge.jobno_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjobno_descNull() {
                this[this.tabletblJobCharge.jobno_descColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issubjobno_descNull() {
                return this.IsNull(this.tabletblJobCharge.subjobno_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsubjobno_descNull() {
                this[this.tabletblJobCharge.subjobno_descColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblBuyerRow : System.Data.DataRow {
            
            private tblBuyerDataTable tabletblBuyer;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblBuyerRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblBuyer = ((tblBuyerDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BuyerID {
                get {
                    return ((decimal)(this[this.tabletblBuyer.BuyerIDColumn]));
                }
                set {
                    this[this.tabletblBuyer.BuyerIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyerIntial {
                get {
                    return ((string)(this[this.tabletblBuyer.BuyerIntialColumn]));
                }
                set {
                    this[this.tabletblBuyer.BuyerIntialColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuyerName {
                get {
                    return ((string)(this[this.tabletblBuyer.BuyerNameColumn]));
                }
                set {
                    this[this.tabletblBuyer.BuyerNameColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PO_HeaderRow : System.Data.DataRow {
            
            private PO_HeaderDataTable tablePO_Header;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PO_HeaderRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePO_Header = ((PO_HeaderDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    return ((decimal)(this[this.tablePO_Header.POIDColumn]));
                }
                set {
                    this[this.tablePO_Header.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    return ((string)(this[this.tablePO_Header.VendorNameColumn]));
                }
                set {
                    this[this.tablePO_Header.VendorNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorAddress {
                get {
                    return ((string)(this[this.tablePO_Header.VendorAddressColumn]));
                }
                set {
                    this[this.tablePO_Header.VendorAddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_OrderNo {
                get {
                    return ((decimal)(this[this.tablePO_Header.PO_OrderNoColumn]));
                }
                set {
                    this[this.tablePO_Header.PO_OrderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PO_Date {
                get {
                    return ((System.DateTime)(this[this.tablePO_Header.PO_DateColumn]));
                }
                set {
                    this[this.tablePO_Header.PO_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Requisition_OrderNo {
                get {
                    return ((string)(this[this.tablePO_Header.Requisition_OrderNoColumn]));
                }
                set {
                    this[this.tablePO_Header.Requisition_OrderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CostCenter {
                get {
                    return ((string)(this[this.tablePO_Header.CostCenterColumn]));
                }
                set {
                    this[this.tablePO_Header.CostCenterColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orderedby {
                get {
                    return ((string)(this[this.tablePO_Header.OrderedbyColumn]));
                }
                set {
                    this[this.tablePO_Header.OrderedbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Approvedby {
                get {
                    return ((string)(this[this.tablePO_Header.ApprovedbyColumn]));
                }
                set {
                    this[this.tablePO_Header.ApprovedbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    return ((string)(this[this.tablePO_Header.RemarksColumn]));
                }
                set {
                    this[this.tablePO_Header.RemarksColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryTerms {
                get {
                    return ((string)(this[this.tablePO_Header.DeliveryTermsColumn]));
                }
                set {
                    this[this.tablePO_Header.DeliveryTermsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    return ((string)(this[this.tablePO_Header.CurrencyColumn]));
                }
                set {
                    this[this.tablePO_Header.CurrencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    return ((int)(this[this.tablePO_Header.StatusColumn]));
                }
                set {
                    this[this.tablePO_Header.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChargeType {
                get {
                    return ((string)(this[this.tablePO_Header.ChargeTypeColumn]));
                }
                set {
                    this[this.tablePO_Header.ChargeTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CnctPerson {
                get {
                    return ((string)(this[this.tablePO_Header.CnctPersonColumn]));
                }
                set {
                    this[this.tablePO_Header.CnctPersonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorRef {
                get {
                    return ((string)(this[this.tablePO_Header.VendorRefColumn]));
                }
                set {
                    this[this.tablePO_Header.VendorRefColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Project {
                get {
                    return ((string)(this[this.tablePO_Header.ProjectColumn]));
                }
                set {
                    this[this.tablePO_Header.ProjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VesselName {
                get {
                    return ((string)(this[this.tablePO_Header.VesselNameColumn]));
                }
                set {
                    this[this.tablePO_Header.VesselNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndUser {
                get {
                    return ((string)(this[this.tablePO_Header.EndUserColumn]));
                }
                set {
                    this[this.tablePO_Header.EndUserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Buyer {
                get {
                    return ((string)(this[this.tablePO_Header.BuyerColumn]));
                }
                set {
                    this[this.tablePO_Header.BuyerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tablePO_Header.TypeColumn]));
                }
                set {
                    this[this.tablePO_Header.TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PO_Description {
                get {
                    return ((string)(this[this.tablePO_Header.PO_DescriptionColumn]));
                }
                set {
                    this[this.tablePO_Header.PO_DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryDate {
                get {
                    return ((string)(this[this.tablePO_Header.DeliveryDateColumn]));
                }
                set {
                    this[this.tablePO_Header.DeliveryDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImpInstructions {
                get {
                    return ((string)(this[this.tablePO_Header.ImpInstructionsColumn]));
                }
                set {
                    this[this.tablePO_Header.ImpInstructionsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryPoint {
                get {
                    return ((string)(this[this.tablePO_Header.DeliveryPointColumn]));
                }
                set {
                    this[this.tablePO_Header.DeliveryPointColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CnctTelephone {
                get {
                    return ((string)(this[this.tablePO_Header.CnctTelephoneColumn]));
                }
                set {
                    this[this.tablePO_Header.CnctTelephoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentTerms {
                get {
                    return ((string)(this[this.tablePO_Header.PaymentTermsColumn]));
                }
                set {
                    this[this.tablePO_Header.PaymentTermsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryPointAttn {
                get {
                    return ((string)(this[this.tablePO_Header.DeliveryPointAttnColumn]));
                }
                set {
                    this[this.tablePO_Header.DeliveryPointAttnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime t_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePO_Header.t_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_date\' in table \'PO_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePO_Header.t_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string t_user {
                get {
                    try {
                        return ((string)(this[this.tablePO_Header.t_userColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'t_user\' in table \'PO_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePO_Header.t_userColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_dateNull() {
                return this.IsNull(this.tablePO_Header.t_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_dateNull() {
                this[this.tablePO_Header.t_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ist_userNull() {
                return this.IsNull(this.tablePO_Header.t_userColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sett_userNull() {
                this[this.tablePO_Header.t_userColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblusersRow : System.Data.DataRow {
            
            private tblusersDataTable tabletblusers;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblusersRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblusers = ((tblusersDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UsrId {
                get {
                    return ((decimal)(this[this.tabletblusers.UsrIdColumn]));
                }
                set {
                    this[this.tabletblusers.UsrIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tabletblusers.UserIDColumn]));
                }
                set {
                    this[this.tabletblusers.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    return ((string)(this[this.tabletblusers.UserNameColumn]));
                }
                set {
                    this[this.tabletblusers.UserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    return ((string)(this[this.tabletblusers.DepartmentColumn]));
                }
                set {
                    this[this.tabletblusers.DepartmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserPassword {
                get {
                    return ((string)(this[this.tabletblusers.UserPasswordColumn]));
                }
                set {
                    this[this.tabletblusers.UserPasswordColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserType {
                get {
                    return ((string)(this[this.tabletblusers.UserTypeColumn]));
                }
                set {
                    this[this.tabletblusers.UserTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Accessrights {
                get {
                    return ((string)(this[this.tabletblusers.AccessrightsColumn]));
                }
                set {
                    this[this.tabletblusers.AccessrightsColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblMSRStatusRow : System.Data.DataRow {
            
            private tblMSRStatusDataTable tabletblMSRStatus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMSRStatusRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMSRStatus = ((tblMSRStatusDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSRStatusID {
                get {
                    return ((int)(this[this.tabletblMSRStatus.MSRStatusIDColumn]));
                }
                set {
                    this[this.tabletblMSRStatus.MSRStatusIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MSRStatus {
                get {
                    return ((int)(this[this.tabletblMSRStatus.MSRStatusColumn]));
                }
                set {
                    this[this.tabletblMSRStatus.MSRStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusDesc {
                get {
                    return ((string)(this[this.tabletblMSRStatus.StatusDescColumn]));
                }
                set {
                    this[this.tabletblMSRStatus.StatusDescColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblMSRReceiptsRow : System.Data.DataRow {
            
            private tblMSRReceiptsDataTable tabletblMSRReceipts;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMSRReceiptsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMSRReceipts = ((tblMSRReceiptsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSRID {
                get {
                    return ((decimal)(this[this.tabletblMSRReceipts.MSRIDColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.MSRIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tabletblMSRReceipts.MSRNoColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.MSRNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MSRDate {
                get {
                    return ((System.DateTime)(this[this.tabletblMSRReceipts.MSRDateColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.MSRDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecvdDate {
                get {
                    return ((System.DateTime)(this[this.tabletblMSRReceipts.RecvdDateColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.RecvdDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequiredDate {
                get {
                    return ((System.DateTime)(this[this.tabletblMSRReceipts.RequiredDateColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.RequiredDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NosItems {
                get {
                    return ((int)(this[this.tabletblMSRReceipts.NosItemsColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.NosItemsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Requestor {
                get {
                    return ((string)(this[this.tabletblMSRReceipts.RequestorColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.RequestorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tabletblMSRReceipts.DepartmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department\' in table \'tblMSRReceipts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMSRReceipts.DepartmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Approvedby {
                get {
                    try {
                        return ((string)(this[this.tabletblMSRReceipts.ApprovedbyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Approvedby\' in table \'tblMSRReceipts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMSRReceipts.ApprovedbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Project {
                get {
                    return ((string)(this[this.tabletblMSRReceipts.ProjectColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.ProjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Buyer {
                get {
                    return ((string)(this[this.tabletblMSRReceipts.BuyerColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.BuyerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletblMSRReceipts.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'tblMSRReceipts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMSRReceipts.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    return ((int)(this[this.tabletblMSRReceipts.StatusColumn]));
                }
                set {
                    this[this.tabletblMSRReceipts.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MSRClosedDt {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblMSRReceipts.MSRClosedDtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MSRClosedDt\' in table \'tblMSRReceipts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMSRReceipts.MSRClosedDtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tabletblMSRReceipts.DepartmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tabletblMSRReceipts.DepartmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedbyNull() {
                return this.IsNull(this.tabletblMSRReceipts.ApprovedbyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedbyNull() {
                this[this.tabletblMSRReceipts.ApprovedbyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletblMSRReceipts.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletblMSRReceipts.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSRClosedDtNull() {
                return this.IsNull(this.tabletblMSRReceipts.MSRClosedDtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSRClosedDtNull() {
                this[this.tabletblMSRReceipts.MSRClosedDtColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MSRStatusDescRow : System.Data.DataRow {
            
            private MSRStatusDescDataTable tableMSRStatusDesc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MSRStatusDescRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMSRStatusDesc = ((MSRStatusDescDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tableMSRStatusDesc.MSRNoColumn]));
                }
                set {
                    this[this.tableMSRStatusDesc.MSRNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    return ((int)(this[this.tableMSRStatusDesc.StatusColumn]));
                }
                set {
                    this[this.tableMSRStatusDesc.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusDesc {
                get {
                    return ((string)(this[this.tableMSRStatusDesc.StatusDescColumn]));
                }
                set {
                    this[this.tableMSRStatusDesc.StatusDescColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vPOdetailsCalculationRow : System.Data.DataRow {
            
            private vPOdetailsCalculationDataTable tablevPOdetailsCalculation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vPOdetailsCalculationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevPOdetailsCalculation = ((vPOdetailsCalculationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_DetailID {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.PO_DetailIDColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.PO_DetailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.POIDColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    return ((string)(this[this.tablevPOdetailsCalculation.ItemDescriptionColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.QuantityColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    return ((string)(this[this.tablevPOdetailsCalculation.UOMColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.UOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    return ((string)(this[this.tablevPOdetailsCalculation.AccountCodeColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.AccountCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.UnitPriceColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Withholding {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.WithholdingColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.WithholdingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tablevPOdetailsCalculation.MSRNoColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.MSRNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Period {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.PeriodColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.PeriodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.DiscountColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discountValue {
                get {
                    return ((decimal)(this[this.tablevPOdetailsCalculation.discountValueColumn]));
                }
                set {
                    this[this.tablevPOdetailsCalculation.discountValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountedPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablevPOdetailsCalculation.DiscountedPriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DiscountedPrice\' in table \'vPOdetailsCalculation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablevPOdetailsCalculation.DiscountedPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WHValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevPOdetailsCalculation.WHValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WHValue\' in table \'vPOdetailsCalculation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPOdetailsCalculation.WHValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NETVALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablevPOdetailsCalculation.NETVALUEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NETVALUE\' in table \'vPOdetailsCalculation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPOdetailsCalculation.NETVALUEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ItemValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevPOdetailsCalculation.ItemValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ItemValue\' in table \'vPOdetailsCalculation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPOdetailsCalculation.ItemValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountedPriceNull() {
                return this.IsNull(this.tablevPOdetailsCalculation.DiscountedPriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountedPriceNull() {
                this[this.tablevPOdetailsCalculation.DiscountedPriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWHValueNull() {
                return this.IsNull(this.tablevPOdetailsCalculation.WHValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWHValueNull() {
                this[this.tablevPOdetailsCalculation.WHValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETVALUENull() {
                return this.IsNull(this.tablevPOdetailsCalculation.NETVALUEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETVALUENull() {
                this[this.tablevPOdetailsCalculation.NETVALUEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemValueNull() {
                return this.IsNull(this.tablevPOdetailsCalculation.ItemValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemValueNull() {
                this[this.tablevPOdetailsCalculation.ItemValueColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vPODetSummaryRow : System.Data.DataRow {
            
            private vPODetSummaryDataTable tablevPODetSummary;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vPODetSummaryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevPODetSummary = ((vPODetSummaryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Po_OrderNo {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.Po_OrderNoColumn]));
                }
                set {
                    this[this.tablevPODetSummary.Po_OrderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PO_Date {
                get {
                    return ((System.DateTime)(this[this.tablevPODetSummary.PO_DateColumn]));
                }
                set {
                    this[this.tablevPODetSummary.PO_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tablevPODetSummary.TypeColumn]));
                }
                set {
                    this[this.tablevPODetSummary.TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_DetailID {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.PO_DetailIDColumn]));
                }
                set {
                    this[this.tablevPODetSummary.PO_DetailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.POIDColumn]));
                }
                set {
                    this[this.tablevPODetSummary.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    return ((string)(this[this.tablevPODetSummary.ItemDescriptionColumn]));
                }
                set {
                    this[this.tablevPODetSummary.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.QuantityColumn]));
                }
                set {
                    this[this.tablevPODetSummary.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    return ((string)(this[this.tablevPODetSummary.UOMColumn]));
                }
                set {
                    this[this.tablevPODetSummary.UOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    return ((string)(this[this.tablevPODetSummary.AccountCodeColumn]));
                }
                set {
                    this[this.tablevPODetSummary.AccountCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.UnitPriceColumn]));
                }
                set {
                    this[this.tablevPODetSummary.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Withholding {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.WithholdingColumn]));
                }
                set {
                    this[this.tablevPODetSummary.WithholdingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tablevPODetSummary.MSRNoColumn]));
                }
                set {
                    this[this.tablevPODetSummary.MSRNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Period {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.PeriodColumn]));
                }
                set {
                    this[this.tablevPODetSummary.PeriodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.DiscountColumn]));
                }
                set {
                    this[this.tablevPODetSummary.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discountValue {
                get {
                    return ((decimal)(this[this.tablevPODetSummary.discountValueColumn]));
                }
                set {
                    this[this.tablevPODetSummary.discountValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountedPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablevPODetSummary.DiscountedPriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DiscountedPrice\' in table \'vPODetSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPODetSummary.DiscountedPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WHValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevPODetSummary.WHValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WHValue\' in table \'vPODetSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPODetSummary.WHValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NETVALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablevPODetSummary.NETVALUEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NETVALUE\' in table \'vPODetSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPODetSummary.NETVALUEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ItemValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevPODetSummary.ItemValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ItemValue\' in table \'vPODetSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPODetSummary.ItemValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountedPriceNull() {
                return this.IsNull(this.tablevPODetSummary.DiscountedPriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountedPriceNull() {
                this[this.tablevPODetSummary.DiscountedPriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWHValueNull() {
                return this.IsNull(this.tablevPODetSummary.WHValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWHValueNull() {
                this[this.tablevPODetSummary.WHValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETVALUENull() {
                return this.IsNull(this.tablevPODetSummary.NETVALUEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETVALUENull() {
                this[this.tablevPODetSummary.NETVALUEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemValueNull() {
                return this.IsNull(this.tablevPODetSummary.ItemValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemValueNull() {
                this[this.tablevPODetSummary.ItemValueColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblTransmittalLogRow : System.Data.DataRow {
            
            private tblTransmittalLogDataTable tabletblTransmittalLog;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTransmittalLogRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblTransmittalLog = ((tblTransmittalLogDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TransmittalID {
                get {
                    return ((decimal)(this[this.tabletblTransmittalLog.TransmittalIDColumn]));
                }
                set {
                    this[this.tabletblTransmittalLog.TransmittalIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransmittalSender {
                get {
                    return ((string)(this[this.tabletblTransmittalLog.TransmittalSenderColumn]));
                }
                set {
                    this[this.tabletblTransmittalLog.TransmittalSenderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SenderDept {
                get {
                    try {
                        return ((string)(this[this.tabletblTransmittalLog.SenderDeptColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SenderDept\' in table \'tblTransmittalLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransmittalLog.SenderDeptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransmittalReceiver {
                get {
                    return ((string)(this[this.tabletblTransmittalLog.TransmittalReceiverColumn]));
                }
                set {
                    this[this.tabletblTransmittalLog.TransmittalReceiverColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiverDept {
                get {
                    try {
                        return ((string)(this[this.tabletblTransmittalLog.ReceiverDeptColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReceiverDept\' in table \'tblTransmittalLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransmittalLog.ReceiverDeptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TranmittalDate {
                get {
                    return ((System.DateTime)(this[this.tabletblTransmittalLog.TranmittalDateColumn]));
                }
                set {
                    this[this.tabletblTransmittalLog.TranmittalDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSenderDeptNull() {
                return this.IsNull(this.tabletblTransmittalLog.SenderDeptColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSenderDeptNull() {
                this[this.tabletblTransmittalLog.SenderDeptColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiverDeptNull() {
                return this.IsNull(this.tabletblTransmittalLog.ReceiverDeptColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiverDeptNull() {
                this[this.tabletblTransmittalLog.ReceiverDeptColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblInvoicesRow : System.Data.DataRow {
            
            private tblInvoicesDataTable tabletblInvoices;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInvoicesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblInvoices = ((tblInvoicesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal InvoiceID {
                get {
                    return ((decimal)(this[this.tabletblInvoices.InvoiceIDColumn]));
                }
                set {
                    this[this.tabletblInvoices.InvoiceIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    return ((string)(this[this.tabletblInvoices.InvoiceNumberColumn]));
                }
                set {
                    this[this.tabletblInvoices.InvoiceNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_Number {
                get {
                    return ((decimal)(this[this.tabletblInvoices.PO_NumberColumn]));
                }
                set {
                    this[this.tabletblInvoices.PO_NumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TransmittalNumber {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInvoices.TransmittalNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TransmittalNumber\' in table \'tblInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInvoices.TransmittalNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblInvoices.InvoiceDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'tblInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInvoices.InvoiceDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiptDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblInvoices.ReceiptDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'tblInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInvoices.ReceiptDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_detailID {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInvoices.PO_detailIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PO_detailID\' in table \'tblInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInvoices.PO_detailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SupplyDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblInvoices.SupplyDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SupplyDate\' in table \'tblInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInvoices.SupplyDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SupplyQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInvoices.SupplyQuantityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SupplyQuantity\' in table \'tblInvoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInvoices.SupplyQuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransmittalNumberNull() {
                return this.IsNull(this.tabletblInvoices.TransmittalNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransmittalNumberNull() {
                this[this.tabletblInvoices.TransmittalNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tabletblInvoices.InvoiceDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceDateNull() {
                this[this.tabletblInvoices.InvoiceDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tabletblInvoices.ReceiptDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tabletblInvoices.ReceiptDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPO_detailIDNull() {
                return this.IsNull(this.tabletblInvoices.PO_detailIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPO_detailIDNull() {
                this[this.tabletblInvoices.PO_detailIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplyDateNull() {
                return this.IsNull(this.tabletblInvoices.SupplyDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplyDateNull() {
                this[this.tabletblInvoices.SupplyDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplyQuantityNull() {
                return this.IsNull(this.tabletblInvoices.SupplyQuantityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplyQuantityNull() {
                this[this.tabletblInvoices.SupplyQuantityColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vMSR_POIssuedRow : System.Data.DataRow {
            
            private vMSR_POIssuedDataTable tablevMSR_POIssued;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vMSR_POIssuedRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevMSR_POIssued = ((vMSR_POIssuedDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSRID {
                get {
                    return ((decimal)(this[this.tablevMSR_POIssued.MSRIDColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.MSRIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tablevMSR_POIssued.MSRNoColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.MSRNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MSRDate {
                get {
                    return ((System.DateTime)(this[this.tablevMSR_POIssued.MSRDateColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.MSRDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RecvdDate {
                get {
                    return ((System.DateTime)(this[this.tablevMSR_POIssued.RecvdDateColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.RecvdDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequiredDate {
                get {
                    return ((System.DateTime)(this[this.tablevMSR_POIssued.RequiredDateColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.RequiredDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NosItems {
                get {
                    return ((int)(this[this.tablevMSR_POIssued.NosItemsColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.NosItemsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Requestor {
                get {
                    return ((string)(this[this.tablevMSR_POIssued.RequestorColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.RequestorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tablevMSR_POIssued.DepartmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Department\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.DepartmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Approvedby {
                get {
                    try {
                        return ((string)(this[this.tablevMSR_POIssued.ApprovedbyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Approvedby\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.ApprovedbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Project {
                get {
                    return ((string)(this[this.tablevMSR_POIssued.ProjectColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.ProjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Buyer {
                get {
                    return ((string)(this[this.tablevMSR_POIssued.BuyerColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.BuyerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablevMSR_POIssued.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    return ((int)(this[this.tablevMSR_POIssued.StatusColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MSRClosedDt {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablevMSR_POIssued.MSRClosedDtColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MSRClosedDt\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.MSRClosedDtColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    try {
                        return ((decimal)(this[this.tablevMSR_POIssued.POIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'POID\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    try {
                        return ((string)(this[this.tablevMSR_POIssued.ItemDescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ItemDescription\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablevMSR_POIssued.UnitPriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablevMSR_POIssued.QuantityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Quantity\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevMSR_POIssued.NetValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NetValue\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.NetValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Po_OrderNo {
                get {
                    try {
                        return ((decimal)(this[this.tablevMSR_POIssued.Po_OrderNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Po_OrderNo\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.Po_OrderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PO_Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablevMSR_POIssued.PO_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PO_Date\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.PO_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tablevMSR_POIssued.VendorNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VendorName\' in table \'vMSR_POIssued\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevMSR_POIssued.VendorNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusDesc {
                get {
                    return ((string)(this[this.tablevMSR_POIssued.StatusDescColumn]));
                }
                set {
                    this[this.tablevMSR_POIssued.StatusDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tablevMSR_POIssued.DepartmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tablevMSR_POIssued.DepartmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedbyNull() {
                return this.IsNull(this.tablevMSR_POIssued.ApprovedbyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedbyNull() {
                this[this.tablevMSR_POIssued.ApprovedbyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablevMSR_POIssued.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablevMSR_POIssued.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSRClosedDtNull() {
                return this.IsNull(this.tablevMSR_POIssued.MSRClosedDtColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSRClosedDtNull() {
                this[this.tablevMSR_POIssued.MSRClosedDtColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOIDNull() {
                return this.IsNull(this.tablevMSR_POIssued.POIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOIDNull() {
                this[this.tablevMSR_POIssued.POIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescriptionNull() {
                return this.IsNull(this.tablevMSR_POIssued.ItemDescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescriptionNull() {
                this[this.tablevMSR_POIssued.ItemDescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tablevMSR_POIssued.UnitPriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tablevMSR_POIssued.UnitPriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablevMSR_POIssued.QuantityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablevMSR_POIssued.QuantityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetValueNull() {
                return this.IsNull(this.tablevMSR_POIssued.NetValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetValueNull() {
                this[this.tablevMSR_POIssued.NetValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPo_OrderNoNull() {
                return this.IsNull(this.tablevMSR_POIssued.Po_OrderNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPo_OrderNoNull() {
                this[this.tablevMSR_POIssued.Po_OrderNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPO_DateNull() {
                return this.IsNull(this.tablevMSR_POIssued.PO_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPO_DateNull() {
                this[this.tablevMSR_POIssued.PO_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tablevMSR_POIssued.VendorNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tablevMSR_POIssued.VendorNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vPOSummaryRow : System.Data.DataRow {
            
            private vPOSummaryDataTable tablevPOSummary;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vPOSummaryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevPOSummary = ((vPOSummaryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Po_OrderNo {
                get {
                    return ((decimal)(this[this.tablevPOSummary.Po_OrderNoColumn]));
                }
                set {
                    this[this.tablevPOSummary.Po_OrderNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PO_Date {
                get {
                    return ((System.DateTime)(this[this.tablevPOSummary.PO_DateColumn]));
                }
                set {
                    this[this.tablevPOSummary.PO_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    return ((string)(this[this.tablevPOSummary.VendorNameColumn]));
                }
                set {
                    this[this.tablevPOSummary.VendorNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PO_description {
                get {
                    return ((string)(this[this.tablevPOSummary.PO_descriptionColumn]));
                }
                set {
                    this[this.tablevPOSummary.PO_descriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Buyer {
                get {
                    return ((string)(this[this.tablevPOSummary.BuyerColumn]));
                }
                set {
                    this[this.tablevPOSummary.BuyerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    return ((string)(this[this.tablevPOSummary.CurrencyColumn]));
                }
                set {
                    this[this.tablevPOSummary.CurrencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndUser {
                get {
                    return ((string)(this[this.tablevPOSummary.EndUserColumn]));
                }
                set {
                    this[this.tablevPOSummary.EndUserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Project {
                get {
                    return ((string)(this[this.tablevPOSummary.ProjectColumn]));
                }
                set {
                    this[this.tablevPOSummary.ProjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Type {
                get {
                    return ((string)(this[this.tablevPOSummary.TypeColumn]));
                }
                set {
                    this[this.tablevPOSummary.TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OrderValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevPOSummary.OrderValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OrderValue\' in table \'vPOSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevPOSummary.OrderValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderValueNull() {
                return this.IsNull(this.tablevPOSummary.OrderValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderValueNull() {
                this[this.tablevPOSummary.OrderValueColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblExpenseCodeRow : System.Data.DataRow {
            
            private tblExpenseCodeDataTable tabletblExpenseCode;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblExpenseCodeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblExpenseCode = ((tblExpenseCodeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExCodeID {
                get {
                    return ((decimal)(this[this.tabletblExpenseCode.ExCodeIDColumn]));
                }
                set {
                    this[this.tabletblExpenseCode.ExCodeIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpenseCode {
                get {
                    return ((string)(this[this.tabletblExpenseCode.ExpenseCodeColumn]));
                }
                set {
                    this[this.tabletblExpenseCode.ExpenseCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExDescription {
                get {
                    try {
                        return ((string)(this[this.tabletblExpenseCode.ExDescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ExDescription\' in table \'tblExpenseCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblExpenseCode.ExDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExDescriptionNull() {
                return this.IsNull(this.tabletblExpenseCode.ExDescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExDescriptionNull() {
                this[this.tabletblExpenseCode.ExDescriptionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblItemCostDistributionRow : System.Data.DataRow {
            
            private tblItemCostDistributionDataTable tabletblItemCostDistribution;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblItemCostDistributionRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblItemCostDistribution = ((tblItemCostDistributionDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DistID {
                get {
                    return ((decimal)(this[this.tabletblItemCostDistribution.DistIDColumn]));
                }
                set {
                    this[this.tabletblItemCostDistribution.DistIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_detailID {
                get {
                    return ((decimal)(this[this.tabletblItemCostDistribution.PO_detailIDColumn]));
                }
                set {
                    this[this.tabletblItemCostDistribution.PO_detailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChargeCode {
                get {
                    return ((string)(this[this.tabletblItemCostDistribution.ChargeCodeColumn]));
                }
                set {
                    this[this.tabletblItemCostDistribution.ChargeCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DistPercentage {
                get {
                    try {
                        return ((decimal)(this[this.tabletblItemCostDistribution.DistPercentageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DistPercentage\' in table \'tblItemCostDistribution\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblItemCostDistribution.DistPercentageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DistValue {
                get {
                    return ((decimal)(this[this.tabletblItemCostDistribution.DistValueColumn]));
                }
                set {
                    this[this.tabletblItemCostDistribution.DistValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistPercentageNull() {
                return this.IsNull(this.tabletblItemCostDistribution.DistPercentageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistPercentageNull() {
                this[this.tabletblItemCostDistribution.DistPercentageColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PO_detailsRow : System.Data.DataRow {
            
            private PO_detailsDataTable tablePO_details;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PO_detailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePO_details = ((PO_detailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_DetailID {
                get {
                    return ((decimal)(this[this.tablePO_details.PO_DetailIDColumn]));
                }
                set {
                    this[this.tablePO_details.PO_DetailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    return ((decimal)(this[this.tablePO_details.POIDColumn]));
                }
                set {
                    this[this.tablePO_details.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    return ((string)(this[this.tablePO_details.ItemDescriptionColumn]));
                }
                set {
                    this[this.tablePO_details.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    return ((decimal)(this[this.tablePO_details.QuantityColumn]));
                }
                set {
                    this[this.tablePO_details.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    return ((string)(this[this.tablePO_details.UOMColumn]));
                }
                set {
                    this[this.tablePO_details.UOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    return ((string)(this[this.tablePO_details.AccountCodeColumn]));
                }
                set {
                    this[this.tablePO_details.AccountCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tablePO_details.UnitPriceColumn]));
                }
                set {
                    this[this.tablePO_details.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Withholding {
                get {
                    return ((decimal)(this[this.tablePO_details.WithholdingColumn]));
                }
                set {
                    this[this.tablePO_details.WithholdingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNo {
                get {
                    return ((string)(this[this.tablePO_details.MSRNoColumn]));
                }
                set {
                    this[this.tablePO_details.MSRNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Period {
                get {
                    return ((decimal)(this[this.tablePO_details.PeriodColumn]));
                }
                set {
                    this[this.tablePO_details.PeriodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    return ((decimal)(this[this.tablePO_details.DiscountColumn]));
                }
                set {
                    this[this.tablePO_details.DiscountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal discountValue {
                get {
                    return ((decimal)(this[this.tablePO_details.discountValueColumn]));
                }
                set {
                    this[this.tablePO_details.discountValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupNote {
                get {
                    try {
                        return ((string)(this[this.tablePO_details.GroupNoteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GroupNote\' in table \'PO_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePO_details.GroupNoteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupNoteNull() {
                return this.IsNull(this.tablePO_details.GroupNoteColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupNoteNull() {
                this[this.tablePO_details.GroupNoteColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblAssetGroupRow : System.Data.DataRow {
            
            private tblAssetGroupDataTable tabletblAssetGroup;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAssetGroupRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblAssetGroup = ((tblAssetGroupDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AssetGroupID {
                get {
                    return ((decimal)(this[this.tabletblAssetGroup.AssetGroupIDColumn]));
                }
                set {
                    this[this.tabletblAssetGroup.AssetGroupIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetGroup {
                get {
                    return ((string)(this[this.tabletblAssetGroup.AssetGroupColumn]));
                }
                set {
                    this[this.tabletblAssetGroup.AssetGroupColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vEARFRow : System.Data.DataRow {
            
            private vEARFDataTable tablevEARF;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vEARFRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevEARF = ((vEARFDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime po_date {
                get {
                    return ((System.DateTime)(this[this.tablevEARF.po_dateColumn]));
                }
                set {
                    this[this.tablevEARF.po_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal po_orderNO {
                get {
                    return ((decimal)(this[this.tablevEARF.po_orderNOColumn]));
                }
                set {
                    this[this.tablevEARF.po_orderNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    return ((string)(this[this.tablevEARF.CurrencyColumn]));
                }
                set {
                    this[this.tablevEARF.CurrencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Project {
                get {
                    return ((string)(this[this.tablevEARF.ProjectColumn]));
                }
                set {
                    this[this.tablevEARF.ProjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndUser {
                get {
                    return ((string)(this[this.tablevEARF.EndUserColumn]));
                }
                set {
                    this[this.tablevEARF.EndUserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal POID {
                get {
                    try {
                        return ((decimal)(this[this.tablevEARF.POIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'POID\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.POIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    try {
                        return ((string)(this[this.tablevEARF.ItemDescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ItemDescription\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MSRNO {
                get {
                    try {
                        return ((string)(this[this.tablevEARF.MSRNOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MSRNO\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.MSRNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetGroup {
                get {
                    try {
                        return ((string)(this[this.tablevEARF.AssetGroupColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AssetGroup\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.AssetGroupColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long EarfNo {
                get {
                    try {
                        return ((long)(this[this.tablevEARF.EarfNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EarfNo\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.EarfNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Justification {
                get {
                    try {
                        return ((string)(this[this.tablevEARF.JustificationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Justification\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.JustificationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablevEARF.QuantityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Quantity\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tablevEARF.UOMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UOM\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.UOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablevEARF.UnitPriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevEARF.NetValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NetValue\' in table \'vEARF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevEARF.NetValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOIDNull() {
                return this.IsNull(this.tablevEARF.POIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOIDNull() {
                this[this.tablevEARF.POIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescriptionNull() {
                return this.IsNull(this.tablevEARF.ItemDescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescriptionNull() {
                this[this.tablevEARF.ItemDescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSRNONull() {
                return this.IsNull(this.tablevEARF.MSRNOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSRNONull() {
                this[this.tablevEARF.MSRNOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssetGroupNull() {
                return this.IsNull(this.tablevEARF.AssetGroupColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssetGroupNull() {
                this[this.tablevEARF.AssetGroupColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarfNoNull() {
                return this.IsNull(this.tablevEARF.EarfNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarfNoNull() {
                this[this.tablevEARF.EarfNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJustificationNull() {
                return this.IsNull(this.tablevEARF.JustificationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJustificationNull() {
                this[this.tablevEARF.JustificationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablevEARF.QuantityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablevEARF.QuantityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tablevEARF.UOMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tablevEARF.UOMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tablevEARF.UnitPriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tablevEARF.UnitPriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetValueNull() {
                return this.IsNull(this.tablevEARF.NetValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetValueNull() {
                this[this.tablevEARF.NetValueColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblExpenseAssetRow : System.Data.DataRow {
            
            private tblExpenseAssetDataTable tabletblExpenseAsset;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblExpenseAssetRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblExpenseAsset = ((tblExpenseAssetDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EARID {
                get {
                    return ((decimal)(this[this.tabletblExpenseAsset.EARIDColumn]));
                }
                set {
                    this[this.tabletblExpenseAsset.EARIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long EARFNO {
                get {
                    return ((long)(this[this.tabletblExpenseAsset.EARFNOColumn]));
                }
                set {
                    this[this.tabletblExpenseAsset.EARFNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PO_detailID {
                get {
                    return ((decimal)(this[this.tabletblExpenseAsset.PO_detailIDColumn]));
                }
                set {
                    this[this.tabletblExpenseAsset.PO_detailIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssetGroup {
                get {
                    return ((string)(this[this.tabletblExpenseAsset.AssetGroupColumn]));
                }
                set {
                    this[this.tabletblExpenseAsset.AssetGroupColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Justification {
                get {
                    try {
                        return ((string)(this[this.tabletblExpenseAsset.JustificationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Justification\' in table \'tblExpenseAsset\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblExpenseAsset.JustificationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJustificationNull() {
                return this.IsNull(this.tabletblExpenseAsset.JustificationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJustificationNull() {
                this[this.tabletblExpenseAsset.JustificationColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblUserGroupsRow : System.Data.DataRow {
            
            private tblUserGroupsDataTable tabletblUserGroups;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblUserGroupsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblUserGroups = ((tblUserGroupsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GroupID {
                get {
                    return ((int)(this[this.tabletblUserGroups.GroupIDColumn]));
                }
                set {
                    this[this.tabletblUserGroups.GroupIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tabletblUserGroups.UserIDColumn]));
                }
                set {
                    this[this.tabletblUserGroups.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserGroup {
                get {
                    return ((string)(this[this.tabletblUserGroups.UserGroupColumn]));
                }
                set {
                    this[this.tabletblUserGroups.UserGroupColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vItemCostDistributionSpendingRow : System.Data.DataRow {
            
            private vItemCostDistributionSpendingDataTable tablevItemCostDistributionSpending;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vItemCostDistributionSpendingRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevItemCostDistributionSpending = ((vItemCostDistributionSpendingDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDescription {
                get {
                    return ((string)(this[this.tablevItemCostDistributionSpending.ItemDescriptionColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.ItemDescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    return ((decimal)(this[this.tablevItemCostDistributionSpending.QuantityColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    return ((decimal)(this[this.tablevItemCostDistributionSpending.UnitPriceColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.UnitPriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    return ((string)(this[this.tablevItemCostDistributionSpending.UOMColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.UOMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountValue {
                get {
                    return ((decimal)(this[this.tablevItemCostDistributionSpending.DiscountValueColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.DiscountValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WithHolding {
                get {
                    return ((decimal)(this[this.tablevItemCostDistributionSpending.WithHoldingColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.WithHoldingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NETVALUE {
                get {
                    try {
                        return ((decimal)(this[this.tablevItemCostDistributionSpending.NETVALUEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NETVALUE\' in table \'vItemCostDistributionSpending\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.NETVALUEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DistributionValue {
                get {
                    try {
                        return ((decimal)(this[this.tablevItemCostDistributionSpending.DistributionValueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DistributionValue\' in table \'vItemCostDistributionSpending\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.DistributionValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChargeCode {
                get {
                    return ((string)(this[this.tablevItemCostDistributionSpending.ChargeCodeColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.ChargeCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DistPercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablevItemCostDistributionSpending.DistPercentageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DistPercentage\' in table \'vItemCostDistributionSpending\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.DistPercentageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string job_code {
                get {
                    return ((string)(this[this.tablevItemCostDistributionSpending.job_codeColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.job_codeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jobno {
                get {
                    try {
                        return ((string)(this[this.tablevItemCostDistributionSpending.jobnoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'jobno\' in table \'vItemCostDistributionSpending\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.jobnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subjobno {
                get {
                    try {
                        return ((string)(this[this.tablevItemCostDistributionSpending.subjobnoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'subjobno\' in table \'vItemCostDistributionSpending\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.subjobnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jobno_desc {
                get {
                    try {
                        return ((string)(this[this.tablevItemCostDistributionSpending.jobno_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'jobno_desc\' in table \'vItemCostDistributionSpending\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.jobno_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subjobno_desc {
                get {
                    try {
                        return ((string)(this[this.tablevItemCostDistributionSpending.subjobno_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'subjobno_desc\' in table \'vItemCostDistributionSpending\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablevItemCostDistributionSpending.subjobno_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Po_OrderNO {
                get {
                    return ((decimal)(this[this.tablevItemCostDistributionSpending.Po_OrderNOColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.Po_OrderNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime po_Date {
                get {
                    return ((System.DateTime)(this[this.tablevItemCostDistributionSpending.po_DateColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.po_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    return ((string)(this[this.tablevItemCostDistributionSpending.VendorNameColumn]));
                }
                set {
                    this[this.tablevItemCostDistributionSpending.VendorNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETVALUENull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.NETVALUEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETVALUENull() {
                this[this.tablevItemCostDistributionSpending.NETVALUEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistributionValueNull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.DistributionValueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistributionValueNull() {
                this[this.tablevItemCostDistributionSpending.DistributionValueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistPercentageNull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.DistPercentageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistPercentageNull() {
                this[this.tablevItemCostDistributionSpending.DistPercentageColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjobnoNull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.jobnoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjobnoNull() {
                this[this.tablevItemCostDistributionSpending.jobnoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubjobnoNull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.subjobnoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubjobnoNull() {
                this[this.tablevItemCostDistributionSpending.subjobnoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjobno_descNull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.jobno_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjobno_descNull() {
                this[this.tablevItemCostDistributionSpending.jobno_descColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issubjobno_descNull() {
                return this.IsNull(this.tablevItemCostDistributionSpending.subjobno_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsubjobno_descNull() {
                this[this.tablevItemCostDistributionSpending.subjobno_descColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeliveryPointsRowChangeEvent : System.EventArgs {
            
            private DeliveryPointsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsRowChangeEvent(DeliveryPointsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryPointsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblCurrencyRowChangeEvent : System.EventArgs {
            
            private tblCurrencyRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyRowChangeEvent(tblCurrencyRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblCurrencyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyRowChangeEvent : System.EventArgs {
            
            private CompanyRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRowChangeEvent(CompanyRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DetailswithOrderNORowChangeEvent : System.EventArgs {
            
            private DetailswithOrderNORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNORowChangeEvent(DetailswithOrderNORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailswithOrderNORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vInvoiceVendorValueRowChangeEvent : System.EventArgs {
            
            private vInvoiceVendorValueRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vInvoiceVendorValueRowChangeEvent(vInvoiceVendorValueRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vInvoiceVendorValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VendorRowChangeEvent : System.EventArgs {
            
            private VendorRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRowChangeEvent(VendorRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderNumbersRowChangeEvent : System.EventArgs {
            
            private OrderNumbersRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersRowChangeEvent(OrderNumbersRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderNumbersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblUOMRowChangeEvent : System.EventArgs {
            
            private tblUOMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMRowChangeEvent(tblUOMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblChargetypeRowChangeEvent : System.EventArgs {
            
            private tblChargetypeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeRowChangeEvent(tblChargetypeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblChargetypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblOrderTypeRowChangeEvent : System.EventArgs {
            
            private tblOrderTypeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeRowChangeEvent(tblOrderTypeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblOrderTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblJobChargeRowChangeEvent : System.EventArgs {
            
            private tblJobChargeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblJobChargeRowChangeEvent(tblJobChargeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblJobChargeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblBuyerRowChangeEvent : System.EventArgs {
            
            private tblBuyerRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerRowChangeEvent(tblBuyerRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblBuyerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PO_HeaderRowChangeEvent : System.EventArgs {
            
            private PO_HeaderRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderRowChangeEvent(PO_HeaderRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_HeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblusersRowChangeEvent : System.EventArgs {
            
            private tblusersRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersRowChangeEvent(tblusersRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblusersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblMSRStatusRowChangeEvent : System.EventArgs {
            
            private tblMSRStatusRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusRowChangeEvent(tblMSRStatusRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblMSRReceiptsRowChangeEvent : System.EventArgs {
            
            private tblMSRReceiptsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsRowChangeEvent(tblMSRReceiptsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMSRReceiptsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MSRStatusDescRowChangeEvent : System.EventArgs {
            
            private MSRStatusDescRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MSRStatusDescRowChangeEvent(MSRStatusDescRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MSRStatusDescRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vPOdetailsCalculationRowChangeEvent : System.EventArgs {
            
            private vPOdetailsCalculationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationRowChangeEvent(vPOdetailsCalculationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOdetailsCalculationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vPODetSummaryRowChangeEvent : System.EventArgs {
            
            private vPODetSummaryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryRowChangeEvent(vPODetSummaryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPODetSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblTransmittalLogRowChangeEvent : System.EventArgs {
            
            private tblTransmittalLogRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogRowChangeEvent(tblTransmittalLogRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransmittalLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblInvoicesRowChangeEvent : System.EventArgs {
            
            private tblInvoicesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesRowChangeEvent(tblInvoicesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInvoicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vMSR_POIssuedRowChangeEvent : System.EventArgs {
            
            private vMSR_POIssuedRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedRowChangeEvent(vMSR_POIssuedRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vMSR_POIssuedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vPOSummaryRowChangeEvent : System.EventArgs {
            
            private vPOSummaryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOSummaryRowChangeEvent(vPOSummaryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vPOSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblExpenseCodeRowChangeEvent : System.EventArgs {
            
            private tblExpenseCodeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseCodeRowChangeEvent(tblExpenseCodeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblItemCostDistributionRowChangeEvent : System.EventArgs {
            
            private tblItemCostDistributionRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionRowChangeEvent(tblItemCostDistributionRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblItemCostDistributionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PO_detailsRowChangeEvent : System.EventArgs {
            
            private PO_detailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsRowChangeEvent(PO_detailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PO_detailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblAssetGroupRowChangeEvent : System.EventArgs {
            
            private tblAssetGroupRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupRowChangeEvent(tblAssetGroupRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAssetGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vEARFRowChangeEvent : System.EventArgs {
            
            private vEARFRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vEARFRowChangeEvent(vEARFRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vEARFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblExpenseAssetRowChangeEvent : System.EventArgs {
            
            private tblExpenseAssetRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseAssetRowChangeEvent(tblExpenseAssetRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblExpenseAssetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblUserGroupsRowChangeEvent : System.EventArgs {
            
            private tblUserGroupsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsRowChangeEvent(tblUserGroupsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vItemCostDistributionSpendingRowChangeEvent : System.EventArgs {
            
            private vItemCostDistributionSpendingRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vItemCostDistributionSpendingRowChangeEvent(vItemCostDistributionSpendingRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vItemCostDistributionSpendingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace POCS.Ds.POCSTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DeliveryPointsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DeliveryPointsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DeliveryPoints";
            tableMapping.ColumnMappings.Add("DeliveryPointID", "DeliveryPointID");
            tableMapping.ColumnMappings.Add("DeliveryPointName", "DeliveryPointName");
            tableMapping.ColumnMappings.Add("DeliveryPointAddress", "DeliveryPointAddress");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DeliveryPoints] WHERE (([DeliveryPointID] = @Original_DeliveryPointI" +
                "D) AND ([DeliveryPointName] = @Original_DeliveryPointName) AND ([DeliveryPointAd" +
                "dress] = @Original_DeliveryPointAddress))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "DeliveryPointID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAddress", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [DeliveryPoints] ([DeliveryPointName], [DeliveryPointAddress]) VALUES" +
                " (@DeliveryPointName, @DeliveryPointAddress);\r\nSELECT DeliveryPointID, DeliveryP" +
                "ointName, DeliveryPointAddress FROM DeliveryPoints WHERE (DeliveryPointID = SCOP" +
                "E_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAddress", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [DeliveryPoints] SET [DeliveryPointName] = @DeliveryPointName, [DeliveryPointAddress] = @DeliveryPointAddress WHERE (([DeliveryPointID] = @Original_DeliveryPointID) AND ([DeliveryPointName] = @Original_DeliveryPointName) AND ([DeliveryPointAddress] = @Original_DeliveryPointAddress));
SELECT DeliveryPointID, DeliveryPointName, DeliveryPointAddress FROM DeliveryPoints WHERE (DeliveryPointID = @DeliveryPointID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAddress", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "DeliveryPointID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAddress", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "DeliveryPointID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     DeliveryPoints.*\r\nFROM         DeliveryPoints";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.DeliveryPointsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.DeliveryPointsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.DeliveryPointsDataTable dataTable = new POCS.DeliveryPointsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.DeliveryPointsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "DeliveryPoints");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DeliveryPointID, string Original_DeliveryPointName, string Original_DeliveryPointAddress) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DeliveryPointID));
            if ((Original_DeliveryPointName == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPointName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DeliveryPointName));
            }
            if ((Original_DeliveryPointAddress == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPointAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DeliveryPointAddress));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DeliveryPointName, string DeliveryPointAddress) {
            if ((DeliveryPointName == null)) {
                throw new System.ArgumentNullException("DeliveryPointName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DeliveryPointName));
            }
            if ((DeliveryPointAddress == null)) {
                throw new System.ArgumentNullException("DeliveryPointAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DeliveryPointAddress));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DeliveryPointName, string DeliveryPointAddress, decimal Original_DeliveryPointID, string Original_DeliveryPointName, string Original_DeliveryPointAddress, decimal DeliveryPointID) {
            if ((DeliveryPointName == null)) {
                throw new System.ArgumentNullException("DeliveryPointName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DeliveryPointName));
            }
            if ((DeliveryPointAddress == null)) {
                throw new System.ArgumentNullException("DeliveryPointAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DeliveryPointAddress));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_DeliveryPointID));
            if ((Original_DeliveryPointName == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPointName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_DeliveryPointName));
            }
            if ((Original_DeliveryPointAddress == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPointAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_DeliveryPointAddress));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(DeliveryPointID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblCurrencyTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblCurrencyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblCurrency";
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblCurrency] WHERE (([CurrencyID] = @Original_CurrencyID) AND ([Curr" +
                "ency] = @Original_Currency))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CurrencyID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "CurrencyID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblCurrency] ([Currency]) VALUES (@Currency);\r\nSELECT CurrencyID, Cu" +
                "rrency FROM tblCurrency WHERE (CurrencyID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblCurrency] SET [Currency] = @Currency WHERE (([CurrencyID] = @Original_" +
                "CurrencyID) AND ([Currency] = @Original_Currency));\r\nSELECT CurrencyID, Currency" +
                " FROM tblCurrency WHERE (CurrencyID = @CurrencyID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CurrencyID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "CurrencyID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CurrencyID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "CurrencyID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblCurrency.*\r\nFROM         tblCurrency";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblCurrencyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblCurrencyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblCurrencyDataTable dataTable = new POCS.tblCurrencyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblCurrencyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblCurrency");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CurrencyID, string Original_Currency) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CurrencyID));
            if ((Original_Currency == null)) {
                throw new System.ArgumentNullException("Original_Currency");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Currency));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Currency) {
            if ((Currency == null)) {
                throw new System.ArgumentNullException("Currency");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Currency));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Currency, decimal Original_CurrencyID, string Original_Currency, decimal CurrencyID) {
            if ((Currency == null)) {
                throw new System.ArgumentNullException("Currency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Currency));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_CurrencyID));
            if ((Original_Currency == null)) {
                throw new System.ArgumentNullException("Original_Currency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Currency));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(CurrencyID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CompanyTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CompanyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Company";
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("regno", "regno");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("FlashMsg", "FlashMsg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Company] WHERE (([CompanyID] = @Original_CompanyID) AND ([CompanyName] = @Original_CompanyName) AND ([Address] = @Original_Address) AND ([regno] = @Original_regno) AND ([Phone] = @Original_Phone) AND ([fax] = @Original_fax) AND ([email] = @Original_email) AND ((@IsNull_FlashMsg = 1 AND [FlashMsg] IS NULL) OR ([FlashMsg] = @Original_FlashMsg)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CompanyID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "CompanyID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CompanyName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CompanyName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Address", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "regno", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Phone", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "fax", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "email", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FlashMsg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FlashMsg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FlashMsg", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FlashMsg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Company] ([CompanyName], [Address], [regno], [Phone], [fax], [email], [FlashMsg]) VALUES (@CompanyName, @Address, @regno, @Phone, @fax, @email, @FlashMsg);
SELECT CompanyID, CompanyName, Address, regno, Phone, fax, email, FlashMsg FROM Company WHERE (CompanyID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CompanyName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CompanyName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "regno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "fax", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FlashMsg", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FlashMsg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Company] SET [CompanyName] = @CompanyName, [Address] = @Address, [regno] = @regno, [Phone] = @Phone, [fax] = @fax, [email] = @email, [FlashMsg] = @FlashMsg WHERE (([CompanyID] = @Original_CompanyID) AND ([CompanyName] = @Original_CompanyName) AND ([Address] = @Original_Address) AND ([regno] = @Original_regno) AND ([Phone] = @Original_Phone) AND ([fax] = @Original_fax) AND ([email] = @Original_email) AND ((@IsNull_FlashMsg = 1 AND [FlashMsg] IS NULL) OR ([FlashMsg] = @Original_FlashMsg)));
SELECT CompanyID, CompanyName, Address, regno, Phone, fax, email, FlashMsg FROM Company WHERE (CompanyID = @CompanyID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CompanyName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CompanyName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "regno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "fax", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FlashMsg", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FlashMsg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CompanyID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "CompanyID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CompanyName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CompanyName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Address", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "regno", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Phone", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "fax", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "email", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FlashMsg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FlashMsg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FlashMsg", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FlashMsg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CompanyID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "CompanyID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Company.*\r\nFROM         Company";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     CompanyName\r\nFROM         Company";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.CompanyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.CompanyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.CompanyDataTable dataTable = new POCS.CompanyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCompanyName(POCS.CompanyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.CompanyDataTable GetDataByCompanyName() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            POCS.CompanyDataTable dataTable = new POCS.CompanyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.CompanyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "Company");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CompanyID, string Original_CompanyName, string Original_Address, string Original_regno, string Original_Phone, string Original_fax, string Original_email, string Original_FlashMsg) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CompanyID));
            if ((Original_CompanyName == null)) {
                throw new System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CompanyName));
            }
            if ((Original_Address == null)) {
                throw new System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Address));
            }
            if ((Original_regno == null)) {
                throw new System.ArgumentNullException("Original_regno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_regno));
            }
            if ((Original_Phone == null)) {
                throw new System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Phone));
            }
            if ((Original_fax == null)) {
                throw new System.ArgumentNullException("Original_fax");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_fax));
            }
            if ((Original_email == null)) {
                throw new System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_email));
            }
            if ((Original_FlashMsg == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_FlashMsg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CompanyName, string Address, string regno, string Phone, string fax, string email, string FlashMsg) {
            if ((CompanyName == null)) {
                throw new System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CompanyName));
            }
            if ((Address == null)) {
                throw new System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Address));
            }
            if ((regno == null)) {
                throw new System.ArgumentNullException("regno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(regno));
            }
            if ((Phone == null)) {
                throw new System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Phone));
            }
            if ((fax == null)) {
                throw new System.ArgumentNullException("fax");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(fax));
            }
            if ((email == null)) {
                throw new System.ArgumentNullException("email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(email));
            }
            if ((FlashMsg == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FlashMsg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CompanyName, 
                    string Address, 
                    string regno, 
                    string Phone, 
                    string fax, 
                    string email, 
                    string FlashMsg, 
                    decimal Original_CompanyID, 
                    string Original_CompanyName, 
                    string Original_Address, 
                    string Original_regno, 
                    string Original_Phone, 
                    string Original_fax, 
                    string Original_email, 
                    string Original_FlashMsg, 
                    decimal CompanyID) {
            if ((CompanyName == null)) {
                throw new System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CompanyName));
            }
            if ((Address == null)) {
                throw new System.ArgumentNullException("Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Address));
            }
            if ((regno == null)) {
                throw new System.ArgumentNullException("regno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(regno));
            }
            if ((Phone == null)) {
                throw new System.ArgumentNullException("Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Phone));
            }
            if ((fax == null)) {
                throw new System.ArgumentNullException("fax");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(fax));
            }
            if ((email == null)) {
                throw new System.ArgumentNullException("email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(email));
            }
            if ((FlashMsg == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FlashMsg));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_CompanyID));
            if ((Original_CompanyName == null)) {
                throw new System.ArgumentNullException("Original_CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CompanyName));
            }
            if ((Original_Address == null)) {
                throw new System.ArgumentNullException("Original_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Address));
            }
            if ((Original_regno == null)) {
                throw new System.ArgumentNullException("Original_regno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_regno));
            }
            if ((Original_Phone == null)) {
                throw new System.ArgumentNullException("Original_Phone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Phone));
            }
            if ((Original_fax == null)) {
                throw new System.ArgumentNullException("Original_fax");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_fax));
            }
            if ((Original_email == null)) {
                throw new System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_email));
            }
            if ((Original_FlashMsg == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_FlashMsg));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(CompanyID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DetailswithOrderNOTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetailswithOrderNOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DetailswithOrderNO";
            tableMapping.ColumnMappings.Add("po_orderNo", "po_orderNo");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("PO_DetailID", "PO_DetailID");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Withholding", "Withholding");
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     DetailswithOrderNO.*\r\nFROM         DetailswithOrderNO";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     po_orderNo, type, PO_DetailID, POID, ItemDescription, Quantity, UOM, A" +
                "ccountCode, UnitPrice, Withholding, MSRNo\r\nFROM         DetailswithOrderNO\r\nWHER" +
                "E     (type = @type) AND (po_orderNo = @PO_OrderNo)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_OrderNo", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "po_orderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.DetailswithOrderNODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.DetailswithOrderNODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.DetailswithOrderNODataTable dataTable = new POCS.DetailswithOrderNODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDetailswithPO_OderNo(POCS.DetailswithOrderNODataTable dataTable, string type, decimal PO_OrderNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((type == null)) {
                throw new System.ArgumentNullException("type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(type));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(PO_OrderNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.DetailswithOrderNODataTable GetDataByDetailswithPO_OderNo(string type, decimal PO_OrderNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((type == null)) {
                throw new System.ArgumentNullException("type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(type));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(PO_OrderNo));
            POCS.DetailswithOrderNODataTable dataTable = new POCS.DetailswithOrderNODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vInvoiceVendorValueTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vInvoiceVendorValueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vInvoiceVendorValue";
            tableMapping.ColumnMappings.Add("ExprConcat", "ExprConcat");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ExprConcat\r\nFROM         vInvoiceVendorValue";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vInvoiceVendorValueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vInvoiceVendorValueDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vInvoiceVendorValueDataTable dataTable = new POCS.vInvoiceVendorValueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VendorTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VendorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Vendor";
            tableMapping.ColumnMappings.Add("vendor_id", "vendor_id");
            tableMapping.ColumnMappings.Add("v_name", "v_name");
            tableMapping.ColumnMappings.Add("v_contactperson", "v_contactperson");
            tableMapping.ColumnMappings.Add("v_address", "v_address");
            tableMapping.ColumnMappings.Add("v_phone", "v_phone");
            tableMapping.ColumnMappings.Add("v_mobile", "v_mobile");
            tableMapping.ColumnMappings.Add("v_zip", "v_zip");
            tableMapping.ColumnMappings.Add("v_fax", "v_fax");
            tableMapping.ColumnMappings.Add("v_email", "v_email");
            tableMapping.ColumnMappings.Add("v_status", "v_status");
            tableMapping.ColumnMappings.Add("v_city", "v_city");
            tableMapping.ColumnMappings.Add("v_country", "v_country");
            tableMapping.ColumnMappings.Add("v_regno", "v_regno");
            tableMapping.ColumnMappings.Add("rEGdATE", "rEGdATE");
            tableMapping.ColumnMappings.Add("VendorCode", "VendorCode");
            tableMapping.ColumnMappings.Add("AVL", "AVL");
            tableMapping.ColumnMappings.Add("v_state", "v_state");
            tableMapping.ColumnMappings.Add("paymentTerms", "paymentTerms");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Vendor] WHERE (([vendor_id] = @Original_vendor_id) AND ((@IsNull_v_name = 1 AND [v_name] IS NULL) OR ([v_name] = @Original_v_name)) AND ((@IsNull_v_contactperson = 1 AND [v_contactperson] IS NULL) OR ([v_contactperson] = @Original_v_contactperson)) AND ((@IsNull_v_address = 1 AND [v_address] IS NULL) OR ([v_address] = @Original_v_address)) AND ((@IsNull_v_phone = 1 AND [v_phone] IS NULL) OR ([v_phone] = @Original_v_phone)) AND ((@IsNull_v_mobile = 1 AND [v_mobile] IS NULL) OR ([v_mobile] = @Original_v_mobile)) AND ((@IsNull_v_zip = 1 AND [v_zip] IS NULL) OR ([v_zip] = @Original_v_zip)) AND ((@IsNull_v_fax = 1 AND [v_fax] IS NULL) OR ([v_fax] = @Original_v_fax)) AND ((@IsNull_v_email = 1 AND [v_email] IS NULL) OR ([v_email] = @Original_v_email)) AND ((@IsNull_v_status = 1 AND [v_status] IS NULL) OR ([v_status] = @Original_v_status)) AND ((@IsNull_v_city = 1 AND [v_city] IS NULL) OR ([v_city] = @Original_v_city)) AND ([v_state] = @Original_v_state) AND ((@IsNull_v_country = 1 AND [v_country] IS NULL) OR ([v_country] = @Original_v_country)) AND ((@IsNull_v_regno = 1 AND [v_regno] IS NULL) OR ([v_regno] = @Original_v_regno)) AND ((@IsNull_rEGdATE = 1 AND [rEGdATE] IS NULL) OR ([rEGdATE] = @Original_rEGdATE)) AND ((@IsNull_VendorCode = 1 AND [VendorCode] IS NULL) OR ([VendorCode] = @Original_VendorCode)) AND ([AVL] = @Original_AVL) AND ((@IsNull_paymentTerms = 1 AND [paymentTerms] IS NULL) OR ([paymentTerms] = @Original_paymentTerms)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_vendor_id", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "vendor_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_contactperson", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_contactperson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_address", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_phone", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_mobile", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_zip", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_zip", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_fax", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_email", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_city", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_city", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_state", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_state", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_country", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_country", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_regno", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_rEGdATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rEGdATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_VendorCode", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AVL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AVL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_paymentTerms", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_paymentTerms", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Vendor] ([v_name], [v_contactperson], [v_address], [v_phone], [v_mobile], [v_zip], [v_fax], [v_email], [v_status], [v_city], [v_state], [v_country], [v_regno], [rEGdATE], [VendorCode], [AVL], [paymentTerms]) VALUES (@v_name, @v_contactperson, @v_address, @v_phone, @v_mobile, @v_zip, @v_fax, @v_email, @v_status, @v_city, @v_state, @v_country, @v_regno, @rEGdATE, @VendorCode, @AVL, @paymentTerms);
SELECT vendor_id, v_name, v_contactperson, v_address, v_phone, v_mobile, v_zip, v_fax, v_email, v_status, v_city, v_state, v_country, v_regno, rEGdATE, VendorCode, AVL, paymentTerms FROM Vendor WHERE (vendor_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_contactperson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_zip", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_city", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_state", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_state", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_country", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rEGdATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AVL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AVL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@paymentTerms", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Vendor] SET [v_name] = @v_name, [v_contactperson] = @v_contactperson, [v_" +
                "address] = @v_address, [v_phone] = @v_phone, [v_mobile] = @v_mobile, [v_zip] = @" +
                "v_zip, [v_fax] = @v_fax, [v_email] = @v_email, [v_status] = @v_status, [v_city] " +
                "= @v_city, [v_state] = @v_state, [v_country] = @v_country, [v_regno] = @v_regno," +
                " [rEGdATE] = @rEGdATE, [VendorCode] = @VendorCode, [AVL] = @AVL, [paymentTerms] " +
                "= @paymentTerms WHERE (([vendor_id] = @Original_vendor_id) AND ((@IsNull_v_name " +
                "= 1 AND [v_name] IS NULL) OR ([v_name] = @Original_v_name)) AND ((@IsNull_v_cont" +
                "actperson = 1 AND [v_contactperson] IS NULL) OR ([v_contactperson] = @Original_v" +
                "_contactperson)) AND ((@IsNull_v_address = 1 AND [v_address] IS NULL) OR ([v_add" +
                "ress] = @Original_v_address)) AND ((@IsNull_v_phone = 1 AND [v_phone] IS NULL) O" +
                "R ([v_phone] = @Original_v_phone)) AND ((@IsNull_v_mobile = 1 AND [v_mobile] IS " +
                "NULL) OR ([v_mobile] = @Original_v_mobile)) AND ((@IsNull_v_zip = 1 AND [v_zip] " +
                "IS NULL) OR ([v_zip] = @Original_v_zip)) AND ((@IsNull_v_fax = 1 AND [v_fax] IS " +
                "NULL) OR ([v_fax] = @Original_v_fax)) AND ((@IsNull_v_email = 1 AND [v_email] IS" +
                " NULL) OR ([v_email] = @Original_v_email)) AND ((@IsNull_v_status = 1 AND [v_sta" +
                "tus] IS NULL) OR ([v_status] = @Original_v_status)) AND ((@IsNull_v_city = 1 AND" +
                " [v_city] IS NULL) OR ([v_city] = @Original_v_city)) AND ([v_state] = @Original_" +
                "v_state) AND ((@IsNull_v_country = 1 AND [v_country] IS NULL) OR ([v_country] = " +
                "@Original_v_country)) AND ((@IsNull_v_regno = 1 AND [v_regno] IS NULL) OR ([v_re" +
                "gno] = @Original_v_regno)) AND ((@IsNull_rEGdATE = 1 AND [rEGdATE] IS NULL) OR (" +
                "[rEGdATE] = @Original_rEGdATE)) AND ((@IsNull_VendorCode = 1 AND [VendorCode] IS" +
                " NULL) OR ([VendorCode] = @Original_VendorCode)) AND ([AVL] = @Original_AVL) AND" +
                " ((@IsNull_paymentTerms = 1 AND [paymentTerms] IS NULL) OR ([paymentTerms] = @Or" +
                "iginal_paymentTerms)));\r\nSELECT vendor_id, v_name, v_contactperson, v_address, v" +
                "_phone, v_mobile, v_zip, v_fax, v_email, v_status, v_city, v_state, v_country, v" +
                "_regno, rEGdATE, VendorCode, AVL, paymentTerms FROM Vendor WHERE (vendor_id = @v" +
                "endor_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_contactperson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_zip", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_city", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_state", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_state", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_country", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rEGdATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AVL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AVL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@paymentTerms", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_vendor_id", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "vendor_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_contactperson", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_contactperson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_address", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_phone", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_mobile", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_zip", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_zip", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_fax", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_fax", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_email", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_city", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_city", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_state", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_state", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_country", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_country", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_v_regno", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_v_regno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_rEGdATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rEGdATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_VendorCode", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AVL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AVL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_paymentTerms", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_paymentTerms", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@vendor_id", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "vendor_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vendor_id, v_name, v_contactperson, v_address, v_phone, v_mobile, v_zi" +
                "p, v_fax, v_email, v_status, v_city, v_state, v_country, v_regno, rEGdATE, \r\n   " +
                "                   VendorCode, AVL, paymentTerms\r\nFROM         Vendor";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     v_address + v_zip + v_city + v_state + v_country + v_phone + v_mobile " +
                "+ v_fax + v_email + v_contactperson AS Address\r\nFROM         Vendor\r\nWHERE     (" +
                "v_name = @v_name)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_name", System.Data.SqlDbType.VarChar, 75, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT AVL, VendorCode, paymentTerms, rEGdATE, v_address, v_city, v_contactperson" +
                ", v_country, v_email, v_fax, v_mobile, v_name, v_phone, v_regno, v_state, v_stat" +
                "us, v_zip, vendor_id FROM Vendor WHERE (vendor_id = @vendor_id)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@vendor_id", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "vendor_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     v_address+ v_zip+ v_city+ v_state + v_country+ v_phone+ v_mobile+ v_fa" +
                "x+ v_email+ v_contactperson as Address\r\nFROM         Vendor\r\nWHERE     (v_name =" +
                " @v_name)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_name", System.Data.SqlDbType.VarChar, 75, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"UPDATE [Vendor] SET [v_name] = @v_name, [v_contactperson] = @v_contactperson, [v_address] = @v_address, [v_phone] = @v_phone, [v_mobile] = @v_mobile, [v_zip] = @v_zip, [v_fax] = @v_fax, [v_email] = @v_email, [v_status] = @v_status, [v_city] = @v_city, [v_state] = @v_state, [v_country] = @v_country, [v_regno] = @v_regno, [rEGdATE] = @rEGdATE, [VendorCode] = @VendorCode, [AVL] = @AVL, [paymentTerms] = @paymentTerms WHERE (vendor_id = @vendor_id)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_name", System.Data.SqlDbType.VarChar, 75, System.Data.ParameterDirection.Input, 0, 0, "v_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_contactperson", System.Data.SqlDbType.VarChar, 75, System.Data.ParameterDirection.Input, 0, 0, "v_contactperson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_address", System.Data.SqlDbType.VarChar, 255, System.Data.ParameterDirection.Input, 0, 0, "v_address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_phone", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_mobile", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_mobile", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_zip", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_zip", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_fax", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_fax", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_email", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_status", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_city", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_city", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_state", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_state", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_country", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_country", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@v_regno", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "v_regno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@rEGdATE", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "rEGdATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorCode", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VendorCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@AVL", System.Data.SqlDbType.Bit, 1, System.Data.ParameterDirection.Input, 0, 0, "AVL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@paymentTerms", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "paymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@vendor_id", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "vendor_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.VendorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.VendorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.VendorDataTable dataTable = new POCS.VendorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAddressByVName(POCS.VendorDataTable dataTable, string v_name) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((v_name == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(v_name));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.VendorDataTable GetDataAddressByVName(string v_name) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((v_name == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(v_name));
            }
            POCS.VendorDataTable dataTable = new POCS.VendorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVendorID(POCS.VendorDataTable dataTable, decimal vendor_id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(vendor_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.VendorDataTable GetDataByVendorID(decimal vendor_id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(vendor_id));
            POCS.VendorDataTable dataTable = new POCS.VendorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByVName(POCS.VendorDataTable dataTable, string v_name) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((v_name == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(v_name));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.VendorDataTable GetDataByVName(string v_name) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((v_name == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(v_name));
            }
            POCS.VendorDataTable dataTable = new POCS.VendorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.VendorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "Vendor");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_vendor_id, 
                    string Original_v_name, 
                    string Original_v_contactperson, 
                    string Original_v_address, 
                    string Original_v_phone, 
                    string Original_v_mobile, 
                    string Original_v_zip, 
                    string Original_v_fax, 
                    string Original_v_email, 
                    string Original_v_status, 
                    string Original_v_city, 
                    string Original_v_state, 
                    string Original_v_country, 
                    string Original_v_regno, 
                    System.Nullable<System.DateTime> Original_rEGdATE, 
                    string Original_VendorCode, 
                    bool Original_AVL, 
                    System.Nullable<int> Original_paymentTerms) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_vendor_id));
            if ((Original_v_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_v_name));
            }
            if ((Original_v_contactperson == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_v_contactperson));
            }
            if ((Original_v_address == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_v_address));
            }
            if ((Original_v_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_v_phone));
            }
            if ((Original_v_mobile == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_v_mobile));
            }
            if ((Original_v_zip == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_v_zip));
            }
            if ((Original_v_fax == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_v_fax));
            }
            if ((Original_v_email == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_v_email));
            }
            if ((Original_v_status == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_v_status));
            }
            if ((Original_v_city == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_v_city));
            }
            if ((Original_v_state == null)) {
                throw new System.ArgumentNullException("Original_v_state");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_v_state));
            }
            if ((Original_v_country == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_v_country));
            }
            if ((Original_v_regno == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_v_regno));
            }
            if ((Original_rEGdATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_rEGdATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Original_VendorCode == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_VendorCode));
            }
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_AVL));
            if ((Original_paymentTerms.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_paymentTerms.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string v_name, 
                    string v_contactperson, 
                    string v_address, 
                    string v_phone, 
                    string v_mobile, 
                    string v_zip, 
                    string v_fax, 
                    string v_email, 
                    string v_status, 
                    string v_city, 
                    string v_state, 
                    string v_country, 
                    string v_regno, 
                    System.Nullable<System.DateTime> rEGdATE, 
                    string VendorCode, 
                    bool AVL, 
                    System.Nullable<int> paymentTerms) {
            if ((v_name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(v_name));
            }
            if ((v_contactperson == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(v_contactperson));
            }
            if ((v_address == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(v_address));
            }
            if ((v_phone == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(v_phone));
            }
            if ((v_mobile == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(v_mobile));
            }
            if ((v_zip == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(v_zip));
            }
            if ((v_fax == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(v_fax));
            }
            if ((v_email == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(v_email));
            }
            if ((v_status == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(v_status));
            }
            if ((v_city == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(v_city));
            }
            if ((v_state == null)) {
                throw new System.ArgumentNullException("v_state");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(v_state));
            }
            if ((v_country == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(v_country));
            }
            if ((v_regno == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(v_regno));
            }
            if ((rEGdATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(rEGdATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((VendorCode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(VendorCode));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(AVL));
            if ((paymentTerms.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(paymentTerms.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string v_name, 
                    string v_contactperson, 
                    string v_address, 
                    string v_phone, 
                    string v_mobile, 
                    string v_zip, 
                    string v_fax, 
                    string v_email, 
                    string v_status, 
                    string v_city, 
                    string v_state, 
                    string v_country, 
                    string v_regno, 
                    System.Nullable<System.DateTime> rEGdATE, 
                    string VendorCode, 
                    bool AVL, 
                    System.Nullable<int> paymentTerms, 
                    decimal Original_vendor_id, 
                    string Original_v_name, 
                    string Original_v_contactperson, 
                    string Original_v_address, 
                    string Original_v_phone, 
                    string Original_v_mobile, 
                    string Original_v_zip, 
                    string Original_v_fax, 
                    string Original_v_email, 
                    string Original_v_status, 
                    string Original_v_city, 
                    string Original_v_state, 
                    string Original_v_country, 
                    string Original_v_regno, 
                    System.Nullable<System.DateTime> Original_rEGdATE, 
                    string Original_VendorCode, 
                    bool Original_AVL, 
                    System.Nullable<int> Original_paymentTerms, 
                    decimal vendor_id) {
            if ((v_name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(v_name));
            }
            if ((v_contactperson == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(v_contactperson));
            }
            if ((v_address == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(v_address));
            }
            if ((v_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(v_phone));
            }
            if ((v_mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(v_mobile));
            }
            if ((v_zip == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(v_zip));
            }
            if ((v_fax == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(v_fax));
            }
            if ((v_email == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(v_email));
            }
            if ((v_status == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(v_status));
            }
            if ((v_city == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(v_city));
            }
            if ((v_state == null)) {
                throw new System.ArgumentNullException("v_state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(v_state));
            }
            if ((v_country == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(v_country));
            }
            if ((v_regno == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(v_regno));
            }
            if ((rEGdATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(rEGdATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((VendorCode == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(VendorCode));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(AVL));
            if ((paymentTerms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(paymentTerms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_vendor_id));
            if ((Original_v_name == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_v_name));
            }
            if ((Original_v_contactperson == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_v_contactperson));
            }
            if ((Original_v_address == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_v_address));
            }
            if ((Original_v_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_v_phone));
            }
            if ((Original_v_mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_v_mobile));
            }
            if ((Original_v_zip == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_v_zip));
            }
            if ((Original_v_fax == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_v_fax));
            }
            if ((Original_v_email == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_v_email));
            }
            if ((Original_v_status == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_v_status));
            }
            if ((Original_v_city == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_v_city));
            }
            if ((Original_v_state == null)) {
                throw new System.ArgumentNullException("Original_v_state");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_v_state));
            }
            if ((Original_v_country == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_v_country));
            }
            if ((Original_v_regno == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_v_regno));
            }
            if ((Original_rEGdATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_rEGdATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_VendorCode == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_VendorCode));
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_AVL));
            if ((Original_paymentTerms.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_paymentTerms.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(vendor_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateVendorDetails(
                    string v_name, 
                    string v_contactperson, 
                    string v_address, 
                    string v_phone, 
                    string v_mobile, 
                    string v_zip, 
                    string v_fax, 
                    string v_email, 
                    string v_status, 
                    string v_city, 
                    string v_state, 
                    string v_country, 
                    string v_regno, 
                    System.Nullable<System.DateTime> rEGdATE, 
                    string VendorCode, 
                    bool AVL, 
                    System.Nullable<int> paymentTerms, 
                    decimal vendor_id) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((v_name == null)) {
                command.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(v_name));
            }
            if ((v_contactperson == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(v_contactperson));
            }
            if ((v_address == null)) {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(v_address));
            }
            if ((v_phone == null)) {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(v_phone));
            }
            if ((v_mobile == null)) {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(v_mobile));
            }
            if ((v_zip == null)) {
                command.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(v_zip));
            }
            if ((v_fax == null)) {
                command.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(v_fax));
            }
            if ((v_email == null)) {
                command.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(v_email));
            }
            if ((v_status == null)) {
                command.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(v_status));
            }
            if ((v_city == null)) {
                command.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(v_city));
            }
            if ((v_state == null)) {
                throw new System.ArgumentNullException("v_state");
            }
            else {
                command.Parameters[10].Value = ((string)(v_state));
            }
            if ((v_country == null)) {
                command.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(v_country));
            }
            if ((v_regno == null)) {
                command.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(v_regno));
            }
            if ((rEGdATE.HasValue == true)) {
                command.Parameters[13].Value = ((System.DateTime)(rEGdATE.Value));
            }
            else {
                command.Parameters[13].Value = System.DBNull.Value;
            }
            if ((VendorCode == null)) {
                command.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(VendorCode));
            }
            command.Parameters[15].Value = ((bool)(AVL));
            if ((paymentTerms.HasValue == true)) {
                command.Parameters[16].Value = ((int)(paymentTerms.Value));
            }
            else {
                command.Parameters[16].Value = System.DBNull.Value;
            }
            command.Parameters[17].Value = ((decimal)(vendor_id));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrderNumbersTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderNumbersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OrderNumbers";
            tableMapping.ColumnMappings.Add("PO_OrderNo", "PO_OrderNo");
            tableMapping.ColumnMappings.Add("POID", "POID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [PO_Header] WHERE (([PO_OrderNo] = @Original_PO_OrderNo) AND ([POID] " +
                "= @Original_POID))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [PO_Header] SET [PO_OrderNo] = @PO_OrderNo WHERE (([PO_OrderNo] = @Origina" +
                "l_PO_OrderNo) AND ([POID] = @Original_POID));\r\nSELECT PO_OrderNo, POID FROM PO_H" +
                "eader WHERE (POID = @POID) ORDER BY PO_OrderNo";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PO_OrderNo, POID\r\nFROM         PO_Header\r\nWHERE     (Type = \'PO\')\r\nORD" +
                "ER BY PO_OrderNo";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     PO_OrderNo, POID\r\nFROM         PO_Header\r\nWHERE     (Type = @Type)\r\nOR" +
                "DER BY PO_OrderNo Asc";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.OrderNumbersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.OrderNumbersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.OrderNumbersDataTable dataTable = new POCS.OrderNumbersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByType(POCS.OrderNumbersDataTable dataTable, string Type) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Type));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.OrderNumbersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "OrderNumbers");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PO_OrderNo, decimal Original_POID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PO_OrderNo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_POID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PO_OrderNo, decimal Original_PO_OrderNo, decimal Original_POID, decimal POID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PO_OrderNo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_PO_OrderNo));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_POID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(POID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblUOMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblUOMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblUOM";
            tableMapping.ColumnMappings.Add("uom_id", "uom_id");
            tableMapping.ColumnMappings.Add("uom", "uom");
            tableMapping.ColumnMappings.Add("uom_desc", "uom_desc");
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            tableMapping.ColumnMappings.Add("u_date", "u_date");
            tableMapping.ColumnMappings.Add("t_user", "t_user");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblUOM] WHERE (([uom_id] = @Original_uom_id) AND ([uom] = @Original_uom) AND ((@IsNull_uom_desc = 1 AND [uom_desc] IS NULL) OR ([uom_desc] = @Original_uom_desc)) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_u_date = 1 AND [u_date] IS NULL) OR ([u_date] = @Original_u_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uom_id", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "uom_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uom", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uom_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uom_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uom_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_u_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblUOM] ([uom], [uom_desc], [t_date], [u_date], [t_user]) VALUES (@u" +
                "om, @uom_desc, @t_date, @u_date, @t_user);\r\nSELECT uom_id, uom, uom_desc, t_date" +
                ", u_date, t_user FROM tblUOM WHERE (uom = @uom)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uom", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uom_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblUOM] SET [uom] = @uom, [uom_desc] = @uom_desc, [t_date] = @t_date, [u_date] = @u_date, [t_user] = @t_user WHERE (([uom_id] = @Original_uom_id) AND ([uom] = @Original_uom) AND ((@IsNull_uom_desc = 1 AND [uom_desc] IS NULL) OR ([uom_desc] = @Original_uom_desc)) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_u_date = 1 AND [u_date] IS NULL) OR ([u_date] = @Original_u_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)));
SELECT uom_id, uom, uom_desc, t_date, u_date, t_user FROM tblUOM WHERE (uom = @uom)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uom", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uom_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uom_id", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "uom_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uom", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uom_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uom_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uom_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uom_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_u_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblUOM.*\r\nFROM         tblUOM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblUOMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblUOMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblUOMDataTable dataTable = new POCS.tblUOMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblUOMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblUOM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_uom_id, string Original_uom, string Original_uom_desc, System.Nullable<System.DateTime> Original_t_date, System.Nullable<System.DateTime> Original_u_date, string Original_t_user) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_uom_id));
            if ((Original_uom == null)) {
                throw new System.ArgumentNullException("Original_uom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_uom));
            }
            if ((Original_uom_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_uom_desc));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_u_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_u_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uom, string uom_desc, System.Nullable<System.DateTime> t_date, System.Nullable<System.DateTime> u_date, string t_user) {
            if ((uom == null)) {
                throw new System.ArgumentNullException("uom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uom));
            }
            if ((uom_desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uom_desc));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((u_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(u_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uom, string uom_desc, System.Nullable<System.DateTime> t_date, System.Nullable<System.DateTime> u_date, string t_user, decimal Original_uom_id, string Original_uom, string Original_uom_desc, System.Nullable<System.DateTime> Original_t_date, System.Nullable<System.DateTime> Original_u_date, string Original_t_user) {
            if ((uom == null)) {
                throw new System.ArgumentNullException("uom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uom));
            }
            if ((uom_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uom_desc));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((u_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(u_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(t_user));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_uom_id));
            if ((Original_uom == null)) {
                throw new System.ArgumentNullException("Original_uom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_uom));
            }
            if ((Original_uom_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_uom_desc));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_u_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_u_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblChargetypeTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblChargetypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblChargetype";
            tableMapping.ColumnMappings.Add("ChID", "ChID");
            tableMapping.ColumnMappings.Add("ChargeType", "ChargeType");
            tableMapping.ColumnMappings.Add("ChargeTypeDesc", "ChargeTypeDesc");
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            tableMapping.ColumnMappings.Add("u_date", "u_date");
            tableMapping.ColumnMappings.Add("t_user", "t_user");
            tableMapping.ColumnMappings.Add("notes", "notes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblChargetype] WHERE (([ChID] = @Original_ChID) AND ([ChargeType] = @Original_ChargeType) AND ((@IsNull_ChargeTypeDesc = 1 AND [ChargeTypeDesc] IS NULL) OR ([ChargeTypeDesc] = @Original_ChargeTypeDesc)) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_u_date = 1 AND [u_date] IS NULL) OR ([u_date] = @Original_u_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)) AND ((@IsNull_notes = 1 AND [notes] IS NULL) OR ([notes] = @Original_notes)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ChID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChargeTypeDesc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeTypeDesc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeTypeDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeTypeDesc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_u_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_notes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "notes", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_notes", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "notes", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblChargetype] ([ChargeType], [ChargeTypeDesc], [t_date], [u_date], [t_user], [notes]) VALUES (@ChargeType, @ChargeTypeDesc, @t_date, @u_date, @t_user, @notes);
SELECT ChID, ChargeType, ChargeTypeDesc, t_date, u_date, t_user, notes FROM tblChargetype WHERE (ChID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeTypeDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeTypeDesc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@notes", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "notes", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblChargetype] SET [ChargeType] = @ChargeType, [ChargeTypeDesc] = @ChargeTypeDesc, [t_date] = @t_date, [u_date] = @u_date, [t_user] = @t_user, [notes] = @notes WHERE (([ChID] = @Original_ChID) AND ([ChargeType] = @Original_ChargeType) AND ((@IsNull_ChargeTypeDesc = 1 AND [ChargeTypeDesc] IS NULL) OR ([ChargeTypeDesc] = @Original_ChargeTypeDesc)) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_u_date = 1 AND [u_date] IS NULL) OR ([u_date] = @Original_u_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)) AND ((@IsNull_notes = 1 AND [notes] IS NULL) OR ([notes] = @Original_notes)));
SELECT ChID, ChargeType, ChargeTypeDesc, t_date, u_date, t_user, notes FROM tblChargetype WHERE (ChID = @ChID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeTypeDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeTypeDesc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@notes", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "notes", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ChID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ChargeTypeDesc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeTypeDesc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeTypeDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeTypeDesc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_u_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_notes", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "notes", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_notes", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "notes", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "ChID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblChargetype.*\r\nFROM         tblChargetype";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblChargetypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblChargetypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblChargetypeDataTable dataTable = new POCS.tblChargetypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblChargetypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblChargetype");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ChID, string Original_ChargeType, string Original_ChargeTypeDesc, System.Nullable<System.DateTime> Original_t_date, System.Nullable<System.DateTime> Original_u_date, string Original_t_user, string Original_notes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ChID));
            if ((Original_ChargeType == null)) {
                throw new System.ArgumentNullException("Original_ChargeType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ChargeType));
            }
            if ((Original_ChargeTypeDesc == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ChargeTypeDesc));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_u_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_u_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_t_user));
            }
            if ((Original_notes == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_notes));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ChargeType, string ChargeTypeDesc, System.Nullable<System.DateTime> t_date, System.Nullable<System.DateTime> u_date, string t_user, string notes) {
            if ((ChargeType == null)) {
                throw new System.ArgumentNullException("ChargeType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ChargeType));
            }
            if ((ChargeTypeDesc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ChargeTypeDesc));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((u_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(u_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(t_user));
            }
            if ((notes == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(notes));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ChargeType, string ChargeTypeDesc, System.Nullable<System.DateTime> t_date, System.Nullable<System.DateTime> u_date, string t_user, string notes, decimal Original_ChID, string Original_ChargeType, string Original_ChargeTypeDesc, System.Nullable<System.DateTime> Original_t_date, System.Nullable<System.DateTime> Original_u_date, string Original_t_user, string Original_notes, decimal ChID) {
            if ((ChargeType == null)) {
                throw new System.ArgumentNullException("ChargeType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ChargeType));
            }
            if ((ChargeTypeDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ChargeTypeDesc));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((u_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(u_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(t_user));
            }
            if ((notes == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(notes));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_ChID));
            if ((Original_ChargeType == null)) {
                throw new System.ArgumentNullException("Original_ChargeType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ChargeType));
            }
            if ((Original_ChargeTypeDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ChargeTypeDesc));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_u_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_u_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_t_user));
            }
            if ((Original_notes == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_notes));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(ChID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblOrderTypeTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblOrderTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblOrderType";
            tableMapping.ColumnMappings.Add("OrderType_id", "OrderType_id");
            tableMapping.ColumnMappings.Add("OrderType", "OrderType");
            tableMapping.ColumnMappings.Add("OrderTypedesc", "OrderTypedesc");
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            tableMapping.ColumnMappings.Add("u_date", "u_date");
            tableMapping.ColumnMappings.Add("t_user", "t_user");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblOrderType] WHERE (([OrderType_id] = @Original_OrderType_id) AND ([OrderType] = @Original_OrderType) AND ((@IsNull_OrderTypedesc = 1 AND [OrderTypedesc] IS NULL) OR ([OrderTypedesc] = @Original_OrderTypedesc)) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_u_date = 1 AND [u_date] IS NULL) OR ([u_date] = @Original_u_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OrderType_id", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "OrderType_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OrderType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OrderTypedesc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderTypedesc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OrderTypedesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderTypedesc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_u_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblOrderType] ([OrderType], [OrderTypedesc], [t_date], [u_date], [t_user]) VALUES (@OrderType, @OrderTypedesc, @t_date, @u_date, @t_user);
SELECT OrderType_id, OrderType, OrderTypedesc, t_date, u_date, t_user FROM tblOrderType WHERE (OrderType = @OrderType)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OrderType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OrderTypedesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderTypedesc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblOrderType] SET [OrderType] = @OrderType, [OrderTypedesc] = @OrderTypedesc, [t_date] = @t_date, [u_date] = @u_date, [t_user] = @t_user WHERE (([OrderType_id] = @Original_OrderType_id) AND ([OrderType] = @Original_OrderType) AND ((@IsNull_OrderTypedesc = 1 AND [OrderTypedesc] IS NULL) OR ([OrderTypedesc] = @Original_OrderTypedesc)) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_u_date = 1 AND [u_date] IS NULL) OR ([u_date] = @Original_u_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)));
SELECT OrderType_id, OrderType, OrderTypedesc, t_date, u_date, t_user FROM tblOrderType WHERE (OrderType = @OrderType)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OrderType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OrderTypedesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderTypedesc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OrderType_id", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "OrderType_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OrderType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OrderTypedesc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderTypedesc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OrderTypedesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderTypedesc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_u_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_u_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "u_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblOrderType.*\r\nFROM         tblOrderType";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblOrderTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblOrderTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblOrderTypeDataTable dataTable = new POCS.tblOrderTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblOrderTypeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblOrderType");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_OrderType_id, string Original_OrderType, string Original_OrderTypedesc, System.Nullable<System.DateTime> Original_t_date, System.Nullable<System.DateTime> Original_u_date, string Original_t_user) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_OrderType_id));
            if ((Original_OrderType == null)) {
                throw new System.ArgumentNullException("Original_OrderType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_OrderType));
            }
            if ((Original_OrderTypedesc == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_OrderTypedesc));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_u_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_u_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OrderType, string OrderTypedesc, System.Nullable<System.DateTime> t_date, System.Nullable<System.DateTime> u_date, string t_user) {
            if ((OrderType == null)) {
                throw new System.ArgumentNullException("OrderType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OrderType));
            }
            if ((OrderTypedesc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(OrderTypedesc));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((u_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(u_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OrderType, string OrderTypedesc, System.Nullable<System.DateTime> t_date, System.Nullable<System.DateTime> u_date, string t_user, decimal Original_OrderType_id, string Original_OrderType, string Original_OrderTypedesc, System.Nullable<System.DateTime> Original_t_date, System.Nullable<System.DateTime> Original_u_date, string Original_t_user) {
            if ((OrderType == null)) {
                throw new System.ArgumentNullException("OrderType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OrderType));
            }
            if ((OrderTypedesc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(OrderTypedesc));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((u_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(u_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(t_user));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_OrderType_id));
            if ((Original_OrderType == null)) {
                throw new System.ArgumentNullException("Original_OrderType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OrderType));
            }
            if ((Original_OrderTypedesc == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_OrderTypedesc));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_u_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_u_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblJobChargeTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblJobChargeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblJobCharge";
            tableMapping.ColumnMappings.Add("ChID", "ChID");
            tableMapping.ColumnMappings.Add("job_code", "job_code");
            tableMapping.ColumnMappings.Add("jobno", "jobno");
            tableMapping.ColumnMappings.Add("subjobno", "subjobno");
            tableMapping.ColumnMappings.Add("jobno_desc", "jobno_desc");
            tableMapping.ColumnMappings.Add("subjobno_desc", "subjobno_desc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblJobCharge] ([job_code], [jobno], [subjobno], [jobno_desc], [subjo" +
                "bno_desc]) VALUES (@job_code, @jobno, @subjobno, @jobno_desc, @subjobno_desc)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@job_code", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "job_code", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@jobno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "jobno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@subjobno", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "subjobno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@jobno_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "jobno_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@subjobno_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "subjobno_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblJobCharge.*\r\nFROM         tblJobCharge";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     job_code, jobno_desc + \' \' + subjobno_desc AS Description\r\nFROM       " +
                "  tblJobCharge";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     job_code, jobno_desc + \'***\' + subjobno_desc AS Description\r\nFROM     " +
                "    tblJobCharge";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     jobno_desc\r\nFROM         tblJobCharge\r\nWHERE     (ChID = @ChID)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "ChID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     subjobno_desc\r\nFROM         tblJobCharge\r\nWHERE     (ChID = @ChID)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "ChID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblJobChargeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblJobChargeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblJobChargeDataTable dataTable = new POCS.tblJobChargeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDescription(POCS.tblJobChargeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.tblJobChargeDataTable GetDataByDescription() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            POCS.tblJobChargeDataTable dataTable = new POCS.tblJobChargeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByJobChargeDesc(POCS.tblJobChargeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.tblJobChargeDataTable GetDataByDesc() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            POCS.tblJobChargeDataTable dataTable = new POCS.tblJobChargeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillJobNoDescbyID(POCS.tblJobChargeDataTable dataTable, decimal ChID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ChID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.tblJobChargeDataTable GetDataJobNoDescbyID(decimal ChID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ChID));
            POCS.tblJobChargeDataTable dataTable = new POCS.tblJobChargeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillSubJobNoDescbyID(POCS.tblJobChargeDataTable dataTable, decimal ChID) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ChID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.tblJobChargeDataTable GetDataSubJobNoDescbyID(decimal ChID) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ChID));
            POCS.tblJobChargeDataTable dataTable = new POCS.tblJobChargeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblJobChargeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblJobCharge");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string job_code, string jobno, string subjobno, string jobno_desc, string subjobno_desc) {
            if ((job_code == null)) {
                throw new System.ArgumentNullException("job_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(job_code));
            }
            if ((jobno == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(jobno));
            }
            if ((subjobno == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(subjobno));
            }
            if ((jobno_desc == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(jobno_desc));
            }
            if ((subjobno_desc == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(subjobno_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblBuyerTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblBuyerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblBuyer";
            tableMapping.ColumnMappings.Add("BuyerID", "BuyerID");
            tableMapping.ColumnMappings.Add("BuyerIntial", "BuyerIntial");
            tableMapping.ColumnMappings.Add("BuyerName", "BuyerName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblBuyer] WHERE (([BuyerID] = @Original_BuyerID) AND ([BuyerIntial] " +
                "= @Original_BuyerIntial) AND ([BuyerName] = @Original_BuyerName))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BuyerID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "BuyerID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BuyerIntial", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerIntial", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BuyerName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblBuyer] ([BuyerIntial], [BuyerName]) VALUES (@BuyerIntial, @BuyerN" +
                "ame);\r\nSELECT BuyerID, BuyerIntial, BuyerName FROM tblBuyer WHERE (BuyerID = SCO" +
                "PE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BuyerIntial", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerIntial", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BuyerName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblBuyer] SET [BuyerIntial] = @BuyerIntial, [BuyerName] = @BuyerName WHERE (([BuyerID] = @Original_BuyerID) AND ([BuyerIntial] = @Original_BuyerIntial) AND ([BuyerName] = @Original_BuyerName));
SELECT BuyerID, BuyerIntial, BuyerName FROM tblBuyer WHERE (BuyerID = @BuyerID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BuyerIntial", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerIntial", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BuyerName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BuyerID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "BuyerID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BuyerIntial", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerIntial", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BuyerName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BuyerName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BuyerID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "BuyerID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblBuyer.*\r\nFROM         tblBuyer";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblBuyerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblBuyerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblBuyerDataTable dataTable = new POCS.tblBuyerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblBuyerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblBuyer");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_BuyerID, string Original_BuyerIntial, string Original_BuyerName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_BuyerID));
            if ((Original_BuyerIntial == null)) {
                throw new System.ArgumentNullException("Original_BuyerIntial");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_BuyerIntial));
            }
            if ((Original_BuyerName == null)) {
                throw new System.ArgumentNullException("Original_BuyerName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BuyerName));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BuyerIntial, string BuyerName) {
            if ((BuyerIntial == null)) {
                throw new System.ArgumentNullException("BuyerIntial");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BuyerIntial));
            }
            if ((BuyerName == null)) {
                throw new System.ArgumentNullException("BuyerName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BuyerName));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string BuyerIntial, string BuyerName, decimal Original_BuyerID, string Original_BuyerIntial, string Original_BuyerName, decimal BuyerID) {
            if ((BuyerIntial == null)) {
                throw new System.ArgumentNullException("BuyerIntial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BuyerIntial));
            }
            if ((BuyerName == null)) {
                throw new System.ArgumentNullException("BuyerName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BuyerName));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_BuyerID));
            if ((Original_BuyerIntial == null)) {
                throw new System.ArgumentNullException("Original_BuyerIntial");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_BuyerIntial));
            }
            if ((Original_BuyerName == null)) {
                throw new System.ArgumentNullException("Original_BuyerName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_BuyerName));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(BuyerID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PO_HeaderTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PO_HeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PO_Header";
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            tableMapping.ColumnMappings.Add("VendorAddress", "VendorAddress");
            tableMapping.ColumnMappings.Add("PO_OrderNo", "PO_OrderNo");
            tableMapping.ColumnMappings.Add("PO_Date", "PO_Date");
            tableMapping.ColumnMappings.Add("Requisition_OrderNo", "Requisition_OrderNo");
            tableMapping.ColumnMappings.Add("CostCenter", "CostCenter");
            tableMapping.ColumnMappings.Add("Orderedby", "Orderedby");
            tableMapping.ColumnMappings.Add("Approvedby", "Approvedby");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("DeliveryTerms", "DeliveryTerms");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("ChargeType", "ChargeType");
            tableMapping.ColumnMappings.Add("CnctPerson", "CnctPerson");
            tableMapping.ColumnMappings.Add("VendorRef", "VendorRef");
            tableMapping.ColumnMappings.Add("Project", "Project");
            tableMapping.ColumnMappings.Add("VesselName", "VesselName");
            tableMapping.ColumnMappings.Add("EndUser", "EndUser");
            tableMapping.ColumnMappings.Add("Buyer", "Buyer");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("PO_Description", "PO_Description");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("ImpInstructions", "ImpInstructions");
            tableMapping.ColumnMappings.Add("DeliveryPoint", "DeliveryPoint");
            tableMapping.ColumnMappings.Add("CnctTelephone", "CnctTelephone");
            tableMapping.ColumnMappings.Add("PaymentTerms", "PaymentTerms");
            tableMapping.ColumnMappings.Add("DeliveryPointAttn", "DeliveryPointAttn");
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            tableMapping.ColumnMappings.Add("t_user", "t_user");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [PO_Header] WHERE (([POID] = @Original_POID) AND ([VendorName] = @Original_VendorName) AND ([VendorAddress] = @Original_VendorAddress) AND ([PO_OrderNo] = @Original_PO_OrderNo) AND ([PO_Date] = @Original_PO_Date) AND ([Requisition_OrderNo] = @Original_Requisition_OrderNo) AND ([CostCenter] = @Original_CostCenter) AND ([Orderedby] = @Original_Orderedby) AND ([Approvedby] = @Original_Approvedby) AND ([Remarks] = @Original_Remarks) AND ([DeliveryTerms] = @Original_DeliveryTerms) AND ([Currency] = @Original_Currency) AND ([Status] = @Original_Status) AND ([ChargeType] = @Original_ChargeType) AND ([CnctPerson] = @Original_CnctPerson) AND ([VendorRef] = @Original_VendorRef) AND ([Project] = @Original_Project) AND ([VesselName] = @Original_VesselName) AND ([EndUser] = @Original_EndUser) AND ([Buyer] = @Original_Buyer) AND ([Type] = @Original_Type) AND ([PO_Description] = @Original_PO_Description) AND ([DeliveryDate] = @Original_DeliveryDate) AND ([ImpInstructions] = @Original_ImpInstructions) AND ([DeliveryPoint] = @Original_DeliveryPoint) AND ([CnctTelephone] = @Original_CnctTelephone) AND ([PaymentTerms] = @Original_PaymentTerms) AND ([DeliveryPointAttn] = @Original_DeliveryPointAttn) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_date] = @Original_t_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_user] = @Original_t_user)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorAddress", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Requisition_OrderNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requisition_OrderNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CostCenter", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CostCenter", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Orderedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Orderedby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Remarks", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Remarks", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryTerms", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CnctPerson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctPerson", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorRef", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorRef", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VesselName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VesselName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EndUser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EndUser", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Description", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ImpInstructions", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ImpInstructions", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPoint", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPoint", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CnctTelephone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctTelephone", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PaymentTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PaymentTerms", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointAttn", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAttn", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [PO_Header] ([VendorName], [VendorAddress], [PO_OrderNo], [PO_Date], [Requisition_OrderNo], [CostCenter], [Orderedby], [Approvedby], [Remarks], [DeliveryTerms], [Currency], [Status], [ChargeType], [CnctPerson], [VendorRef], [Project], [VesselName], [EndUser], [Buyer], [Type], [PO_Description], [DeliveryDate], [ImpInstructions], [DeliveryPoint], [CnctTelephone], [PaymentTerms], [DeliveryPointAttn], [t_date], [t_user]) VALUES (@VendorName, @VendorAddress, @PO_OrderNo, @PO_Date, @Requisition_OrderNo, @CostCenter, @Orderedby, @Approvedby, @Remarks, @DeliveryTerms, @Currency, @Status, @ChargeType, @CnctPerson, @VendorRef, @Project, @VesselName, @EndUser, @Buyer, @Type, @PO_Description, @DeliveryDate, @ImpInstructions, @DeliveryPoint, @CnctTelephone, @PaymentTerms, @DeliveryPointAttn, @t_date, @t_user);
SELECT POID, VendorName, VendorAddress, PO_OrderNo, PO_Date, Requisition_OrderNo, CostCenter, Orderedby, Approvedby, Remarks, DeliveryTerms, Currency, Status, ChargeType, CnctPerson, VendorRef, Project, VesselName, EndUser, Buyer, Type, PO_Description, DeliveryDate, ImpInstructions, DeliveryPoint, CnctTelephone, PaymentTerms, DeliveryPointAttn, t_date, t_user FROM PO_Header WHERE (POID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorAddress", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requisition_OrderNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requisition_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostCenter", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CostCenter", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Orderedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Orderedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Remarks", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctPerson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctPerson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorRef", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorRef", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VesselName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VesselName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndUser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EndUser", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryDate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImpInstructions", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ImpInstructions", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPoint", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPoint", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctTelephone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctTelephone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PaymentTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PaymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointAttn", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAttn", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [PO_Header] SET [VendorName] = @VendorName, [VendorAddress] = @VendorAddre" +
                "ss, [PO_OrderNo] = @PO_OrderNo, [PO_Date] = @PO_Date, [Requisition_OrderNo] = @R" +
                "equisition_OrderNo, [CostCenter] = @CostCenter, [Orderedby] = @Orderedby, [Appro" +
                "vedby] = @Approvedby, [Remarks] = @Remarks, [DeliveryTerms] = @DeliveryTerms, [C" +
                "urrency] = @Currency, [Status] = @Status, [ChargeType] = @ChargeType, [CnctPerso" +
                "n] = @CnctPerson, [VendorRef] = @VendorRef, [Project] = @Project, [VesselName] =" +
                " @VesselName, [EndUser] = @EndUser, [Buyer] = @Buyer, [Type] = @Type, [PO_Descri" +
                "ption] = @PO_Description, [DeliveryDate] = @DeliveryDate, [ImpInstructions] = @I" +
                "mpInstructions, [DeliveryPoint] = @DeliveryPoint, [CnctTelephone] = @CnctTelepho" +
                "ne, [PaymentTerms] = @PaymentTerms, [DeliveryPointAttn] = @DeliveryPointAttn, [t" +
                "_date] = @t_date, [t_user] = @t_user WHERE (([POID] = @Original_POID) AND ([Vend" +
                "orName] = @Original_VendorName) AND ([VendorAddress] = @Original_VendorAddress) " +
                "AND ([PO_OrderNo] = @Original_PO_OrderNo) AND ([PO_Date] = @Original_PO_Date) AN" +
                "D ([Requisition_OrderNo] = @Original_Requisition_OrderNo) AND ([CostCenter] = @O" +
                "riginal_CostCenter) AND ([Orderedby] = @Original_Orderedby) AND ([Approvedby] = " +
                "@Original_Approvedby) AND ([Remarks] = @Original_Remarks) AND ([DeliveryTerms] =" +
                " @Original_DeliveryTerms) AND ([Currency] = @Original_Currency) AND ([Status] = " +
                "@Original_Status) AND ([ChargeType] = @Original_ChargeType) AND ([CnctPerson] = " +
                "@Original_CnctPerson) AND ([VendorRef] = @Original_VendorRef) AND ([Project] = @" +
                "Original_Project) AND ([VesselName] = @Original_VesselName) AND ([EndUser] = @Or" +
                "iginal_EndUser) AND ([Buyer] = @Original_Buyer) AND ([Type] = @Original_Type) AN" +
                "D ([PO_Description] = @Original_PO_Description) AND ([DeliveryDate] = @Original_" +
                "DeliveryDate) AND ([ImpInstructions] = @Original_ImpInstructions) AND ([Delivery" +
                "Point] = @Original_DeliveryPoint) AND ([CnctTelephone] = @Original_CnctTelephone" +
                ") AND ([PaymentTerms] = @Original_PaymentTerms) AND ([DeliveryPointAttn] = @Orig" +
                "inal_DeliveryPointAttn) AND ((@IsNull_t_date = 1 AND [t_date] IS NULL) OR ([t_da" +
                "te] = @Original_t_date)) AND ((@IsNull_t_user = 1 AND [t_user] IS NULL) OR ([t_u" +
                "ser] = @Original_t_user)));\r\nSELECT POID, VendorName, VendorAddress, PO_OrderNo," +
                " PO_Date, Requisition_OrderNo, CostCenter, Orderedby, Approvedby, Remarks, Deliv" +
                "eryTerms, Currency, Status, ChargeType, CnctPerson, VendorRef, Project, VesselNa" +
                "me, EndUser, Buyer, Type, PO_Description, DeliveryDate, ImpInstructions, Deliver" +
                "yPoint, CnctTelephone, PaymentTerms, DeliveryPointAttn, t_date, t_user FROM PO_H" +
                "eader WHERE (POID = @POID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorAddress", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requisition_OrderNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requisition_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostCenter", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CostCenter", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Orderedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Orderedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Remarks", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctPerson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctPerson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorRef", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorRef", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VesselName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VesselName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndUser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EndUser", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryDate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImpInstructions", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ImpInstructions", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPoint", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPoint", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctTelephone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctTelephone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PaymentTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PaymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointAttn", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAttn", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorAddress", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorAddress", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_OrderNo", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_Date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Requisition_OrderNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requisition_OrderNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CostCenter", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CostCenter", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Orderedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Orderedby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Remarks", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Remarks", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryTerms", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Currency", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CnctPerson", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctPerson", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VendorRef", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VendorRef", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VesselName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VesselName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EndUser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EndUser", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_Description", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ImpInstructions", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ImpInstructions", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPoint", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPoint", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CnctTelephone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CnctTelephone", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PaymentTerms", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PaymentTerms", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DeliveryPointAttn", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAttn", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_t_user", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_t_user", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PO_Header.*\r\nFROM         PO_Header";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     PO_Header.*\r\nFROM         PO_Header\r\nwhere Type = \'SO\'";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     PO_Header.*\r\nFROM         PO_Header\r\nwhere POID = @POID";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     PO_Header.*\r\nFROM         PO_Header\r\nWhere Type = @Type";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT     PO_Header.*\r\nFROM         PO_Header where t_user = @userID";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@userID", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"INSERT INTO PO_Header
                      (VendorName, VendorAddress, PO_OrderNo, PO_Date, Requisition_OrderNo, CostCenter, Orderedby, Approvedby, Remarks, DeliveryTerms, Currency, 
                      Status, ChargeType, CnctPerson, VendorRef, Project, VesselName, EndUser, Buyer, Type, PO_Description, DeliveryDate, ImpInstructions, 
                      DeliveryPoint, CnctTelephone, PaymentTerms, DeliveryPointAttn, t_date, t_user)
VALUES     (@VendorName,@VendorAddress,@PO_OrderNo,@PO_Date,@Requisition_OrderNo,@CostCenter,@Orderedby,@Approvedby,@Remarks,@DeliveryTerms,@Currency,@Status,@ChargeType,@CnctPerson,@VendorRef,@Project,@VesselName,@EndUser,@Buyer,@Type,@PO_Description,@DeliveryDate,@ImpInstructions,@DeliveryPoint,@CnctTelephone,@PaymentTerms,@DeliveryPointAttn,@t_date,@t_user);   
SELECT SCOPE_IDENTITY()";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorName", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VendorName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorAddress", System.Data.SqlDbType.VarChar, 300, System.Data.ParameterDirection.Input, 0, 0, "VendorAddress", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_OrderNo", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Date", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "PO_Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requisition_OrderNo", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Requisition_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostCenter", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "CostCenter", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Orderedby", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Orderedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Remarks", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryTerms", System.Data.SqlDbType.VarChar, 1000, System.Data.ParameterDirection.Input, 0, 0, "DeliveryTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Currency", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeType", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctPerson", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "CnctPerson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorRef", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VendorRef", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 75, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VesselName", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VesselName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndUser", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "EndUser", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Description", System.Data.SqlDbType.VarChar, 500, System.Data.ParameterDirection.Input, 0, 0, "PO_Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryDate", System.Data.SqlDbType.VarChar, 25, System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImpInstructions", System.Data.SqlDbType.VarChar, 500, System.Data.ParameterDirection.Input, 0, 0, "ImpInstructions", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPoint", System.Data.SqlDbType.VarChar, 150, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPoint", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctTelephone", System.Data.SqlDbType.VarChar, 16, System.Data.ParameterDirection.Input, 0, 0, "CnctTelephone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PaymentTerms", System.Data.SqlDbType.VarChar, 3, System.Data.ParameterDirection.Input, 0, 0, "PaymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointAttn", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAttn", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"
UPDATE    PO_Header
SET              VendorName = @VendorName, PO_OrderNo = @PO_OrderNo, VendorAddress = @VendorAddress, PO_Date = @PO_Date, 
                      Requisition_OrderNo = @Requisition_OrderNo, CostCenter = @CostCenter, Orderedby = @Orderedby, Approvedby = @Approvedby, 
                      Remarks = @Remarks, DeliveryTerms = @DeliveryTerms, Currency = @Currency, Status = @Status, ChargeType = @ChargeType, 
                      CnctPerson = @CnctPerson, VendorRef = @VendorRef, Project = @Project, VesselName = @VesselName, EndUser = @EndUser, Buyer = @Buyer, 
                      Type = @Type, PO_Description = @PO_Description, DeliveryDate = @DeliveryDate, ImpInstructions = @ImpInstructions, 
                      DeliveryPoint = @DeliveryPoint, CnctTelephone = @CnctTelephone, PaymentTerms = @PaymentTerms, DeliveryPointAttn = @DeliveryPointAttn, 
                      t_date = @t_date, t_user = @t_user
WHERE     (POID = @POID)";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorName", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VendorName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_OrderNo", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorAddress", System.Data.SqlDbType.VarChar, 300, System.Data.ParameterDirection.Input, 0, 0, "VendorAddress", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Date", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "PO_Date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requisition_OrderNo", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Requisition_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CostCenter", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "CostCenter", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Orderedby", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Orderedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Remarks", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Remarks", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryTerms", System.Data.SqlDbType.VarChar, 1000, System.Data.ParameterDirection.Input, 0, 0, "DeliveryTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Currency", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Currency", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeType", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "ChargeType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctPerson", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "CnctPerson", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VendorRef", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VendorRef", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 75, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@VesselName", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "VesselName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndUser", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "EndUser", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Description", System.Data.SqlDbType.VarChar, 500, System.Data.ParameterDirection.Input, 0, 0, "PO_Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryDate", System.Data.SqlDbType.VarChar, 25, System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImpInstructions", System.Data.SqlDbType.VarChar, 500, System.Data.ParameterDirection.Input, 0, 0, "ImpInstructions", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPoint", System.Data.SqlDbType.VarChar, 150, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPoint", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@CnctTelephone", System.Data.SqlDbType.VarChar, 16, System.Data.ParameterDirection.Input, 0, 0, "CnctTelephone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PaymentTerms", System.Data.SqlDbType.VarChar, 3, System.Data.ParameterDirection.Input, 0, 0, "PaymentTerms", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DeliveryPointAttn", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "DeliveryPointAttn", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_date", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "t_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@t_user", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "t_user", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.PO_HeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.PO_HeaderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.PO_HeaderDataTable dataTable = new POCS.PO_HeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(POCS.PO_HeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPOID(POCS.PO_HeaderDataTable dataTable, decimal POID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(POID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.PO_HeaderDataTable GetDataByPOID(decimal POID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(POID));
            POCS.PO_HeaderDataTable dataTable = new POCS.PO_HeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByType(POCS.PO_HeaderDataTable dataTable, string Type) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Type));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.PO_HeaderDataTable GetDataByType(string Type) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Type));
            }
            POCS.PO_HeaderDataTable dataTable = new POCS.PO_HeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByUserID(POCS.PO_HeaderDataTable dataTable, string userID) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((userID == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(userID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.PO_HeaderDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "PO_Header");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_POID, 
                    string Original_VendorName, 
                    string Original_VendorAddress, 
                    decimal Original_PO_OrderNo, 
                    System.DateTime Original_PO_Date, 
                    string Original_Requisition_OrderNo, 
                    string Original_CostCenter, 
                    string Original_Orderedby, 
                    string Original_Approvedby, 
                    string Original_Remarks, 
                    string Original_DeliveryTerms, 
                    string Original_Currency, 
                    int Original_Status, 
                    string Original_ChargeType, 
                    string Original_CnctPerson, 
                    string Original_VendorRef, 
                    string Original_Project, 
                    string Original_VesselName, 
                    string Original_EndUser, 
                    string Original_Buyer, 
                    string Original_Type, 
                    string Original_PO_Description, 
                    string Original_DeliveryDate, 
                    string Original_ImpInstructions, 
                    string Original_DeliveryPoint, 
                    string Original_CnctTelephone, 
                    string Original_PaymentTerms, 
                    string Original_DeliveryPointAttn, 
                    System.Nullable<System.DateTime> Original_t_date, 
                    string Original_t_user) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_POID));
            if ((Original_VendorName == null)) {
                throw new System.ArgumentNullException("Original_VendorName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_VendorName));
            }
            if ((Original_VendorAddress == null)) {
                throw new System.ArgumentNullException("Original_VendorAddress");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_VendorAddress));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PO_OrderNo));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_PO_Date));
            if ((Original_Requisition_OrderNo == null)) {
                throw new System.ArgumentNullException("Original_Requisition_OrderNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Requisition_OrderNo));
            }
            if ((Original_CostCenter == null)) {
                throw new System.ArgumentNullException("Original_CostCenter");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CostCenter));
            }
            if ((Original_Orderedby == null)) {
                throw new System.ArgumentNullException("Original_Orderedby");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Orderedby));
            }
            if ((Original_Approvedby == null)) {
                throw new System.ArgumentNullException("Original_Approvedby");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Approvedby));
            }
            if ((Original_Remarks == null)) {
                throw new System.ArgumentNullException("Original_Remarks");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Remarks));
            }
            if ((Original_DeliveryTerms == null)) {
                throw new System.ArgumentNullException("Original_DeliveryTerms");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DeliveryTerms));
            }
            if ((Original_Currency == null)) {
                throw new System.ArgumentNullException("Original_Currency");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Currency));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_Status));
            if ((Original_ChargeType == null)) {
                throw new System.ArgumentNullException("Original_ChargeType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ChargeType));
            }
            if ((Original_CnctPerson == null)) {
                throw new System.ArgumentNullException("Original_CnctPerson");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CnctPerson));
            }
            if ((Original_VendorRef == null)) {
                throw new System.ArgumentNullException("Original_VendorRef");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_VendorRef));
            }
            if ((Original_Project == null)) {
                throw new System.ArgumentNullException("Original_Project");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Project));
            }
            if ((Original_VesselName == null)) {
                throw new System.ArgumentNullException("Original_VesselName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_VesselName));
            }
            if ((Original_EndUser == null)) {
                throw new System.ArgumentNullException("Original_EndUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EndUser));
            }
            if ((Original_Buyer == null)) {
                throw new System.ArgumentNullException("Original_Buyer");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Buyer));
            }
            if ((Original_Type == null)) {
                throw new System.ArgumentNullException("Original_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Type));
            }
            if ((Original_PO_Description == null)) {
                throw new System.ArgumentNullException("Original_PO_Description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_PO_Description));
            }
            if ((Original_DeliveryDate == null)) {
                throw new System.ArgumentNullException("Original_DeliveryDate");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_DeliveryDate));
            }
            if ((Original_ImpInstructions == null)) {
                throw new System.ArgumentNullException("Original_ImpInstructions");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ImpInstructions));
            }
            if ((Original_DeliveryPoint == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPoint");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_DeliveryPoint));
            }
            if ((Original_CnctTelephone == null)) {
                throw new System.ArgumentNullException("Original_CnctTelephone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_CnctTelephone));
            }
            if ((Original_PaymentTerms == null)) {
                throw new System.ArgumentNullException("Original_PaymentTerms");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_PaymentTerms));
            }
            if ((Original_DeliveryPointAttn == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPointAttn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_DeliveryPointAttn));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string VendorName, 
                    string VendorAddress, 
                    decimal PO_OrderNo, 
                    System.DateTime PO_Date, 
                    string Requisition_OrderNo, 
                    string CostCenter, 
                    string Orderedby, 
                    string Approvedby, 
                    string Remarks, 
                    string DeliveryTerms, 
                    string Currency, 
                    int Status, 
                    string ChargeType, 
                    string CnctPerson, 
                    string VendorRef, 
                    string Project, 
                    string VesselName, 
                    string EndUser, 
                    string Buyer, 
                    string Type, 
                    string PO_Description, 
                    string DeliveryDate, 
                    string ImpInstructions, 
                    string DeliveryPoint, 
                    string CnctTelephone, 
                    string PaymentTerms, 
                    string DeliveryPointAttn, 
                    System.Nullable<System.DateTime> t_date, 
                    string t_user) {
            if ((VendorName == null)) {
                throw new System.ArgumentNullException("VendorName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(VendorName));
            }
            if ((VendorAddress == null)) {
                throw new System.ArgumentNullException("VendorAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(VendorAddress));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PO_OrderNo));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(PO_Date));
            if ((Requisition_OrderNo == null)) {
                throw new System.ArgumentNullException("Requisition_OrderNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Requisition_OrderNo));
            }
            if ((CostCenter == null)) {
                throw new System.ArgumentNullException("CostCenter");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CostCenter));
            }
            if ((Orderedby == null)) {
                throw new System.ArgumentNullException("Orderedby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Orderedby));
            }
            if ((Approvedby == null)) {
                throw new System.ArgumentNullException("Approvedby");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Remarks == null)) {
                throw new System.ArgumentNullException("Remarks");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Remarks));
            }
            if ((DeliveryTerms == null)) {
                throw new System.ArgumentNullException("DeliveryTerms");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DeliveryTerms));
            }
            if ((Currency == null)) {
                throw new System.ArgumentNullException("Currency");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Currency));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(Status));
            if ((ChargeType == null)) {
                throw new System.ArgumentNullException("ChargeType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ChargeType));
            }
            if ((CnctPerson == null)) {
                throw new System.ArgumentNullException("CnctPerson");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CnctPerson));
            }
            if ((VendorRef == null)) {
                throw new System.ArgumentNullException("VendorRef");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(VendorRef));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Project));
            }
            if ((VesselName == null)) {
                throw new System.ArgumentNullException("VesselName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(VesselName));
            }
            if ((EndUser == null)) {
                throw new System.ArgumentNullException("EndUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(EndUser));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Buyer));
            }
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Type));
            }
            if ((PO_Description == null)) {
                throw new System.ArgumentNullException("PO_Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(PO_Description));
            }
            if ((DeliveryDate == null)) {
                throw new System.ArgumentNullException("DeliveryDate");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(DeliveryDate));
            }
            if ((ImpInstructions == null)) {
                throw new System.ArgumentNullException("ImpInstructions");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ImpInstructions));
            }
            if ((DeliveryPoint == null)) {
                throw new System.ArgumentNullException("DeliveryPoint");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(DeliveryPoint));
            }
            if ((CnctTelephone == null)) {
                throw new System.ArgumentNullException("CnctTelephone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(CnctTelephone));
            }
            if ((PaymentTerms == null)) {
                throw new System.ArgumentNullException("PaymentTerms");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(PaymentTerms));
            }
            if ((DeliveryPointAttn == null)) {
                throw new System.ArgumentNullException("DeliveryPointAttn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(DeliveryPointAttn));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(t_user));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VendorName, 
                    string VendorAddress, 
                    decimal PO_OrderNo, 
                    System.DateTime PO_Date, 
                    string Requisition_OrderNo, 
                    string CostCenter, 
                    string Orderedby, 
                    string Approvedby, 
                    string Remarks, 
                    string DeliveryTerms, 
                    string Currency, 
                    int Status, 
                    string ChargeType, 
                    string CnctPerson, 
                    string VendorRef, 
                    string Project, 
                    string VesselName, 
                    string EndUser, 
                    string Buyer, 
                    string Type, 
                    string PO_Description, 
                    string DeliveryDate, 
                    string ImpInstructions, 
                    string DeliveryPoint, 
                    string CnctTelephone, 
                    string PaymentTerms, 
                    string DeliveryPointAttn, 
                    System.Nullable<System.DateTime> t_date, 
                    string t_user, 
                    decimal Original_POID, 
                    string Original_VendorName, 
                    string Original_VendorAddress, 
                    decimal Original_PO_OrderNo, 
                    System.DateTime Original_PO_Date, 
                    string Original_Requisition_OrderNo, 
                    string Original_CostCenter, 
                    string Original_Orderedby, 
                    string Original_Approvedby, 
                    string Original_Remarks, 
                    string Original_DeliveryTerms, 
                    string Original_Currency, 
                    int Original_Status, 
                    string Original_ChargeType, 
                    string Original_CnctPerson, 
                    string Original_VendorRef, 
                    string Original_Project, 
                    string Original_VesselName, 
                    string Original_EndUser, 
                    string Original_Buyer, 
                    string Original_Type, 
                    string Original_PO_Description, 
                    string Original_DeliveryDate, 
                    string Original_ImpInstructions, 
                    string Original_DeliveryPoint, 
                    string Original_CnctTelephone, 
                    string Original_PaymentTerms, 
                    string Original_DeliveryPointAttn, 
                    System.Nullable<System.DateTime> Original_t_date, 
                    string Original_t_user, 
                    decimal POID) {
            if ((VendorName == null)) {
                throw new System.ArgumentNullException("VendorName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(VendorName));
            }
            if ((VendorAddress == null)) {
                throw new System.ArgumentNullException("VendorAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(VendorAddress));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PO_OrderNo));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(PO_Date));
            if ((Requisition_OrderNo == null)) {
                throw new System.ArgumentNullException("Requisition_OrderNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Requisition_OrderNo));
            }
            if ((CostCenter == null)) {
                throw new System.ArgumentNullException("CostCenter");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CostCenter));
            }
            if ((Orderedby == null)) {
                throw new System.ArgumentNullException("Orderedby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Orderedby));
            }
            if ((Approvedby == null)) {
                throw new System.ArgumentNullException("Approvedby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Remarks == null)) {
                throw new System.ArgumentNullException("Remarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Remarks));
            }
            if ((DeliveryTerms == null)) {
                throw new System.ArgumentNullException("DeliveryTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DeliveryTerms));
            }
            if ((Currency == null)) {
                throw new System.ArgumentNullException("Currency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Currency));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Status));
            if ((ChargeType == null)) {
                throw new System.ArgumentNullException("ChargeType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ChargeType));
            }
            if ((CnctPerson == null)) {
                throw new System.ArgumentNullException("CnctPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CnctPerson));
            }
            if ((VendorRef == null)) {
                throw new System.ArgumentNullException("VendorRef");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(VendorRef));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Project));
            }
            if ((VesselName == null)) {
                throw new System.ArgumentNullException("VesselName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(VesselName));
            }
            if ((EndUser == null)) {
                throw new System.ArgumentNullException("EndUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(EndUser));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Buyer));
            }
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Type));
            }
            if ((PO_Description == null)) {
                throw new System.ArgumentNullException("PO_Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(PO_Description));
            }
            if ((DeliveryDate == null)) {
                throw new System.ArgumentNullException("DeliveryDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(DeliveryDate));
            }
            if ((ImpInstructions == null)) {
                throw new System.ArgumentNullException("ImpInstructions");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ImpInstructions));
            }
            if ((DeliveryPoint == null)) {
                throw new System.ArgumentNullException("DeliveryPoint");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(DeliveryPoint));
            }
            if ((CnctTelephone == null)) {
                throw new System.ArgumentNullException("CnctTelephone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(CnctTelephone));
            }
            if ((PaymentTerms == null)) {
                throw new System.ArgumentNullException("PaymentTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(PaymentTerms));
            }
            if ((DeliveryPointAttn == null)) {
                throw new System.ArgumentNullException("DeliveryPointAttn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(DeliveryPointAttn));
            }
            if ((t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(t_user));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_POID));
            if ((Original_VendorName == null)) {
                throw new System.ArgumentNullException("Original_VendorName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_VendorName));
            }
            if ((Original_VendorAddress == null)) {
                throw new System.ArgumentNullException("Original_VendorAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_VendorAddress));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_PO_OrderNo));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_PO_Date));
            if ((Original_Requisition_OrderNo == null)) {
                throw new System.ArgumentNullException("Original_Requisition_OrderNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Requisition_OrderNo));
            }
            if ((Original_CostCenter == null)) {
                throw new System.ArgumentNullException("Original_CostCenter");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_CostCenter));
            }
            if ((Original_Orderedby == null)) {
                throw new System.ArgumentNullException("Original_Orderedby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Orderedby));
            }
            if ((Original_Approvedby == null)) {
                throw new System.ArgumentNullException("Original_Approvedby");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Approvedby));
            }
            if ((Original_Remarks == null)) {
                throw new System.ArgumentNullException("Original_Remarks");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Remarks));
            }
            if ((Original_DeliveryTerms == null)) {
                throw new System.ArgumentNullException("Original_DeliveryTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_DeliveryTerms));
            }
            if ((Original_Currency == null)) {
                throw new System.ArgumentNullException("Original_Currency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_Currency));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_Status));
            if ((Original_ChargeType == null)) {
                throw new System.ArgumentNullException("Original_ChargeType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_ChargeType));
            }
            if ((Original_CnctPerson == null)) {
                throw new System.ArgumentNullException("Original_CnctPerson");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_CnctPerson));
            }
            if ((Original_VendorRef == null)) {
                throw new System.ArgumentNullException("Original_VendorRef");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_VendorRef));
            }
            if ((Original_Project == null)) {
                throw new System.ArgumentNullException("Original_Project");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Project));
            }
            if ((Original_VesselName == null)) {
                throw new System.ArgumentNullException("Original_VesselName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_VesselName));
            }
            if ((Original_EndUser == null)) {
                throw new System.ArgumentNullException("Original_EndUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_EndUser));
            }
            if ((Original_Buyer == null)) {
                throw new System.ArgumentNullException("Original_Buyer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Buyer));
            }
            if ((Original_Type == null)) {
                throw new System.ArgumentNullException("Original_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_Type));
            }
            if ((Original_PO_Description == null)) {
                throw new System.ArgumentNullException("Original_PO_Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_PO_Description));
            }
            if ((Original_DeliveryDate == null)) {
                throw new System.ArgumentNullException("Original_DeliveryDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_DeliveryDate));
            }
            if ((Original_ImpInstructions == null)) {
                throw new System.ArgumentNullException("Original_ImpInstructions");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ImpInstructions));
            }
            if ((Original_DeliveryPoint == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPoint");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_DeliveryPoint));
            }
            if ((Original_CnctTelephone == null)) {
                throw new System.ArgumentNullException("Original_CnctTelephone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_CnctTelephone));
            }
            if ((Original_PaymentTerms == null)) {
                throw new System.ArgumentNullException("Original_PaymentTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_PaymentTerms));
            }
            if ((Original_DeliveryPointAttn == null)) {
                throw new System.ArgumentNullException("Original_DeliveryPointAttn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_DeliveryPointAttn));
            }
            if ((Original_t_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(Original_t_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_t_user == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_t_user));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(POID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object InsertOrder(
                    string VendorName, 
                    string VendorAddress, 
                    decimal PO_OrderNo, 
                    System.DateTime PO_Date, 
                    string Requisition_OrderNo, 
                    string CostCenter, 
                    string Orderedby, 
                    string Approvedby, 
                    string Remarks, 
                    string DeliveryTerms, 
                    string Currency, 
                    int Status, 
                    string ChargeType, 
                    string CnctPerson, 
                    string VendorRef, 
                    string Project, 
                    string VesselName, 
                    string EndUser, 
                    string Buyer, 
                    string Type, 
                    string PO_Description, 
                    string DeliveryDate, 
                    string ImpInstructions, 
                    string DeliveryPoint, 
                    string CnctTelephone, 
                    string PaymentTerms, 
                    string DeliveryPointAttn, 
                    System.Nullable<System.DateTime> t_date, 
                    string t_user) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((VendorName == null)) {
                throw new System.ArgumentNullException("VendorName");
            }
            else {
                command.Parameters[0].Value = ((string)(VendorName));
            }
            if ((VendorAddress == null)) {
                throw new System.ArgumentNullException("VendorAddress");
            }
            else {
                command.Parameters[1].Value = ((string)(VendorAddress));
            }
            command.Parameters[2].Value = ((decimal)(PO_OrderNo));
            command.Parameters[3].Value = ((System.DateTime)(PO_Date));
            if ((Requisition_OrderNo == null)) {
                throw new System.ArgumentNullException("Requisition_OrderNo");
            }
            else {
                command.Parameters[4].Value = ((string)(Requisition_OrderNo));
            }
            if ((CostCenter == null)) {
                throw new System.ArgumentNullException("CostCenter");
            }
            else {
                command.Parameters[5].Value = ((string)(CostCenter));
            }
            if ((Orderedby == null)) {
                throw new System.ArgumentNullException("Orderedby");
            }
            else {
                command.Parameters[6].Value = ((string)(Orderedby));
            }
            if ((Approvedby == null)) {
                throw new System.ArgumentNullException("Approvedby");
            }
            else {
                command.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Remarks == null)) {
                throw new System.ArgumentNullException("Remarks");
            }
            else {
                command.Parameters[8].Value = ((string)(Remarks));
            }
            if ((DeliveryTerms == null)) {
                throw new System.ArgumentNullException("DeliveryTerms");
            }
            else {
                command.Parameters[9].Value = ((string)(DeliveryTerms));
            }
            if ((Currency == null)) {
                throw new System.ArgumentNullException("Currency");
            }
            else {
                command.Parameters[10].Value = ((string)(Currency));
            }
            command.Parameters[11].Value = ((int)(Status));
            if ((ChargeType == null)) {
                throw new System.ArgumentNullException("ChargeType");
            }
            else {
                command.Parameters[12].Value = ((string)(ChargeType));
            }
            if ((CnctPerson == null)) {
                throw new System.ArgumentNullException("CnctPerson");
            }
            else {
                command.Parameters[13].Value = ((string)(CnctPerson));
            }
            if ((VendorRef == null)) {
                throw new System.ArgumentNullException("VendorRef");
            }
            else {
                command.Parameters[14].Value = ((string)(VendorRef));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                command.Parameters[15].Value = ((string)(Project));
            }
            if ((VesselName == null)) {
                throw new System.ArgumentNullException("VesselName");
            }
            else {
                command.Parameters[16].Value = ((string)(VesselName));
            }
            if ((EndUser == null)) {
                throw new System.ArgumentNullException("EndUser");
            }
            else {
                command.Parameters[17].Value = ((string)(EndUser));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                command.Parameters[18].Value = ((string)(Buyer));
            }
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                command.Parameters[19].Value = ((string)(Type));
            }
            if ((PO_Description == null)) {
                throw new System.ArgumentNullException("PO_Description");
            }
            else {
                command.Parameters[20].Value = ((string)(PO_Description));
            }
            if ((DeliveryDate == null)) {
                throw new System.ArgumentNullException("DeliveryDate");
            }
            else {
                command.Parameters[21].Value = ((string)(DeliveryDate));
            }
            if ((ImpInstructions == null)) {
                throw new System.ArgumentNullException("ImpInstructions");
            }
            else {
                command.Parameters[22].Value = ((string)(ImpInstructions));
            }
            if ((DeliveryPoint == null)) {
                throw new System.ArgumentNullException("DeliveryPoint");
            }
            else {
                command.Parameters[23].Value = ((string)(DeliveryPoint));
            }
            if ((CnctTelephone == null)) {
                throw new System.ArgumentNullException("CnctTelephone");
            }
            else {
                command.Parameters[24].Value = ((string)(CnctTelephone));
            }
            if ((PaymentTerms == null)) {
                throw new System.ArgumentNullException("PaymentTerms");
            }
            else {
                command.Parameters[25].Value = ((string)(PaymentTerms));
            }
            if ((DeliveryPointAttn == null)) {
                throw new System.ArgumentNullException("DeliveryPointAttn");
            }
            else {
                command.Parameters[26].Value = ((string)(DeliveryPointAttn));
            }
            if ((t_date.HasValue == true)) {
                command.Parameters[27].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                command.Parameters[27].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                command.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(t_user));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateOrder(
                    string VendorName, 
                    decimal PO_OrderNo, 
                    string VendorAddress, 
                    System.DateTime PO_Date, 
                    string Requisition_OrderNo, 
                    string CostCenter, 
                    string Orderedby, 
                    string Approvedby, 
                    string Remarks, 
                    string DeliveryTerms, 
                    string Currency, 
                    int Status, 
                    string ChargeType, 
                    string CnctPerson, 
                    string VendorRef, 
                    string Project, 
                    string VesselName, 
                    string EndUser, 
                    string Buyer, 
                    string Type, 
                    string PO_Description, 
                    string DeliveryDate, 
                    string ImpInstructions, 
                    string DeliveryPoint, 
                    string CnctTelephone, 
                    string PaymentTerms, 
                    string DeliveryPointAttn, 
                    System.Nullable<System.DateTime> t_date, 
                    string t_user, 
                    decimal POID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((VendorName == null)) {
                throw new System.ArgumentNullException("VendorName");
            }
            else {
                command.Parameters[0].Value = ((string)(VendorName));
            }
            command.Parameters[1].Value = ((decimal)(PO_OrderNo));
            if ((VendorAddress == null)) {
                throw new System.ArgumentNullException("VendorAddress");
            }
            else {
                command.Parameters[2].Value = ((string)(VendorAddress));
            }
            command.Parameters[3].Value = ((System.DateTime)(PO_Date));
            if ((Requisition_OrderNo == null)) {
                throw new System.ArgumentNullException("Requisition_OrderNo");
            }
            else {
                command.Parameters[4].Value = ((string)(Requisition_OrderNo));
            }
            if ((CostCenter == null)) {
                throw new System.ArgumentNullException("CostCenter");
            }
            else {
                command.Parameters[5].Value = ((string)(CostCenter));
            }
            if ((Orderedby == null)) {
                throw new System.ArgumentNullException("Orderedby");
            }
            else {
                command.Parameters[6].Value = ((string)(Orderedby));
            }
            if ((Approvedby == null)) {
                throw new System.ArgumentNullException("Approvedby");
            }
            else {
                command.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Remarks == null)) {
                throw new System.ArgumentNullException("Remarks");
            }
            else {
                command.Parameters[8].Value = ((string)(Remarks));
            }
            if ((DeliveryTerms == null)) {
                throw new System.ArgumentNullException("DeliveryTerms");
            }
            else {
                command.Parameters[9].Value = ((string)(DeliveryTerms));
            }
            if ((Currency == null)) {
                throw new System.ArgumentNullException("Currency");
            }
            else {
                command.Parameters[10].Value = ((string)(Currency));
            }
            command.Parameters[11].Value = ((int)(Status));
            if ((ChargeType == null)) {
                throw new System.ArgumentNullException("ChargeType");
            }
            else {
                command.Parameters[12].Value = ((string)(ChargeType));
            }
            if ((CnctPerson == null)) {
                throw new System.ArgumentNullException("CnctPerson");
            }
            else {
                command.Parameters[13].Value = ((string)(CnctPerson));
            }
            if ((VendorRef == null)) {
                throw new System.ArgumentNullException("VendorRef");
            }
            else {
                command.Parameters[14].Value = ((string)(VendorRef));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                command.Parameters[15].Value = ((string)(Project));
            }
            if ((VesselName == null)) {
                throw new System.ArgumentNullException("VesselName");
            }
            else {
                command.Parameters[16].Value = ((string)(VesselName));
            }
            if ((EndUser == null)) {
                throw new System.ArgumentNullException("EndUser");
            }
            else {
                command.Parameters[17].Value = ((string)(EndUser));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                command.Parameters[18].Value = ((string)(Buyer));
            }
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                command.Parameters[19].Value = ((string)(Type));
            }
            if ((PO_Description == null)) {
                throw new System.ArgumentNullException("PO_Description");
            }
            else {
                command.Parameters[20].Value = ((string)(PO_Description));
            }
            if ((DeliveryDate == null)) {
                throw new System.ArgumentNullException("DeliveryDate");
            }
            else {
                command.Parameters[21].Value = ((string)(DeliveryDate));
            }
            if ((ImpInstructions == null)) {
                throw new System.ArgumentNullException("ImpInstructions");
            }
            else {
                command.Parameters[22].Value = ((string)(ImpInstructions));
            }
            if ((DeliveryPoint == null)) {
                throw new System.ArgumentNullException("DeliveryPoint");
            }
            else {
                command.Parameters[23].Value = ((string)(DeliveryPoint));
            }
            if ((CnctTelephone == null)) {
                throw new System.ArgumentNullException("CnctTelephone");
            }
            else {
                command.Parameters[24].Value = ((string)(CnctTelephone));
            }
            if ((PaymentTerms == null)) {
                throw new System.ArgumentNullException("PaymentTerms");
            }
            else {
                command.Parameters[25].Value = ((string)(PaymentTerms));
            }
            if ((DeliveryPointAttn == null)) {
                throw new System.ArgumentNullException("DeliveryPointAttn");
            }
            else {
                command.Parameters[26].Value = ((string)(DeliveryPointAttn));
            }
            if ((t_date.HasValue == true)) {
                command.Parameters[27].Value = ((System.DateTime)(t_date.Value));
            }
            else {
                command.Parameters[27].Value = System.DBNull.Value;
            }
            if ((t_user == null)) {
                command.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(t_user));
            }
            command.Parameters[29].Value = ((decimal)(POID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblusersTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblusersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblusers";
            tableMapping.ColumnMappings.Add("UsrId", "UsrId");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("UserPassword", "UserPassword");
            tableMapping.ColumnMappings.Add("UserType", "UserType");
            tableMapping.ColumnMappings.Add("Accessrights", "Accessrights");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblusers] WHERE (([UsrId] = @Original_UsrId) AND ([UserID] = @Original_UserID) AND ([UserName] = @Original_UserName) AND ([Department] = @Original_Department) AND ([UserPassword] = @Original_UserPassword) AND ([UserType] = @Original_UserType) AND ([Accessrights] = @Original_Accessrights))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UsrId", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "UsrId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserPassword", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Accessrights", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Accessrights", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblusers] ([UserID], [UserName], [Department], [UserPassword], [UserType], [Accessrights]) VALUES (@UserID, @UserName, @Department, @UserPassword, @UserType, @Accessrights);
SELECT UsrId, UserID, UserName, Department, UserPassword, UserType, Accessrights FROM tblusers WHERE (UsrId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserPassword", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Accessrights", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Accessrights", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblusers] SET [UserID] = @UserID, [UserName] = @UserName, [Department] = @Department, [UserPassword] = @UserPassword, [UserType] = @UserType, [Accessrights] = @Accessrights WHERE (([UsrId] = @Original_UsrId) AND ([UserID] = @Original_UserID) AND ([UserName] = @Original_UserName) AND ([Department] = @Original_Department) AND ([UserPassword] = @Original_UserPassword) AND ([UserType] = @Original_UserType) AND ([Accessrights] = @Original_Accessrights));
SELECT UsrId, UserID, UserName, Department, UserPassword, UserType, Accessrights FROM tblusers WHERE (UsrId = @UsrId)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserPassword", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Accessrights", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Accessrights", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UsrId", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "UsrId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserName", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserName", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserPassword", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserType", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserType", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Accessrights", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Accessrights", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UsrId", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "UsrId", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblusers.*\r\nFROM         tblusers";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [tblusers] WHERE [UsrId] = @Original_UsrId";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UsrId", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "UsrId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO [tblusers] ([UserID], [UserName], [Department], [UserPassword], [User" +
                "Type], [Accessrights]) VALUES (@UserID, @UserName, @Department, @UserPassword, @" +
                "UserType, @Accessrights);\r\nSELECT SCOPE_IDENTITY()";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserName", System.Data.SqlDbType.VarChar, 100, System.Data.ParameterDirection.Input, 0, 0, "UserName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserPassword", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserType", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Accessrights", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Accessrights", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE [tblusers] SET [UserID] = @UserID, [UserName] = @UserName, [Department] = " +
                "@Department, [UserPassword] = @UserPassword, [UserType] = @UserType, [Accessrigh" +
                "ts] = @Accessrights WHERE  (UsrId = @UsrId)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserName", System.Data.SqlDbType.VarChar, 100, System.Data.ParameterDirection.Input, 0, 0, "UserName", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserPassword", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserType", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserType", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Accessrights", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Accessrights", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UsrId", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "UsrId", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE [tblusers] SET [UserPassword] = @UserPassword WHERE (UserId = @UserId)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserPassword", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserPassword", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserId", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblusersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblusersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblusersDataTable dataTable = new POCS.tblusersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblusersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblusers");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_UsrId, string Original_UserID, string Original_UserName, string Original_Department, string Original_UserPassword, string Original_UserType, string Original_Accessrights) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_UsrId));
            if ((Original_UserID == null)) {
                throw new System.ArgumentNullException("Original_UserID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_UserID));
            }
            if ((Original_UserName == null)) {
                throw new System.ArgumentNullException("Original_UserName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UserName));
            }
            if ((Original_Department == null)) {
                throw new System.ArgumentNullException("Original_Department");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Department));
            }
            if ((Original_UserPassword == null)) {
                throw new System.ArgumentNullException("Original_UserPassword");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UserPassword));
            }
            if ((Original_UserType == null)) {
                throw new System.ArgumentNullException("Original_UserType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_UserType));
            }
            if ((Original_Accessrights == null)) {
                throw new System.ArgumentNullException("Original_Accessrights");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Accessrights));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string UserID, string UserName, string Department, string UserPassword, string UserType, string Accessrights) {
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UserID));
            }
            if ((UserName == null)) {
                throw new System.ArgumentNullException("UserName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UserName));
            }
            if ((Department == null)) {
                throw new System.ArgumentNullException("Department");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Department));
            }
            if ((UserPassword == null)) {
                throw new System.ArgumentNullException("UserPassword");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(UserPassword));
            }
            if ((UserType == null)) {
                throw new System.ArgumentNullException("UserType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UserType));
            }
            if ((Accessrights == null)) {
                throw new System.ArgumentNullException("Accessrights");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Accessrights));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string UserID, string UserName, string Department, string UserPassword, string UserType, string Accessrights, decimal Original_UsrId, string Original_UserID, string Original_UserName, string Original_Department, string Original_UserPassword, string Original_UserType, string Original_Accessrights, decimal UsrId) {
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UserID));
            }
            if ((UserName == null)) {
                throw new System.ArgumentNullException("UserName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UserName));
            }
            if ((Department == null)) {
                throw new System.ArgumentNullException("Department");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Department));
            }
            if ((UserPassword == null)) {
                throw new System.ArgumentNullException("UserPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(UserPassword));
            }
            if ((UserType == null)) {
                throw new System.ArgumentNullException("UserType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UserType));
            }
            if ((Accessrights == null)) {
                throw new System.ArgumentNullException("Accessrights");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Accessrights));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_UsrId));
            if ((Original_UserID == null)) {
                throw new System.ArgumentNullException("Original_UserID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_UserID));
            }
            if ((Original_UserName == null)) {
                throw new System.ArgumentNullException("Original_UserName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_UserName));
            }
            if ((Original_Department == null)) {
                throw new System.ArgumentNullException("Original_Department");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Department));
            }
            if ((Original_UserPassword == null)) {
                throw new System.ArgumentNullException("Original_UserPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_UserPassword));
            }
            if ((Original_UserType == null)) {
                throw new System.ArgumentNullException("Original_UserType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_UserType));
            }
            if ((Original_Accessrights == null)) {
                throw new System.ArgumentNullException("Original_Accessrights");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Accessrights));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(UsrId));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUser(decimal Original_UsrId) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(Original_UsrId));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertUser(string UserID, string UserName, string Department, string UserPassword, string UserType, string Accessrights) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                command.Parameters[0].Value = ((string)(UserID));
            }
            if ((UserName == null)) {
                throw new System.ArgumentNullException("UserName");
            }
            else {
                command.Parameters[1].Value = ((string)(UserName));
            }
            if ((Department == null)) {
                throw new System.ArgumentNullException("Department");
            }
            else {
                command.Parameters[2].Value = ((string)(Department));
            }
            if ((UserPassword == null)) {
                throw new System.ArgumentNullException("UserPassword");
            }
            else {
                command.Parameters[3].Value = ((string)(UserPassword));
            }
            if ((UserType == null)) {
                throw new System.ArgumentNullException("UserType");
            }
            else {
                command.Parameters[4].Value = ((string)(UserType));
            }
            if ((Accessrights == null)) {
                throw new System.ArgumentNullException("Accessrights");
            }
            else {
                command.Parameters[5].Value = ((string)(Accessrights));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateUser(string UserID, string UserName, string Department, string UserPassword, string UserType, string Accessrights, decimal UsrId) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                command.Parameters[0].Value = ((string)(UserID));
            }
            if ((UserName == null)) {
                throw new System.ArgumentNullException("UserName");
            }
            else {
                command.Parameters[1].Value = ((string)(UserName));
            }
            if ((Department == null)) {
                throw new System.ArgumentNullException("Department");
            }
            else {
                command.Parameters[2].Value = ((string)(Department));
            }
            if ((UserPassword == null)) {
                throw new System.ArgumentNullException("UserPassword");
            }
            else {
                command.Parameters[3].Value = ((string)(UserPassword));
            }
            if ((UserType == null)) {
                throw new System.ArgumentNullException("UserType");
            }
            else {
                command.Parameters[4].Value = ((string)(UserType));
            }
            if ((Accessrights == null)) {
                throw new System.ArgumentNullException("Accessrights");
            }
            else {
                command.Parameters[5].Value = ((string)(Accessrights));
            }
            command.Parameters[6].Value = ((decimal)(UsrId));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateUserPassword(string UserPassword, string UserId) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((UserPassword == null)) {
                throw new System.ArgumentNullException("UserPassword");
            }
            else {
                command.Parameters[0].Value = ((string)(UserPassword));
            }
            if ((UserId == null)) {
                throw new System.ArgumentNullException("UserId");
            }
            else {
                command.Parameters[1].Value = ((string)(UserId));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblMSRStatusTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblMSRStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblMSRStatus";
            tableMapping.ColumnMappings.Add("MSRStatusID", "MSRStatusID");
            tableMapping.ColumnMappings.Add("MSRStatus", "MSRStatus");
            tableMapping.ColumnMappings.Add("StatusDesc", "StatusDesc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblMSRStatus] WHERE (([MSRStatusID] = @Original_MSRStatusID) AND ([M" +
                "SRStatus] = @Original_MSRStatus) AND ([StatusDesc] = @Original_StatusDesc))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRStatusID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRStatusID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRStatus", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRStatus", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_StatusDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusDesc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblMSRStatus] ([MSRStatus], [StatusDesc]) VALUES (@MSRStatus, @Statu" +
                "sDesc);\r\nSELECT MSRStatusID, MSRStatus, StatusDesc FROM tblMSRStatus WHERE (MSRS" +
                "tatusID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRStatus", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRStatus", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@StatusDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusDesc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblMSRStatus] SET [MSRStatus] = @MSRStatus, [StatusDesc] = @StatusDesc WHERE (([MSRStatusID] = @Original_MSRStatusID) AND ([MSRStatus] = @Original_MSRStatus) AND ([StatusDesc] = @Original_StatusDesc));
SELECT MSRStatusID, MSRStatus, StatusDesc FROM tblMSRStatus WHERE (MSRStatusID = @MSRStatusID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRStatus", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRStatus", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@StatusDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusDesc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRStatusID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRStatusID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRStatus", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRStatus", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_StatusDesc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "StatusDesc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRStatusID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "MSRStatusID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblMSRStatus.*\r\nFROM         tblMSRStatus";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblMSRStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblMSRStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblMSRStatusDataTable dataTable = new POCS.tblMSRStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblMSRStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblMSRStatus");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MSRStatusID, int Original_MSRStatus, string Original_StatusDesc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MSRStatusID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_MSRStatus));
            if ((Original_StatusDesc == null)) {
                throw new System.ArgumentNullException("Original_StatusDesc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_StatusDesc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int MSRStatus, string StatusDesc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MSRStatus));
            if ((StatusDesc == null)) {
                throw new System.ArgumentNullException("StatusDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(StatusDesc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int MSRStatus, string StatusDesc, int Original_MSRStatusID, int Original_MSRStatus, string Original_StatusDesc, int MSRStatusID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(MSRStatus));
            if ((StatusDesc == null)) {
                throw new System.ArgumentNullException("StatusDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(StatusDesc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_MSRStatusID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_MSRStatus));
            if ((Original_StatusDesc == null)) {
                throw new System.ArgumentNullException("Original_StatusDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_StatusDesc));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(MSRStatusID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblMSRReceiptsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblMSRReceiptsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblMSRReceipts";
            tableMapping.ColumnMappings.Add("MSRID", "MSRID");
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            tableMapping.ColumnMappings.Add("MSRDate", "MSRDate");
            tableMapping.ColumnMappings.Add("RecvdDate", "RecvdDate");
            tableMapping.ColumnMappings.Add("RequiredDate", "RequiredDate");
            tableMapping.ColumnMappings.Add("NosItems", "NosItems");
            tableMapping.ColumnMappings.Add("Requestor", "Requestor");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("Approvedby", "Approvedby");
            tableMapping.ColumnMappings.Add("Project", "Project");
            tableMapping.ColumnMappings.Add("Buyer", "Buyer");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("MSRClosedDt", "MSRClosedDt");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblMSRReceipts] WHERE (([MSRID] = @Original_MSRID) AND ([MSRNo] = @Original_MSRNo) AND ([MSRDate] = @Original_MSRDate) AND ([RecvdDate] = @Original_RecvdDate) AND ([RequiredDate] = @Original_RequiredDate) AND ([NosItems] = @Original_NosItems) AND ([Requestor] = @Original_Requestor) AND ((@IsNull_Department = 1 AND [Department] IS NULL) OR ([Department] = @Original_Department)) AND ((@IsNull_Approvedby = 1 AND [Approvedby] IS NULL) OR ([Approvedby] = @Original_Approvedby)) AND ([Project] = @Original_Project) AND ([Buyer] = @Original_Buyer) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([Status] = @Original_Status) AND ((@IsNull_MSRClosedDt = 1 AND [MSRClosedDt] IS NULL) OR ([MSRClosedDt] = @Original_MSRClosedDt)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MSRID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RecvdDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RecvdDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RequiredDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RequiredDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NosItems", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NosItems", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Requestor", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requestor", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Department", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Approvedby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Description", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MSRClosedDt", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRClosedDt", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblMSRReceipts] ([MSRNo], [MSRDate], [RecvdDate], [RequiredDate], [NosItems], [Requestor], [Department], [Approvedby], [Project], [Buyer], [Description], [Status], [MSRClosedDt]) VALUES (@MSRNo, @MSRDate, @RecvdDate, @RequiredDate, @NosItems, @Requestor, @Department, @Approvedby, @Project, @Buyer, @Description, @Status, @MSRClosedDt);
SELECT MSRID, MSRNo, MSRDate, RecvdDate, RequiredDate, NosItems, Requestor, Department, Approvedby, Project, Buyer, Description, Status, MSRClosedDt FROM tblMSRReceipts WHERE (MSRID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RecvdDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RecvdDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RequiredDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RequiredDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NosItems", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NosItems", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requestor", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requestor", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRClosedDt", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblMSRReceipts] SET [MSRNo] = @MSRNo, [MSRDate] = @MSRDate, [RecvdDate] = @RecvdDate, [RequiredDate] = @RequiredDate, [NosItems] = @NosItems, [Requestor] = @Requestor, [Department] = @Department, [Approvedby] = @Approvedby, [Project] = @Project, [Buyer] = @Buyer, [Description] = @Description, [Status] = @Status, [MSRClosedDt] = @MSRClosedDt WHERE (([MSRID] = @Original_MSRID) AND ([MSRNo] = @Original_MSRNo) AND ([MSRDate] = @Original_MSRDate) AND ([RecvdDate] = @Original_RecvdDate) AND ([RequiredDate] = @Original_RequiredDate) AND ([NosItems] = @Original_NosItems) AND ([Requestor] = @Original_Requestor) AND ((@IsNull_Department = 1 AND [Department] IS NULL) OR ([Department] = @Original_Department)) AND ((@IsNull_Approvedby = 1 AND [Approvedby] IS NULL) OR ([Approvedby] = @Original_Approvedby)) AND ([Project] = @Original_Project) AND ([Buyer] = @Original_Buyer) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ([Status] = @Original_Status) AND ((@IsNull_MSRClosedDt = 1 AND [MSRClosedDt] IS NULL) OR ([MSRClosedDt] = @Original_MSRClosedDt)));
SELECT MSRID, MSRNo, MSRDate, RecvdDate, RequiredDate, NosItems, Requestor, Department, Approvedby, Project, Buyer, Description, Status, MSRClosedDt FROM tblMSRReceipts WHERE (MSRID = @MSRID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RecvdDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RecvdDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RequiredDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RequiredDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NosItems", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NosItems", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requestor", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requestor", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRClosedDt", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MSRID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RecvdDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RecvdDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_RequiredDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "RequiredDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NosItems", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NosItems", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Requestor", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Requestor", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Department", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Approvedby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Approvedby", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Project", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Buyer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Description", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Description", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MSRClosedDt", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRClosedDt", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "MSRID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblMSRReceipts.*\r\nFROM         tblMSRReceipts";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO [tblMSRReceipts] ([MSRNo], [MSRDate], [RecvdDate], [RequiredDate], [NosItems], [Requestor], [Department], [Approvedby], [Project], [Buyer], [Description], [Status]) VALUES (@MSRNo, @MSRDate, @RecvdDate, @RequiredDate, @NosItems, @Requestor, @Department, @Approvedby, @Project, @Buyer, @Description, @Status);
SELECT  SCOPE_IDENTITY()";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 9, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "MSRDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RecvdDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "RecvdDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RequiredDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "RequiredDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@NosItems", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "NosItems", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requestor", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Requestor", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.VarChar, 250, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"UPDATE [tblMSRReceipts] SET [MSRNo] = @MSRNo, [MSRDate] = @MSRDate, [RecvdDate] = @RecvdDate, [RequiredDate] = @RequiredDate, [NosItems] = @NosItems, [Requestor] = @Requestor, [Department] = @Department, [Approvedby] = @Approvedby, [Project] = @Project, [Buyer] = @Buyer, [Description] = @Description WHERE [MSRID] =@MSRID";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 9, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "MSRDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RecvdDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "RecvdDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RequiredDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "RequiredDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@NosItems", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "NosItems", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Requestor", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Requestor", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Department", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Approvedby", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Approvedby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Project", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Project", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Buyer", System.Data.SqlDbType.VarChar, 50, System.Data.ParameterDirection.Input, 0, 0, "Buyer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Description", System.Data.SqlDbType.VarChar, 250, System.Data.ParameterDirection.Input, 0, 0, "Description", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "MSRID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE [tblMSRReceipts] SET [Status] = @Status,[MSRClosed] = @MSRClosed, [MSRClos" +
                "edDt] = @MSRClosedDt, [POID] = @POID WHERE ([MSRID] = @MSRID) ";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRClosed", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "MSRClosed", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRClosedDt", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 0, 0, "MSRClosedDt", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "MSRID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE [tblMSRReceipts] SET [Status] = @Status WHERE [MSRNo] = @MSRNo";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Status", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "Status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 9, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblMSRReceiptsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblMSRReceiptsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblMSRReceiptsDataTable dataTable = new POCS.tblMSRReceiptsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblMSRReceiptsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblMSRReceipts");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MSRID, string Original_MSRNo, System.DateTime Original_MSRDate, System.DateTime Original_RecvdDate, System.DateTime Original_RequiredDate, int Original_NosItems, string Original_Requestor, string Original_Department, string Original_Approvedby, string Original_Project, string Original_Buyer, string Original_Description, int Original_Status, System.Nullable<System.DateTime> Original_MSRClosedDt) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MSRID));
            if ((Original_MSRNo == null)) {
                throw new System.ArgumentNullException("Original_MSRNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MSRNo));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_MSRDate));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_RecvdDate));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_RequiredDate));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_NosItems));
            if ((Original_Requestor == null)) {
                throw new System.ArgumentNullException("Original_Requestor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Requestor));
            }
            if ((Original_Department == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Department));
            }
            if ((Original_Approvedby == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Approvedby));
            }
            if ((Original_Project == null)) {
                throw new System.ArgumentNullException("Original_Project");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Project));
            }
            if ((Original_Buyer == null)) {
                throw new System.ArgumentNullException("Original_Buyer");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Buyer));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Description));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_Status));
            if ((Original_MSRClosedDt.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_MSRClosedDt.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MSRNo, System.DateTime MSRDate, System.DateTime RecvdDate, System.DateTime RequiredDate, int NosItems, string Requestor, string Department, string Approvedby, string Project, string Buyer, string Description, int Status, System.Nullable<System.DateTime> MSRClosedDt) {
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MSRNo));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(MSRDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(RecvdDate));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(RequiredDate));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NosItems));
            if ((Requestor == null)) {
                throw new System.ArgumentNullException("Requestor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Requestor));
            }
            if ((Department == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Department));
            }
            if ((Approvedby == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Project));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Buyer));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(Status));
            if ((MSRClosedDt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(MSRClosedDt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MSRNo, 
                    System.DateTime MSRDate, 
                    System.DateTime RecvdDate, 
                    System.DateTime RequiredDate, 
                    int NosItems, 
                    string Requestor, 
                    string Department, 
                    string Approvedby, 
                    string Project, 
                    string Buyer, 
                    string Description, 
                    int Status, 
                    System.Nullable<System.DateTime> MSRClosedDt, 
                    decimal Original_MSRID, 
                    string Original_MSRNo, 
                    System.DateTime Original_MSRDate, 
                    System.DateTime Original_RecvdDate, 
                    System.DateTime Original_RequiredDate, 
                    int Original_NosItems, 
                    string Original_Requestor, 
                    string Original_Department, 
                    string Original_Approvedby, 
                    string Original_Project, 
                    string Original_Buyer, 
                    string Original_Description, 
                    int Original_Status, 
                    System.Nullable<System.DateTime> Original_MSRClosedDt, 
                    decimal MSRID) {
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MSRNo));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(MSRDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(RecvdDate));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(RequiredDate));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NosItems));
            if ((Requestor == null)) {
                throw new System.ArgumentNullException("Requestor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Requestor));
            }
            if ((Department == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Department));
            }
            if ((Approvedby == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Project));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Buyer));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Status));
            if ((MSRClosedDt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(MSRClosedDt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_MSRID));
            if ((Original_MSRNo == null)) {
                throw new System.ArgumentNullException("Original_MSRNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MSRNo));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_MSRDate));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_RecvdDate));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_RequiredDate));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_NosItems));
            if ((Original_Requestor == null)) {
                throw new System.ArgumentNullException("Original_Requestor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Requestor));
            }
            if ((Original_Department == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Department));
            }
            if ((Original_Approvedby == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Approvedby));
            }
            if ((Original_Project == null)) {
                throw new System.ArgumentNullException("Original_Project");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Project));
            }
            if ((Original_Buyer == null)) {
                throw new System.ArgumentNullException("Original_Buyer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Buyer));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Description));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_Status));
            if ((Original_MSRClosedDt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_MSRClosedDt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(MSRID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertMSRReceipt(string MSRNo, System.DateTime MSRDate, System.DateTime RecvdDate, System.DateTime RequiredDate, int NosItems, string Requestor, string Department, string Approvedby, string Project, string Buyer, string Description, int Status) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                command.Parameters[0].Value = ((string)(MSRNo));
            }
            command.Parameters[1].Value = ((System.DateTime)(MSRDate));
            command.Parameters[2].Value = ((System.DateTime)(RecvdDate));
            command.Parameters[3].Value = ((System.DateTime)(RequiredDate));
            command.Parameters[4].Value = ((int)(NosItems));
            if ((Requestor == null)) {
                throw new System.ArgumentNullException("Requestor");
            }
            else {
                command.Parameters[5].Value = ((string)(Requestor));
            }
            if ((Department == null)) {
                command.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Department));
            }
            if ((Approvedby == null)) {
                command.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                command.Parameters[8].Value = ((string)(Project));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                command.Parameters[9].Value = ((string)(Buyer));
            }
            if ((Description == null)) {
                command.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Description));
            }
            command.Parameters[11].Value = ((int)(Status));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateMSRReceipt(string MSRNo, System.DateTime MSRDate, System.DateTime RecvdDate, System.DateTime RequiredDate, int NosItems, string Requestor, string Department, string Approvedby, string Project, string Buyer, string Description, decimal MSRID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                command.Parameters[0].Value = ((string)(MSRNo));
            }
            command.Parameters[1].Value = ((System.DateTime)(MSRDate));
            command.Parameters[2].Value = ((System.DateTime)(RecvdDate));
            command.Parameters[3].Value = ((System.DateTime)(RequiredDate));
            command.Parameters[4].Value = ((int)(NosItems));
            if ((Requestor == null)) {
                throw new System.ArgumentNullException("Requestor");
            }
            else {
                command.Parameters[5].Value = ((string)(Requestor));
            }
            if ((Department == null)) {
                command.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Department));
            }
            if ((Approvedby == null)) {
                command.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Approvedby));
            }
            if ((Project == null)) {
                throw new System.ArgumentNullException("Project");
            }
            else {
                command.Parameters[8].Value = ((string)(Project));
            }
            if ((Buyer == null)) {
                throw new System.ArgumentNullException("Buyer");
            }
            else {
                command.Parameters[9].Value = ((string)(Buyer));
            }
            if ((Description == null)) {
                command.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Description));
            }
            command.Parameters[11].Value = ((decimal)(MSRID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateMSRStatus(int Status, object MSRClosed, System.Nullable<System.DateTime> MSRClosedDt, object POID, decimal MSRID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(Status));
            if ((MSRClosed == null)) {
                throw new System.ArgumentNullException("MSRClosed");
            }
            else {
                command.Parameters[1].Value = ((object)(MSRClosed));
            }
            if ((MSRClosedDt.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(MSRClosedDt.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            if ((POID == null)) {
                throw new System.ArgumentNullException("POID");
            }
            else {
                command.Parameters[3].Value = ((object)(POID));
            }
            command.Parameters[4].Value = ((decimal)(MSRID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateMSRStatusbyMSRNo(int Status, string MSRNo) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            command.Parameters[0].Value = ((int)(Status));
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                command.Parameters[1].Value = ((string)(MSRNo));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MSRStatusDescTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MSRStatusDescTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MSRStatusDesc";
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("StatusDesc", "StatusDesc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     MSRStatusDesc.*\r\nFROM         MSRStatusDesc";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     MSRNo, StatusDesc\r\nFROM         MSRStatusDesc\r\nwhere Status < 99";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.MSRStatusDescDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.MSRStatusDescDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.MSRStatusDescDataTable dataTable = new POCS.MSRStatusDescDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByWithoutCancelledMSRs(POCS.MSRStatusDescDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.MSRStatusDescDataTable GetDataByWithoutCancelledMSRs() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            POCS.MSRStatusDescDataTable dataTable = new POCS.MSRStatusDescDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vPOdetailsCalculationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vPOdetailsCalculationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vPOdetailsCalculation";
            tableMapping.ColumnMappings.Add("PO_DetailID", "PO_DetailID");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Withholding", "Withholding");
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            tableMapping.ColumnMappings.Add("Period", "Period");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("discountValue", "discountValue");
            tableMapping.ColumnMappings.Add("DiscountedPrice", "DiscountedPrice");
            tableMapping.ColumnMappings.Add("WHValue", "WHValue");
            tableMapping.ColumnMappings.Add("NETVALUE", "NETVALUE");
            tableMapping.ColumnMappings.Add("ItemValue", "ItemValue");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vPOdetailsCalculation.*\r\nFROM         vPOdetailsCalculation";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     vPOdetailsCalculation.*\r\nFROM         vPOdetailsCalculation\r\nWhere POI" +
                "D = @POID";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vPOdetailsCalculationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vPOdetailsCalculationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vPOdetailsCalculationDataTable dataTable = new POCS.vPOdetailsCalculationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPOID(POCS.vPOdetailsCalculationDataTable dataTable, decimal POID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(POID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vPODetSummaryTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vPODetSummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vPODetSummary";
            tableMapping.ColumnMappings.Add("Po_OrderNo", "Po_OrderNo");
            tableMapping.ColumnMappings.Add("PO_Date", "PO_Date");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("PO_DetailID", "PO_DetailID");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Withholding", "Withholding");
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            tableMapping.ColumnMappings.Add("Period", "Period");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("discountValue", "discountValue");
            tableMapping.ColumnMappings.Add("DiscountedPrice", "DiscountedPrice");
            tableMapping.ColumnMappings.Add("WHValue", "WHValue");
            tableMapping.ColumnMappings.Add("NETVALUE", "NETVALUE");
            tableMapping.ColumnMappings.Add("ItemValue", "ItemValue");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vPODetSummary.*\r\nFROM         vPODetSummary";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     vPODetSummary.*\r\nFROM         vPODetSummary\r\nwhere type = @type\r\nand P" +
                "O_orderNO = @OrderNo";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@OrderNo", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "Po_OrderNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vPODetSummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vPODetSummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vPODetSummaryDataTable dataTable = new POCS.vPODetSummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTypeOrderNO(POCS.vPODetSummaryDataTable dataTable, string type, decimal OrderNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((type == null)) {
                throw new System.ArgumentNullException("type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(type));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(OrderNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.vPODetSummaryDataTable GetDataByTypeOrderNO(string type, decimal OrderNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((type == null)) {
                throw new System.ArgumentNullException("type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(type));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(OrderNo));
            POCS.vPODetSummaryDataTable dataTable = new POCS.vPODetSummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblTransmittalLogTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblTransmittalLogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblTransmittalLog";
            tableMapping.ColumnMappings.Add("TransmittalID", "TransmittalID");
            tableMapping.ColumnMappings.Add("TransmittalSender", "TransmittalSender");
            tableMapping.ColumnMappings.Add("SenderDept", "SenderDept");
            tableMapping.ColumnMappings.Add("TransmittalReceiver", "TransmittalReceiver");
            tableMapping.ColumnMappings.Add("ReceiverDept", "ReceiverDept");
            tableMapping.ColumnMappings.Add("TranmittalDate", "TranmittalDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblTransmittalLog] WHERE (([TransmittalID] = @Original_TransmittalID) AND ([TransmittalSender] = @Original_TransmittalSender) AND ((@IsNull_SenderDept = 1 AND [SenderDept] IS NULL) OR ([SenderDept] = @Original_SenderDept)) AND ([TransmittalReceiver] = @Original_TransmittalReceiver) AND ((@IsNull_ReceiverDept = 1 AND [ReceiverDept] IS NULL) OR ([ReceiverDept] = @Original_ReceiverDept)) AND ([TranmittalDate] = @Original_TranmittalDate))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TransmittalID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalSender", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalSender", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SenderDept", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SenderDept", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SenderDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SenderDept", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalReceiver", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalReceiver", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReceiverDept", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiverDept", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReceiverDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiverDept", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TranmittalDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TranmittalDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblTransmittalLog] ([TransmittalSender], [SenderDept], [TransmittalReceiver], [ReceiverDept], [TranmittalDate]) VALUES (@TransmittalSender, @SenderDept, @TransmittalReceiver, @ReceiverDept, @TranmittalDate);
SELECT TransmittalID, TransmittalSender, SenderDept, TransmittalReceiver, ReceiverDept, TranmittalDate FROM tblTransmittalLog WHERE (TransmittalID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalSender", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalSender", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SenderDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SenderDept", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalReceiver", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalReceiver", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReceiverDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiverDept", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TranmittalDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TranmittalDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblTransmittalLog] SET [TransmittalSender] = @TransmittalSender, [SenderDept] = @SenderDept, [TransmittalReceiver] = @TransmittalReceiver, [ReceiverDept] = @ReceiverDept, [TranmittalDate] = @TranmittalDate WHERE (([TransmittalID] = @Original_TransmittalID) AND ([TransmittalSender] = @Original_TransmittalSender) AND ((@IsNull_SenderDept = 1 AND [SenderDept] IS NULL) OR ([SenderDept] = @Original_SenderDept)) AND ([TransmittalReceiver] = @Original_TransmittalReceiver) AND ((@IsNull_ReceiverDept = 1 AND [ReceiverDept] IS NULL) OR ([ReceiverDept] = @Original_ReceiverDept)) AND ([TranmittalDate] = @Original_TranmittalDate));
SELECT TransmittalID, TransmittalSender, SenderDept, TransmittalReceiver, ReceiverDept, TranmittalDate FROM tblTransmittalLog WHERE (TransmittalID = @TransmittalID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalSender", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalSender", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SenderDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SenderDept", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalReceiver", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalReceiver", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReceiverDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiverDept", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TranmittalDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TranmittalDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TransmittalID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalSender", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalSender", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SenderDept", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SenderDept", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SenderDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SenderDept", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalReceiver", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalReceiver", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReceiverDept", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiverDept", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReceiverDept", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiverDept", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TranmittalDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TranmittalDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "TransmittalID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblTransmittalLog.*\r\nFROM         tblTransmittalLog";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.spInsertTransmittal";
            this._commandCollection[1].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalReceiver", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReceiverDept", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@InvoiceNumbers", System.Data.SqlDbType.VarChar, 1000, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblTransmittalLogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblTransmittalLogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblTransmittalLogDataTable dataTable = new POCS.tblTransmittalLogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblTransmittalLogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblTransmittalLog");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TransmittalID, string Original_TransmittalSender, string Original_SenderDept, string Original_TransmittalReceiver, string Original_ReceiverDept, System.DateTime Original_TranmittalDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TransmittalID));
            if ((Original_TransmittalSender == null)) {
                throw new System.ArgumentNullException("Original_TransmittalSender");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TransmittalSender));
            }
            if ((Original_SenderDept == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SenderDept));
            }
            if ((Original_TransmittalReceiver == null)) {
                throw new System.ArgumentNullException("Original_TransmittalReceiver");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TransmittalReceiver));
            }
            if ((Original_ReceiverDept == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ReceiverDept));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_TranmittalDate));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TransmittalSender, string SenderDept, string TransmittalReceiver, string ReceiverDept, System.DateTime TranmittalDate) {
            if ((TransmittalSender == null)) {
                throw new System.ArgumentNullException("TransmittalSender");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TransmittalSender));
            }
            if ((SenderDept == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SenderDept));
            }
            if ((TransmittalReceiver == null)) {
                throw new System.ArgumentNullException("TransmittalReceiver");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TransmittalReceiver));
            }
            if ((ReceiverDept == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ReceiverDept));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(TranmittalDate));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TransmittalSender, string SenderDept, string TransmittalReceiver, string ReceiverDept, System.DateTime TranmittalDate, decimal Original_TransmittalID, string Original_TransmittalSender, string Original_SenderDept, string Original_TransmittalReceiver, string Original_ReceiverDept, System.DateTime Original_TranmittalDate, decimal TransmittalID) {
            if ((TransmittalSender == null)) {
                throw new System.ArgumentNullException("TransmittalSender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TransmittalSender));
            }
            if ((SenderDept == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SenderDept));
            }
            if ((TransmittalReceiver == null)) {
                throw new System.ArgumentNullException("TransmittalReceiver");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TransmittalReceiver));
            }
            if ((ReceiverDept == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ReceiverDept));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(TranmittalDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_TransmittalID));
            if ((Original_TransmittalSender == null)) {
                throw new System.ArgumentNullException("Original_TransmittalSender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TransmittalSender));
            }
            if ((Original_SenderDept == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SenderDept));
            }
            if ((Original_TransmittalReceiver == null)) {
                throw new System.ArgumentNullException("Original_TransmittalReceiver");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TransmittalReceiver));
            }
            if ((Original_ReceiverDept == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ReceiverDept));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_TranmittalDate));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(TransmittalID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<decimal> spInsertTransmittal(string UserID, string TransmittalReceiver, string ReceiverDept, System.Nullable<System.DateTime> TransmittalDate, string InvoiceNumbers) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserID == null)) {
                command.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(UserID));
            }
            if ((TransmittalReceiver == null)) {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(TransmittalReceiver));
            }
            if ((ReceiverDept == null)) {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(ReceiverDept));
            }
            if ((TransmittalDate.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(TransmittalDate.Value));
            }
            else {
                command.Parameters[4].Value = System.DBNull.Value;
            }
            if ((InvoiceNumbers == null)) {
                command.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(InvoiceNumbers));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<decimal>();
            }
            else {
                return new System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblInvoicesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblInvoicesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblInvoices";
            tableMapping.ColumnMappings.Add("InvoiceID", "InvoiceID");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("PO_Number", "PO_Number");
            tableMapping.ColumnMappings.Add("TransmittalNumber", "TransmittalNumber");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("ReceiptDate", "ReceiptDate");
            tableMapping.ColumnMappings.Add("PO_detailID", "PO_detailID");
            tableMapping.ColumnMappings.Add("SupplyDate", "SupplyDate");
            tableMapping.ColumnMappings.Add("SupplyQuantity", "SupplyQuantity");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblInvoices] WHERE (([InvoiceID] = @Original_InvoiceID) AND ([InvoiceNumber] = @Original_InvoiceNumber) AND ([PO_Number] = @Original_PO_Number) AND ((@IsNull_TransmittalNumber = 1 AND [TransmittalNumber] IS NULL) OR ([TransmittalNumber] = @Original_TransmittalNumber)) AND ((@IsNull_InvoiceDate = 1 AND [InvoiceDate] IS NULL) OR ([InvoiceDate] = @Original_InvoiceDate)) AND ((@IsNull_ReceiptDate = 1 AND [ReceiptDate] IS NULL) OR ([ReceiptDate] = @Original_ReceiptDate)) AND ((@IsNull_PO_detailID = 1 AND [PO_detailID] IS NULL) OR ([PO_detailID] = @Original_PO_detailID)) AND ((@IsNull_SupplyDate = 1 AND [SupplyDate] IS NULL) OR ([SupplyDate] = @Original_SupplyDate)) AND ((@IsNull_SupplyQuantity = 1 AND [SupplyQuantity] IS NULL) OR ([SupplyQuantity] = @Original_SupplyQuantity)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InvoiceID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "InvoiceID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InvoiceNumber", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_Number", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_Number", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TransmittalNumber", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalNumber", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalNumber", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "TransmittalNumber", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_InvoiceDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InvoiceDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReceiptDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiptDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReceiptDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiptDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PO_detailID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_detailID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SupplyDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SupplyDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SupplyQuantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyQuantity", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SupplyQuantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "SupplyQuantity", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblInvoices] ([InvoiceNumber], [PO_Number], [TransmittalNumber], [InvoiceDate], [ReceiptDate], [PO_detailID], [SupplyDate], [SupplyQuantity]) VALUES (@InvoiceNumber, @PO_Number, @TransmittalNumber, @InvoiceDate, @ReceiptDate, @PO_detailID, @SupplyDate, @SupplyQuantity);
SELECT InvoiceID, InvoiceNumber, PO_Number, TransmittalNumber, InvoiceDate, ReceiptDate, PO_detailID, SupplyDate, SupplyQuantity FROM tblInvoices WHERE (InvoiceID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InvoiceNumber", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Number", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_Number", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalNumber", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "TransmittalNumber", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InvoiceDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReceiptDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiptDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SupplyDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SupplyQuantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "SupplyQuantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblInvoices] SET [InvoiceNumber] = @InvoiceNumber, [PO_Number] = @PO_Number, [TransmittalNumber] = @TransmittalNumber, [InvoiceDate] = @InvoiceDate, [ReceiptDate] = @ReceiptDate, [PO_detailID] = @PO_detailID, [SupplyDate] = @SupplyDate, [SupplyQuantity] = @SupplyQuantity WHERE (([InvoiceID] = @Original_InvoiceID) AND ([InvoiceNumber] = @Original_InvoiceNumber) AND ([PO_Number] = @Original_PO_Number) AND ((@IsNull_TransmittalNumber = 1 AND [TransmittalNumber] IS NULL) OR ([TransmittalNumber] = @Original_TransmittalNumber)) AND ((@IsNull_InvoiceDate = 1 AND [InvoiceDate] IS NULL) OR ([InvoiceDate] = @Original_InvoiceDate)) AND ((@IsNull_ReceiptDate = 1 AND [ReceiptDate] IS NULL) OR ([ReceiptDate] = @Original_ReceiptDate)) AND ((@IsNull_PO_detailID = 1 AND [PO_detailID] IS NULL) OR ([PO_detailID] = @Original_PO_detailID)) AND ((@IsNull_SupplyDate = 1 AND [SupplyDate] IS NULL) OR ([SupplyDate] = @Original_SupplyDate)) AND ((@IsNull_SupplyQuantity = 1 AND [SupplyQuantity] IS NULL) OR ([SupplyQuantity] = @Original_SupplyQuantity)));
SELECT InvoiceID, InvoiceNumber, PO_Number, TransmittalNumber, InvoiceDate, ReceiptDate, PO_detailID, SupplyDate, SupplyQuantity FROM tblInvoices WHERE (InvoiceID = @InvoiceID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InvoiceNumber", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_Number", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_Number", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TransmittalNumber", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "TransmittalNumber", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InvoiceDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ReceiptDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiptDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SupplyDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SupplyQuantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "SupplyQuantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InvoiceID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "InvoiceID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InvoiceNumber", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_Number", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_Number", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TransmittalNumber", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TransmittalNumber", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TransmittalNumber", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "TransmittalNumber", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_InvoiceDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_InvoiceDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ReceiptDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiptDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ReceiptDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ReceiptDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PO_detailID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_detailID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SupplyDate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyDate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SupplyDate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyDate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SupplyQuantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SupplyQuantity", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SupplyQuantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "SupplyQuantity", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InvoiceID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "InvoiceID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblInvoices.*\r\nFROM         tblInvoices";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblInvoicesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblInvoicesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblInvoicesDataTable dataTable = new POCS.tblInvoicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblInvoicesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblInvoices");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_InvoiceID, string Original_InvoiceNumber, decimal Original_PO_Number, System.Nullable<decimal> Original_TransmittalNumber, System.Nullable<System.DateTime> Original_InvoiceDate, System.Nullable<System.DateTime> Original_ReceiptDate, System.Nullable<decimal> Original_PO_detailID, System.Nullable<System.DateTime> Original_SupplyDate, System.Nullable<decimal> Original_SupplyQuantity) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_InvoiceID));
            if ((Original_InvoiceNumber == null)) {
                throw new System.ArgumentNullException("Original_InvoiceNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_InvoiceNumber));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PO_Number));
            if ((Original_TransmittalNumber.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_TransmittalNumber.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_ReceiptDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ReceiptDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_PO_detailID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_PO_detailID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_SupplyDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_SupplyDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_SupplyQuantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_SupplyQuantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string InvoiceNumber, decimal PO_Number, System.Nullable<decimal> TransmittalNumber, System.Nullable<System.DateTime> InvoiceDate, System.Nullable<System.DateTime> ReceiptDate, System.Nullable<decimal> PO_detailID, System.Nullable<System.DateTime> SupplyDate, System.Nullable<decimal> SupplyQuantity) {
            if ((InvoiceNumber == null)) {
                throw new System.ArgumentNullException("InvoiceNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(InvoiceNumber));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PO_Number));
            if ((TransmittalNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(TransmittalNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((ReceiptDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ReceiptDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((PO_detailID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PO_detailID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((SupplyDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(SupplyDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((SupplyQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(SupplyQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string InvoiceNumber, 
                    decimal PO_Number, 
                    System.Nullable<decimal> TransmittalNumber, 
                    System.Nullable<System.DateTime> InvoiceDate, 
                    System.Nullable<System.DateTime> ReceiptDate, 
                    System.Nullable<decimal> PO_detailID, 
                    System.Nullable<System.DateTime> SupplyDate, 
                    System.Nullable<decimal> SupplyQuantity, 
                    decimal Original_InvoiceID, 
                    string Original_InvoiceNumber, 
                    decimal Original_PO_Number, 
                    System.Nullable<decimal> Original_TransmittalNumber, 
                    System.Nullable<System.DateTime> Original_InvoiceDate, 
                    System.Nullable<System.DateTime> Original_ReceiptDate, 
                    System.Nullable<decimal> Original_PO_detailID, 
                    System.Nullable<System.DateTime> Original_SupplyDate, 
                    System.Nullable<decimal> Original_SupplyQuantity, 
                    decimal InvoiceID) {
            if ((InvoiceNumber == null)) {
                throw new System.ArgumentNullException("InvoiceNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(InvoiceNumber));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PO_Number));
            if ((TransmittalNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(TransmittalNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((ReceiptDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ReceiptDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((PO_detailID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PO_detailID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((SupplyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(SupplyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((SupplyQuantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(SupplyQuantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_InvoiceID));
            if ((Original_InvoiceNumber == null)) {
                throw new System.ArgumentNullException("Original_InvoiceNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_InvoiceNumber));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_PO_Number));
            if ((Original_TransmittalNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_TransmittalNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_ReceiptDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_ReceiptDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_PO_detailID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_PO_detailID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_SupplyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_SupplyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_SupplyQuantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_SupplyQuantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(InvoiceID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vMSR_POIssuedTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vMSR_POIssuedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vMSR_POIssued";
            tableMapping.ColumnMappings.Add("MSRID", "MSRID");
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            tableMapping.ColumnMappings.Add("MSRDate", "MSRDate");
            tableMapping.ColumnMappings.Add("RecvdDate", "RecvdDate");
            tableMapping.ColumnMappings.Add("RequiredDate", "RequiredDate");
            tableMapping.ColumnMappings.Add("NosItems", "NosItems");
            tableMapping.ColumnMappings.Add("Requestor", "Requestor");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("Approvedby", "Approvedby");
            tableMapping.ColumnMappings.Add("Project", "Project");
            tableMapping.ColumnMappings.Add("Buyer", "Buyer");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("MSRClosedDt", "MSRClosedDt");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("NetValue", "NetValue");
            tableMapping.ColumnMappings.Add("Po_OrderNo", "Po_OrderNo");
            tableMapping.ColumnMappings.Add("PO_Date", "PO_Date");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            tableMapping.ColumnMappings.Add("StatusDesc", "StatusDesc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vMSR_POIssued.*\r\nFROM         vMSR_POIssued";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vMSR_POIssuedDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vMSR_POIssuedDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vMSR_POIssuedDataTable dataTable = new POCS.vMSR_POIssuedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vPOSummaryTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vPOSummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vPOSummary";
            tableMapping.ColumnMappings.Add("Po_OrderNo", "Po_OrderNo");
            tableMapping.ColumnMappings.Add("PO_Date", "PO_Date");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            tableMapping.ColumnMappings.Add("PO_description", "PO_description");
            tableMapping.ColumnMappings.Add("Buyer", "Buyer");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("EndUser", "EndUser");
            tableMapping.ColumnMappings.Add("Project", "Project");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("OrderValue", "OrderValue");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vPOSummary.*\r\nFROM         vPOSummary";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vPOSummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vPOSummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vPOSummaryDataTable dataTable = new POCS.vPOSummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblExpenseCodeTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblExpenseCodeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblExpenseCode";
            tableMapping.ColumnMappings.Add("ExCodeID", "ExCodeID");
            tableMapping.ColumnMappings.Add("ExpenseCode", "ExpenseCode");
            tableMapping.ColumnMappings.Add("ExDescription", "ExDescription");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblExpenseCode] ([ExpenseCode], [ExDescription]) VALUES (@ExpenseCod" +
                "e, @ExDescription)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ExpenseCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ExpenseCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ExDescription", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ExDescription", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblExpenseCode.*\r\nFROM         tblExpenseCode";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ExDescription, ExCodeID, ExpenseCode FROM tblExpenseCode WHERE (ExCodeID =" +
                " @ExCodeID)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ExCodeID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "ExCodeID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblExpenseCodeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblExpenseCodeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblExpenseCodeDataTable dataTable = new POCS.tblExpenseCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillExpenseCodeDescbyID(POCS.tblExpenseCodeDataTable dataTable, decimal ExCodeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ExCodeID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.tblExpenseCodeDataTable GetDataExpenseCodeDescbyID(decimal ExCodeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(ExCodeID));
            POCS.tblExpenseCodeDataTable dataTable = new POCS.tblExpenseCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblExpenseCodeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblExpenseCode");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ExpenseCode, string ExDescription) {
            if ((ExpenseCode == null)) {
                throw new System.ArgumentNullException("ExpenseCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ExpenseCode));
            }
            if ((ExDescription == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ExDescription));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblItemCostDistributionTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblItemCostDistributionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblItemCostDistribution";
            tableMapping.ColumnMappings.Add("DistID", "DistID");
            tableMapping.ColumnMappings.Add("PO_detailID", "PO_detailID");
            tableMapping.ColumnMappings.Add("ChargeCode", "ChargeCode");
            tableMapping.ColumnMappings.Add("DistPercentage", "DistPercentage");
            tableMapping.ColumnMappings.Add("DistValue", "DistValue");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblItemCostDistribution] WHERE (([DistID] = @Original_DistID) AND ([PO_detailID] = @Original_PO_detailID) AND ([ChargeCode] = @Original_ChargeCode) AND ((@IsNull_DistPercentage = 1 AND [DistPercentage] IS NULL) OR ([DistPercentage] = @Original_DistPercentage)) AND ([DistValue] = @Original_DistValue))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DistID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "DistID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeCode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DistPercentage", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DistPercentage", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DistPercentage", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistPercentage", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DistValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistValue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblItemCostDistribution] ([PO_detailID], [ChargeCode], [DistPercentage], [DistValue]) VALUES (@PO_detailID, @ChargeCode, @DistPercentage, @DistValue);
SELECT DistID, PO_detailID, ChargeCode, DistPercentage, DistValue FROM tblItemCostDistribution WHERE (DistID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DistPercentage", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistPercentage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DistValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistValue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblItemCostDistribution] SET [PO_detailID] = @PO_detailID, [ChargeCode] = @ChargeCode, [DistPercentage] = @DistPercentage, [DistValue] = @DistValue WHERE (([DistID] = @Original_DistID) AND ([PO_detailID] = @Original_PO_detailID) AND ([ChargeCode] = @Original_ChargeCode) AND ((@IsNull_DistPercentage = 1 AND [DistPercentage] IS NULL) OR ([DistPercentage] = @Original_DistPercentage)) AND ([DistValue] = @Original_DistValue));
SELECT DistID, PO_detailID, ChargeCode, DistPercentage, DistValue FROM tblItemCostDistribution WHERE (DistID = @DistID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DistPercentage", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistPercentage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DistValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistValue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DistID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "DistID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ChargeCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ChargeCode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DistPercentage", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DistPercentage", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DistPercentage", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistPercentage", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DistValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DistValue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DistID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "DistID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblItemCostDistribution.*\r\nFROM         tblItemCostDistribution";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [tblItemCostDistribution] WHERE  [PO_detailID] = @PO_detailID";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO [tblItemCostDistribution] ([PO_detailID], [ChargeCode], [DistPercenta" +
                "ge], [DistValue]) VALUES (@PO_detailID, @ChargeCode, @DistPercentage, 0);\r\nSELEC" +
                "T  SCOPE_IDENTITY()";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeCode", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "ChargeCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@DistPercentage", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "DistPercentage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO [tblItemCostDistribution] ([PO_detailID], [ChargeCode], [DistPercenta" +
                "ge], [DistValue]) VALUES (@PO_detailID, @ChargeCode, 100, 0);\r\nSELECT SCOPE_IDEN" +
                "TITY()";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ChargeCode", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "ChargeCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblItemCostDistributionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblItemCostDistributionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblItemCostDistributionDataTable dataTable = new POCS.tblItemCostDistributionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblItemCostDistributionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblItemCostDistribution");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DistID, decimal Original_PO_detailID, string Original_ChargeCode, System.Nullable<decimal> Original_DistPercentage, decimal Original_DistValue) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DistID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PO_detailID));
            if ((Original_ChargeCode == null)) {
                throw new System.ArgumentNullException("Original_ChargeCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ChargeCode));
            }
            if ((Original_DistPercentage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_DistPercentage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_DistValue));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PO_detailID, string ChargeCode, System.Nullable<decimal> DistPercentage, decimal DistValue) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PO_detailID));
            if ((ChargeCode == null)) {
                throw new System.ArgumentNullException("ChargeCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ChargeCode));
            }
            if ((DistPercentage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(DistPercentage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(DistValue));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PO_detailID, string ChargeCode, System.Nullable<decimal> DistPercentage, decimal DistValue, decimal Original_DistID, decimal Original_PO_detailID, string Original_ChargeCode, System.Nullable<decimal> Original_DistPercentage, decimal Original_DistValue, decimal DistID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PO_detailID));
            if ((ChargeCode == null)) {
                throw new System.ArgumentNullException("ChargeCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ChargeCode));
            }
            if ((DistPercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(DistPercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(DistValue));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_DistID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_PO_detailID));
            if ((Original_ChargeCode == null)) {
                throw new System.ArgumentNullException("Original_ChargeCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_ChargeCode));
            }
            if ((Original_DistPercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_DistPercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_DistValue));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(DistID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteChargeCodeDistribution(decimal PO_detailID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(PO_detailID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertItemDistribution(decimal PO_detailID, string ChargeCode, System.Nullable<decimal> DistPercentage) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((decimal)(PO_detailID));
            if ((ChargeCode == null)) {
                throw new System.ArgumentNullException("ChargeCode");
            }
            else {
                command.Parameters[1].Value = ((string)(ChargeCode));
            }
            if ((DistPercentage.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(DistPercentage.Value));
            }
            else {
                command.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertItemInitialDistribution(decimal PO_detailID, string ChargeCode) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((decimal)(PO_detailID));
            if ((ChargeCode == null)) {
                throw new System.ArgumentNullException("ChargeCode");
            }
            else {
                command.Parameters[1].Value = ((string)(ChargeCode));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PO_detailsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PO_detailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PO_details";
            tableMapping.ColumnMappings.Add("PO_DetailID", "PO_DetailID");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("Withholding", "Withholding");
            tableMapping.ColumnMappings.Add("MSRNo", "MSRNo");
            tableMapping.ColumnMappings.Add("Period", "Period");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("discountValue", "discountValue");
            tableMapping.ColumnMappings.Add("GroupNote", "GroupNote");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [PO_details] WHERE (([PO_DetailID] = @Original_PO_DetailID) AND ([POID] = @Original_POID) AND ([ItemDescription] = @Original_ItemDescription) AND ([Quantity] = @Original_Quantity) AND ([UOM] = @Original_UOM) AND ([AccountCode] = @Original_AccountCode) AND ([UnitPrice] = @Original_UnitPrice) AND ([Withholding] = @Original_Withholding) AND ([MSRNo] = @Original_MSRNo) AND ([Period] = @Original_Period) AND ([Discount] = @Original_Discount) AND ([discountValue] = @Original_discountValue) AND ((@IsNull_GroupNote = 1 AND [GroupNote] IS NULL) OR ([GroupNote] = @Original_GroupNote)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_DetailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "PO_DetailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ItemDescription", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Quantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "Quantity", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UOM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AccountCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AccountCode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UnitPrice", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 6, "UnitPrice", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Withholding", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Withholding", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Period", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "Period", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Discount", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Discount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_discountValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "discountValue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GroupNote", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GroupNote", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [PO_details] ([POID], [ItemDescription], [Quantity], [UOM], [AccountCode], [UnitPrice], [Withholding], [MSRNo], [Period], [Discount], [discountValue], [GroupNote]) VALUES (@POID, @ItemDescription, @Quantity, @UOM, @AccountCode, @UnitPrice, @Withholding, @MSRNo, @Period, @Discount, @discountValue, @GroupNote);
SELECT PO_DetailID, POID, ItemDescription, Quantity, UOM, AccountCode, UnitPrice, Withholding, MSRNo, Period, Discount, discountValue, GroupNote FROM PO_details WHERE (PO_DetailID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ItemDescription", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UOM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AccountCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AccountCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UnitPrice", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 6, "UnitPrice", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Withholding", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Withholding", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Period", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "Period", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Discount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@discountValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "discountValue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GroupNote", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [PO_details] SET [POID] = @POID, [ItemDescription] = @ItemDescription, [Quantity] = @Quantity, [UOM] = @UOM, [AccountCode] = @AccountCode, [UnitPrice] = @UnitPrice, [Withholding] = @Withholding, [MSRNo] = @MSRNo, [Period] = @Period, [Discount] = @Discount, [discountValue] = @discountValue, [GroupNote] = @GroupNote WHERE (([PO_DetailID] = @Original_PO_DetailID) AND ([POID] = @Original_POID) AND ([ItemDescription] = @Original_ItemDescription) AND ([Quantity] = @Original_Quantity) AND ([UOM] = @Original_UOM) AND ([AccountCode] = @Original_AccountCode) AND ([UnitPrice] = @Original_UnitPrice) AND ([Withholding] = @Original_Withholding) AND ([MSRNo] = @Original_MSRNo) AND ([Period] = @Original_Period) AND ([Discount] = @Original_Discount) AND ([discountValue] = @Original_discountValue) AND ((@IsNull_GroupNote = 1 AND [GroupNote] IS NULL) OR ([GroupNote] = @Original_GroupNote)));
SELECT PO_DetailID, POID, ItemDescription, Quantity, UOM, AccountCode, UnitPrice, Withholding, MSRNo, Period, Discount, discountValue, GroupNote FROM PO_details WHERE (PO_DetailID = @PO_DetailID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ItemDescription", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UOM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AccountCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AccountCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UnitPrice", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 6, "UnitPrice", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Withholding", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Withholding", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Period", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "Period", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Discount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@discountValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "discountValue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GroupNote", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_DetailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "PO_DetailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ItemDescription", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Quantity", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "Quantity", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UOM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UOM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AccountCode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AccountCode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UnitPrice", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 6, "UnitPrice", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Withholding", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Withholding", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MSRNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Period", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "Period", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Discount", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "Discount", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_discountValue", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "discountValue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GroupNote", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GroupNote", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_DetailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "PO_DetailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PO_details.*\r\nFROM         PO_details";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM PO_details\r\nWHERE     (POID = @Original_POID)";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM [PO_details] WHERE (([PO_DetailID] = @Original_PO_DetailID))";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_DetailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "PO_DetailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT AccountCode, Discount, GroupNote, ItemDescription, MSRNo, POID, PO_DetailI" +
                "D, Period, Quantity, UOM, UnitPrice, Withholding, discountValue FROM PO_details " +
                "WHERE (POID = @poid)";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@poid", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT AccountCode, Discount, GroupNote, ItemDescription, MSRNo, POID, PO_DetailI" +
                "D, Period, Quantity, UOM, UnitPrice, Withholding, discountValue FROM PO_details " +
                "WHERE (MSRNo = @MSRNo)";
            this._commandCollection[4].CommandType = System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 15, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"INSERT INTO PO_details
                      (POID, ItemDescription, Quantity, UOM, AccountCode, UnitPrice, Withholding, MSRNo, Period, Discount, discountValue, GroupNote)
VALUES     (@POID,@ItemDescription,@Quantity,@UOM,@AccountCode,@UnitPrice,@Withholding,@MSRNo,@Period,@Discount,@discountValue, @GroupNote);
SELECT SCOPE_IDENTITY()";
            this._commandCollection[5].CommandType = System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ItemDescription", System.Data.SqlDbType.VarChar, 3000, System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 4, "Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UOM", System.Data.SqlDbType.VarChar, 10, System.Data.ParameterDirection.Input, 0, 0, "UOM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@AccountCode", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "AccountCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UnitPrice", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 6, "UnitPrice", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Withholding", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "Withholding", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 15, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Period", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "Period", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "Discount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@discountValue", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "discountValue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new System.Data.SqlClient.SqlParameter("@GroupNote", System.Data.SqlDbType.VarChar, 1000, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"UPDATE [PO_details] SET [POID] = @POID, [ItemDescription] = @ItemDescription, [Quantity] = @Quantity, [UOM] = @UOM, [AccountCode] = @AccountCode, [UnitPrice] = @UnitPrice, [Withholding] = @Withholding, [MSRNo] = @MSRNo, [Period] = @Period, [Discount] = @Discount, [discountValue] = @discountValue, [GroupNote] = @GroupNote WHERE (([PO_DetailID] = @Original_PO_DetailID));";
            this._commandCollection[6].CommandType = System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@POID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "POID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ItemDescription", System.Data.SqlDbType.VarChar, 3000, System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 4, "Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UOM", System.Data.SqlDbType.VarChar, 10, System.Data.ParameterDirection.Input, 0, 0, "UOM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@AccountCode", System.Data.SqlDbType.VarChar, 20, System.Data.ParameterDirection.Input, 0, 0, "AccountCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UnitPrice", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 6, "UnitPrice", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Withholding", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "Withholding", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@MSRNo", System.Data.SqlDbType.VarChar, 15, System.Data.ParameterDirection.Input, 0, 0, "MSRNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Period", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "Period", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Discount", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "Discount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@discountValue", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 2, "discountValue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@GroupNote", System.Data.SqlDbType.VarChar, 1000, System.Data.ParameterDirection.Input, 0, 0, "GroupNote", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_DetailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 10, 0, "PO_DetailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.PO_detailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.PO_detailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.PO_detailsDataTable dataTable = new POCS.PO_detailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(POCS.PO_detailsDataTable dataTable, decimal poid) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(poid));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.PO_detailsDataTable GetDataBy11(decimal poid) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(poid));
            POCS.PO_detailsDataTable dataTable = new POCS.PO_detailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPOIDforMSRNo(POCS.PO_detailsDataTable dataTable, string MSRNo) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(MSRNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual POCS.PO_detailsDataTable GetDataByPOIDforMSRNo(string MSRNo) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(MSRNo));
            }
            POCS.PO_detailsDataTable dataTable = new POCS.PO_detailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.PO_detailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "PO_details");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PO_DetailID, decimal Original_POID, string Original_ItemDescription, decimal Original_Quantity, string Original_UOM, string Original_AccountCode, decimal Original_UnitPrice, decimal Original_Withholding, string Original_MSRNo, decimal Original_Period, decimal Original_Discount, decimal Original_discountValue, string Original_GroupNote) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PO_DetailID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_POID));
            if ((Original_ItemDescription == null)) {
                throw new System.ArgumentNullException("Original_ItemDescription");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ItemDescription));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Quantity));
            if ((Original_UOM == null)) {
                throw new System.ArgumentNullException("Original_UOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UOM));
            }
            if ((Original_AccountCode == null)) {
                throw new System.ArgumentNullException("Original_AccountCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_AccountCode));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_UnitPrice));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Withholding));
            if ((Original_MSRNo == null)) {
                throw new System.ArgumentNullException("Original_MSRNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MSRNo));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_Period));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Discount));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_discountValue));
            if ((Original_GroupNote == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_GroupNote));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal POID, string ItemDescription, decimal Quantity, string UOM, string AccountCode, decimal UnitPrice, decimal Withholding, string MSRNo, decimal Period, decimal Discount, decimal discountValue, string GroupNote) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(POID));
            if ((ItemDescription == null)) {
                throw new System.ArgumentNullException("ItemDescription");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ItemDescription));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Quantity));
            if ((UOM == null)) {
                throw new System.ArgumentNullException("UOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(UOM));
            }
            if ((AccountCode == null)) {
                throw new System.ArgumentNullException("AccountCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(AccountCode));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(UnitPrice));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Withholding));
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MSRNo));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Period));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Discount));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(discountValue));
            if ((GroupNote == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(GroupNote));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal POID, 
                    string ItemDescription, 
                    decimal Quantity, 
                    string UOM, 
                    string AccountCode, 
                    decimal UnitPrice, 
                    decimal Withholding, 
                    string MSRNo, 
                    decimal Period, 
                    decimal Discount, 
                    decimal discountValue, 
                    string GroupNote, 
                    decimal Original_PO_DetailID, 
                    decimal Original_POID, 
                    string Original_ItemDescription, 
                    decimal Original_Quantity, 
                    string Original_UOM, 
                    string Original_AccountCode, 
                    decimal Original_UnitPrice, 
                    decimal Original_Withholding, 
                    string Original_MSRNo, 
                    decimal Original_Period, 
                    decimal Original_Discount, 
                    decimal Original_discountValue, 
                    string Original_GroupNote, 
                    decimal PO_DetailID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(POID));
            if ((ItemDescription == null)) {
                throw new System.ArgumentNullException("ItemDescription");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ItemDescription));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Quantity));
            if ((UOM == null)) {
                throw new System.ArgumentNullException("UOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(UOM));
            }
            if ((AccountCode == null)) {
                throw new System.ArgumentNullException("AccountCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(AccountCode));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(UnitPrice));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Withholding));
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MSRNo));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Period));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Discount));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(discountValue));
            if ((GroupNote == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(GroupNote));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_PO_DetailID));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_POID));
            if ((Original_ItemDescription == null)) {
                throw new System.ArgumentNullException("Original_ItemDescription");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ItemDescription));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_Quantity));
            if ((Original_UOM == null)) {
                throw new System.ArgumentNullException("Original_UOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_UOM));
            }
            if ((Original_AccountCode == null)) {
                throw new System.ArgumentNullException("Original_AccountCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_AccountCode));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_UnitPrice));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_Withholding));
            if ((Original_MSRNo == null)) {
                throw new System.ArgumentNullException("Original_MSRNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_MSRNo));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_Period));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_Discount));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_discountValue));
            if ((Original_GroupNote == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_GroupNote));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(PO_DetailID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteDetails(decimal Original_POID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(Original_POID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteItem(decimal Original_PO_DetailID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((decimal)(Original_PO_DetailID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object InsertOrderItem(decimal POID, string ItemDescription, decimal Quantity, string UOM, string AccountCode, decimal UnitPrice, decimal Withholding, string MSRNo, decimal Period, decimal Discount, decimal discountValue, string GroupNote) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            command.Parameters[0].Value = ((decimal)(POID));
            if ((ItemDescription == null)) {
                throw new System.ArgumentNullException("ItemDescription");
            }
            else {
                command.Parameters[1].Value = ((string)(ItemDescription));
            }
            command.Parameters[2].Value = ((decimal)(Quantity));
            if ((UOM == null)) {
                throw new System.ArgumentNullException("UOM");
            }
            else {
                command.Parameters[3].Value = ((string)(UOM));
            }
            if ((AccountCode == null)) {
                throw new System.ArgumentNullException("AccountCode");
            }
            else {
                command.Parameters[4].Value = ((string)(AccountCode));
            }
            command.Parameters[5].Value = ((decimal)(UnitPrice));
            command.Parameters[6].Value = ((decimal)(Withholding));
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                command.Parameters[7].Value = ((string)(MSRNo));
            }
            command.Parameters[8].Value = ((decimal)(Period));
            command.Parameters[9].Value = ((decimal)(Discount));
            command.Parameters[10].Value = ((decimal)(discountValue));
            if ((GroupNote == null)) {
                command.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(GroupNote));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateDetail(decimal POID, string ItemDescription, decimal Quantity, string UOM, string AccountCode, decimal UnitPrice, decimal Withholding, string MSRNo, decimal Period, decimal Discount, decimal discountValue, string GroupNote, decimal Original_PO_DetailID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            command.Parameters[0].Value = ((decimal)(POID));
            if ((ItemDescription == null)) {
                throw new System.ArgumentNullException("ItemDescription");
            }
            else {
                command.Parameters[1].Value = ((string)(ItemDescription));
            }
            command.Parameters[2].Value = ((decimal)(Quantity));
            if ((UOM == null)) {
                throw new System.ArgumentNullException("UOM");
            }
            else {
                command.Parameters[3].Value = ((string)(UOM));
            }
            if ((AccountCode == null)) {
                throw new System.ArgumentNullException("AccountCode");
            }
            else {
                command.Parameters[4].Value = ((string)(AccountCode));
            }
            command.Parameters[5].Value = ((decimal)(UnitPrice));
            command.Parameters[6].Value = ((decimal)(Withholding));
            if ((MSRNo == null)) {
                throw new System.ArgumentNullException("MSRNo");
            }
            else {
                command.Parameters[7].Value = ((string)(MSRNo));
            }
            command.Parameters[8].Value = ((decimal)(Period));
            command.Parameters[9].Value = ((decimal)(Discount));
            command.Parameters[10].Value = ((decimal)(discountValue));
            if ((GroupNote == null)) {
                command.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(GroupNote));
            }
            command.Parameters[12].Value = ((decimal)(Original_PO_DetailID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblAssetGroupTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblAssetGroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblAssetGroup";
            tableMapping.ColumnMappings.Add("AssetGroupID", "AssetGroupID");
            tableMapping.ColumnMappings.Add("AssetGroup", "AssetGroup");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblAssetGroup] WHERE (([AssetGroupID] = @Original_AssetGroupID) AND " +
                "([AssetGroup] = @Original_AssetGroup))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AssetGroupID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "AssetGroupID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AssetGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AssetGroup", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblAssetGroup] ([AssetGroup]) VALUES (@AssetGroup);\r\nSELECT AssetGro" +
                "upID, AssetGroup FROM tblAssetGroup WHERE (AssetGroupID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssetGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AssetGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblAssetGroup] SET [AssetGroup] = @AssetGroup WHERE (([AssetGroupID] = @O" +
                "riginal_AssetGroupID) AND ([AssetGroup] = @Original_AssetGroup));\r\nSELECT AssetG" +
                "roupID, AssetGroup FROM tblAssetGroup WHERE (AssetGroupID = @AssetGroupID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssetGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AssetGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AssetGroupID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "AssetGroupID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AssetGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AssetGroup", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssetGroupID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "AssetGroupID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblAssetGroup.*\r\nFROM         tblAssetGroup";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblAssetGroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblAssetGroupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblAssetGroupDataTable dataTable = new POCS.tblAssetGroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblAssetGroupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblAssetGroup");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_AssetGroupID, string Original_AssetGroup) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_AssetGroupID));
            if ((Original_AssetGroup == null)) {
                throw new System.ArgumentNullException("Original_AssetGroup");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_AssetGroup));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string AssetGroup) {
            if ((AssetGroup == null)) {
                throw new System.ArgumentNullException("AssetGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(AssetGroup));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AssetGroup, decimal Original_AssetGroupID, string Original_AssetGroup, decimal AssetGroupID) {
            if ((AssetGroup == null)) {
                throw new System.ArgumentNullException("AssetGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(AssetGroup));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_AssetGroupID));
            if ((Original_AssetGroup == null)) {
                throw new System.ArgumentNullException("Original_AssetGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_AssetGroup));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(AssetGroupID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vEARFTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vEARFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vEARF";
            tableMapping.ColumnMappings.Add("po_date", "po_date");
            tableMapping.ColumnMappings.Add("po_orderNO", "po_orderNO");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("Project", "Project");
            tableMapping.ColumnMappings.Add("EndUser", "EndUser");
            tableMapping.ColumnMappings.Add("POID", "POID");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("MSRNO", "MSRNO");
            tableMapping.ColumnMappings.Add("AssetGroup", "AssetGroup");
            tableMapping.ColumnMappings.Add("EarfNo", "EarfNo");
            tableMapping.ColumnMappings.Add("Justification", "Justification");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("NetValue", "NetValue");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vEARF.*\r\nFROM         vEARF";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vEARFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vEARFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vEARFDataTable dataTable = new POCS.vEARFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblExpenseAssetTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblExpenseAssetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblExpenseAsset";
            tableMapping.ColumnMappings.Add("EARID", "EARID");
            tableMapping.ColumnMappings.Add("EARFNO", "EARFNO");
            tableMapping.ColumnMappings.Add("PO_detailID", "PO_detailID");
            tableMapping.ColumnMappings.Add("AssetGroup", "AssetGroup");
            tableMapping.ColumnMappings.Add("Justification", "Justification");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblExpenseAsset] ([EARFNO], [PO_detailID], [AssetGroup], [Justificat" +
                "ion]) VALUES (@EARFNO, @PO_detailID, @AssetGroup, @Justification)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EARFNO", System.Data.SqlDbType.BigInt, 0, System.Data.ParameterDirection.Input, 0, 0, "EARFNO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssetGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "AssetGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Justification", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Justification", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblExpenseAsset.*\r\nFROM         tblExpenseAsset";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE from tblExpenseAsset where po_detailID = @po_DetailID";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@po_DetailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO [tblExpenseAsset] ([EARFNO], [PO_detailID], [AssetGroup], [Justificat" +
                "ion]) VALUES (@EARFNO, @PO_detailID, @AssetGroup, @Justification)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@EARFNO", System.Data.SqlDbType.BigInt, 8, System.Data.ParameterDirection.Input, 0, 0, "EARFNO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_detailID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PO_detailID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@AssetGroup", System.Data.SqlDbType.VarChar, 25, System.Data.ParameterDirection.Input, 0, 0, "AssetGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@Justification", System.Data.SqlDbType.VarChar, 255, System.Data.ParameterDirection.Input, 0, 0, "Justification", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblExpenseAssetDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblExpenseAssetDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblExpenseAssetDataTable dataTable = new POCS.tblExpenseAssetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblExpenseAssetDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblExpenseAsset");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long EARFNO, decimal PO_detailID, string AssetGroup, string Justification) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(EARFNO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PO_detailID));
            if ((AssetGroup == null)) {
                throw new System.ArgumentNullException("AssetGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(AssetGroup));
            }
            if ((Justification == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Justification));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteExpenseAssetByPODetailID(decimal po_DetailID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(po_DetailID));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertEAItem(long EARFNO, decimal PO_detailID, string AssetGroup, string Justification) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((long)(EARFNO));
            command.Parameters[1].Value = ((decimal)(PO_detailID));
            if ((AssetGroup == null)) {
                throw new System.ArgumentNullException("AssetGroup");
            }
            else {
                command.Parameters[2].Value = ((string)(AssetGroup));
            }
            if ((Justification == null)) {
                command.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Justification));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblUserGroupsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblUserGroupsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblUserGroups";
            tableMapping.ColumnMappings.Add("GroupID", "GroupID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserGroup", "UserGroup");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblUserGroups] WHERE (([GroupID] = @Original_GroupID) AND ([UserID] " +
                "= @Original_UserID) AND ([UserGroup] = @Original_UserGroup))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GroupID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserGroup", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblUserGroups] ([UserID], [UserGroup]) VALUES (@UserID, @UserGroup);" +
                "\r\nSELECT GroupID, UserID, UserGroup FROM tblUserGroups WHERE (GroupID = SCOPE_ID" +
                "ENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblUserGroups] SET [UserID] = @UserID, [UserGroup] = @UserGroup WHERE (([GroupID] = @Original_GroupID) AND ([UserID] = @Original_UserID) AND ([UserGroup] = @Original_UserGroup));
SELECT GroupID, UserID, UserGroup FROM tblUserGroups WHERE (GroupID = @GroupID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GroupID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GroupID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_UserGroup", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserGroup", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GroupID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "GroupID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     tblUserGroups.*\r\nFROM         tblUserGroups";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "delete tblUserGroup where UserID = @UserID";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "insert into tblUserGroup (UserID, UserGroup) Values (@UserID, @UserGroup)";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserGroup", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "UserGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "update tblUserGroup set UserGroup = @UserGroup where UserID = @UserID";
            this._commandCollection[3].CommandType = System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserGroup", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "UserGroup", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.Variant, 1024, System.Data.ParameterDirection.Input, 0, 0, "", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.tblUserGroupsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.tblUserGroupsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.tblUserGroupsDataTable dataTable = new POCS.tblUserGroupsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS.tblUserGroupsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POCS dataSet) {
            return this.Adapter.Update(dataSet, "tblUserGroups");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_GroupID, string Original_UserID, string Original_UserGroup) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_GroupID));
            if ((Original_UserID == null)) {
                throw new System.ArgumentNullException("Original_UserID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_UserID));
            }
            if ((Original_UserGroup == null)) {
                throw new System.ArgumentNullException("Original_UserGroup");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UserGroup));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string UserID, string UserGroup) {
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UserID));
            }
            if ((UserGroup == null)) {
                throw new System.ArgumentNullException("UserGroup");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UserGroup));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string UserID, string UserGroup, int Original_GroupID, string Original_UserID, string Original_UserGroup, int GroupID) {
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UserID));
            }
            if ((UserGroup == null)) {
                throw new System.ArgumentNullException("UserGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UserGroup));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_GroupID));
            if ((Original_UserID == null)) {
                throw new System.ArgumentNullException("Original_UserID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_UserID));
            }
            if ((Original_UserGroup == null)) {
                throw new System.ArgumentNullException("Original_UserGroup");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_UserGroup));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(GroupID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUserGroupUserID(object UserID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                command.Parameters[0].Value = ((object)(UserID));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertUserGroupWithUserID(object UserID, object UserGroup) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                command.Parameters[0].Value = ((object)(UserID));
            }
            if ((UserGroup == null)) {
                throw new System.ArgumentNullException("UserGroup");
            }
            else {
                command.Parameters[1].Value = ((object)(UserGroup));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateUserGroupWithUserID(object UserGroup, object UserID) {
            System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((UserGroup == null)) {
                throw new System.ArgumentNullException("UserGroup");
            }
            else {
                command.Parameters[0].Value = ((object)(UserGroup));
            }
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                command.Parameters[1].Value = ((object)(UserID));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vItemCostDistributionSpendingTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vItemCostDistributionSpendingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vItemCostDistributionSpending";
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("UOM", "UOM");
            tableMapping.ColumnMappings.Add("DiscountValue", "DiscountValue");
            tableMapping.ColumnMappings.Add("WithHolding", "WithHolding");
            tableMapping.ColumnMappings.Add("NETVALUE", "NETVALUE");
            tableMapping.ColumnMappings.Add("DistributionValue", "DistributionValue");
            tableMapping.ColumnMappings.Add("ChargeCode", "ChargeCode");
            tableMapping.ColumnMappings.Add("DistPercentage", "DistPercentage");
            tableMapping.ColumnMappings.Add("job_code", "job_code");
            tableMapping.ColumnMappings.Add("jobno", "jobno");
            tableMapping.ColumnMappings.Add("subjobno", "subjobno");
            tableMapping.ColumnMappings.Add("jobno_desc", "jobno_desc");
            tableMapping.ColumnMappings.Add("subjobno_desc", "subjobno_desc");
            tableMapping.ColumnMappings.Add("Po_OrderNO", "Po_OrderNO");
            tableMapping.ColumnMappings.Add("po_Date", "po_Date");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::POCS.Properties.Settings.Default.POS_DBConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     ItemDescription, Quantity, UnitPrice, UOM, DiscountValue, WithHolding, NETVALUE, DistributionValue, ChargeCode, DistPercentage, job_code, jobno, 
                      subjobno, jobno_desc, subjobno_desc, Po_OrderNO, po_Date, VendorName
FROM         vItemCostDistributionSpending";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POCS.vItemCostDistributionSpendingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POCS.vItemCostDistributionSpendingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POCS.vItemCostDistributionSpendingDataTable dataTable = new POCS.vItemCostDistributionSpendingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.IDbCommand[] _commandCollection;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.IDbCommand[4];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new System.Data.SqlClient.SqlConnection(global::POCS.Properties.Settings.Default.POS_DBConnectionString);
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "SELECT COUNT(*) FROM PO_Header";
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).Connection = new System.Data.SqlClient.SqlConnection(global::POCS.Properties.Settings.Default.POS_DBConnectionString);
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandText = "Select CompanyName from Company";
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[1])).CommandType = System.Data.CommandType.Text;
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Connection = new System.Data.SqlClient.SqlConnection(global::POCS.Properties.Settings.Default.POS_DBConnectionString);
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandText = "Select MAX(PO_OrderNO)+1 as NextOrderNumber\r\nfrom po_header\r\nwhere Type=@Type\r\n";
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).CommandType = System.Data.CommandType.Text;
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[2])).Parameters.Add(new System.Data.SqlClient.SqlParameter("@Type", System.Data.SqlDbType.Char, 2, System.Data.ParameterDirection.Input, 0, 0, "Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new System.Data.SqlClient.SqlCommand();
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).Connection = new System.Data.SqlClient.SqlConnection(global::POCS.Properties.Settings.Default.POS_DBConnectionString);
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandText = "SELECT     MSRStatusDesc.*\r\nFROM         MSRStatusDesc";
            ((System.Data.SqlClient.SqlCommand)(this._commandCollection[3])).CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<int> ScalarQuery() {
            System.Data.SqlClient.SqlCommand command = ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<int>();
            }
            else {
                return new System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string SQCompanyName() {
            System.Data.SqlClient.SqlCommand command = ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[1]));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object sqNextOrderNumber(string Type) {
            System.Data.SqlClient.SqlCommand command = ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[2]));
            if ((Type == null)) {
                throw new System.ArgumentNullException("Type");
            }
            else {
                command.Parameters[0].Value = ((string)(Type));
            }
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual System.Nullable<decimal> sqMSRDesc() {
            System.Data.SqlClient.SqlCommand command = ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[3]));
            System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(System.DBNull)))) {
                return new System.Nullable<decimal>();
            }
            else {
                return new System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
    }
}

#pragma warning restore 1591